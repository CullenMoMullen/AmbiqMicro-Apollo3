/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri Nov 09 16:58:28 2018. */

#ifndef PB_MEDIA_PB_H_INCLUDED
#define PB_MEDIA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MediaControl {
    MediaControl_PLAY = 0,
    MediaControl_PAUSE = 1,
    MediaControl_NEXT = 2,
    MediaControl_PREVIOUS = 3,
    MediaControl_PLAY_PAUSE = 4
} MediaControl;
#define _MediaControl_MIN MediaControl_PLAY
#define _MediaControl_MAX MediaControl_PLAY_PAUSE
#define _MediaControl_ARRAYSIZE ((MediaControl)(MediaControl_PLAY_PAUSE+1))

/* Struct definitions */
typedef struct _IssueMediaControl {
    MediaControl control;
/* @@protoc_insertion_point(struct:IssueMediaControl) */
} IssueMediaControl;

/* Default values for struct fields */

/* Initializer values for message structs */
#define IssueMediaControl_init_default           {_MediaControl_MIN}
#define IssueMediaControl_init_zero              {_MediaControl_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define IssueMediaControl_control_tag            1

/* Struct field encoding specification for nanopb */
extern const pb_field_t IssueMediaControl_fields[2];

/* Maximum encoded size of messages (where known) */
#define IssueMediaControl_size                   2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MEDIA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
