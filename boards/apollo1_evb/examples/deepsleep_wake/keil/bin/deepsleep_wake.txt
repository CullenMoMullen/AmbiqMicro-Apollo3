
========================================================================

** ELF Header Information

    File Name: bin\deepsleep_wake.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000099
    Flags: EF_ARM_HASENTRY + EF_ARM_ABI_FLOAT_HARD (0x05000402)

    ARM ELF revision: 5 (ABI version 2)

    Conforms to Hard float procedure-call standard

    Built with
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armasm [4d35e1]
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 16

    Program header offset: 70036 (0x00011194)
    Section header offset: 70068 (0x000111b4)

    Section header string table index: 15

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R + PF_ARM_ENTRY]
    Size : 10144 bytes (5696 bytes in file)
    Virtual address: 0x00000000 (Alignment 8)


========================================================================

** Section #1 'FLASH' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 5624 bytes (alignment 4)
    Address: 0x00000000

    $d
    RESET
    __Vectors
        0x00000000:    100011a8    ....    DCD    268439976
        0x00000004:    00000071    q...    DCD    113
        0x00000008:    0000008d    ....    DCD    141
        0x0000000c:    00000139    9...    DCD    313
        0x00000010:    00000139    9...    DCD    313
        0x00000014:    00000139    9...    DCD    313
        0x00000018:    00000139    9...    DCD    313
        0x0000001c:    00000000    ....    DCD    0
        0x00000020:    00000000    ....    DCD    0
        0x00000024:    00000000    ....    DCD    0
        0x00000028:    00000000    ....    DCD    0
        0x0000002c:    00000093    ....    DCD    147
        0x00000030:    00000093    ....    DCD    147
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    00000093    ....    DCD    147
        0x0000003c:    00000093    ....    DCD    147
        0x00000040:    00000093    ....    DCD    147
        0x00000044:    00000093    ....    DCD    147
        0x00000048:    00000285    ....    DCD    645
        0x0000004c:    00000093    ....    DCD    147
        0x00000050:    00000093    ....    DCD    147
        0x00000054:    00000093    ....    DCD    147
        0x00000058:    00000093    ....    DCD    147
        0x0000005c:    00000093    ....    DCD    147
        0x00000060:    00000093    ....    DCD    147
        0x00000064:    000005f9    ....    DCD    1529
        0x00000068:    00000093    ....    DCD    147
        0x0000006c:    00000093    ....    DCD    147
    $t
    $v0
    Reset_Handler
        0x00000070:    f64e5088    N..P    MOV      r0,#0xed88
        0x00000074:    f2ce0000    ....    MOVT     r0,#0xe000
        0x00000078:    6801        .h      LDR      r1,[r0,#0]
        0x0000007a:    f4410170    A.p.    ORR      r1,r1,#0xf00000
        0x0000007e:    6001        .`      STR      r1,[r0,#0]
        0x00000080:    f3bf8f4f    ..O.    DSB      
        0x00000084:    f3bf8f6f    ..o.    ISB      
        0x00000088:    4802        .H      LDR      r0,[pc,#8] ; [0x94] = 0x99
        0x0000008a:    4700        .G      BX       r0
    am_nmi_isr
        0x0000008c:    e7fe        ..      B        am_nmi_isr ; 0x8c
        0x0000008e:    e7fe        ..      B        0x8e ; am_nmi_isr + 2
    am_memmanage_isr
        0x00000090:    e7fe        ..      B        am_memmanage_isr ; 0x90
    am_adc_isr
    am_brownout_isr
    am_ctimer_isr
    am_debugmon_isr
    am_iomaster0_isr
    am_iomaster1_isr
    am_ioslave_acc_isr
    am_ioslave_ios_isr
    am_pendsv_isr
    am_svcall_isr
    am_systick_isr
    am_uart_isr
    am_vcomp_isr
    am_watchdog_isr
        0x00000092:    e7fe        ..      B        am_adc_isr ; 0x92
    $d
        0x00000094:    00000099    ....    DCD    153
    $t
    !!!main
    __main
        0x00000098:    f000f802    ....    BL       __scatterload ; 0xa0
        0x0000009c:    f000f83c    ..<.    BL       __rt_entry ; 0x118
    !!!scatter
    __scatterload
    __scatterload_rt2
    __scatterload_rt2_thumb_only
        0x000000a0:    a00a        ..      ADR      r0,{pc}+0x2c ; 0xcc
        0x000000a2:    e8900c00    ....    LDM      r0,{r10,r11}
        0x000000a6:    4482        .D      ADD      r10,r10,r0
        0x000000a8:    4483        .D      ADD      r11,r11,r0
        0x000000aa:    f1aa0701    ....    SUB      r7,r10,#1
    __scatterload_null
        0x000000ae:    45da        .E      CMP      r10,r11
        0x000000b0:    d101        ..      BNE      0xb6 ; __scatterload_null + 8
        0x000000b2:    f000f831    ..1.    BL       __rt_entry ; 0x118
        0x000000b6:    f2af0e09    ....    ADR      lr,{pc}-7 ; 0xaf
        0x000000ba:    e8ba000f    ....    LDM      r10!,{r0-r3}
        0x000000be:    f0130f01    ....    TST      r3,#1
        0x000000c2:    bf18        ..      IT       NE
        0x000000c4:    1afb        ..      SUBNE    r3,r7,r3
        0x000000c6:    f0430301    C...    ORR      r3,r3,#1
        0x000000ca:    4718        .G      BX       r3
    $d
        0x000000cc:    0000150c    ....    DCD    5388
        0x000000d0:    0000152c    ,...    DCD    5420
    $t
    !!handler_copy
    __scatterload_copy
        0x000000d4:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000d6:    bf24        $.      ITT      CS
        0x000000d8:    c878        x.      LDMCS    r0!,{r3-r6}
        0x000000da:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000dc:    d8fa        ..      BHI      __scatterload_copy ; 0xd4
        0x000000de:    0752        R.      LSLS     r2,r2,#29
        0x000000e0:    bf24        $.      ITT      CS
        0x000000e2:    c830        0.      LDMCS    r0!,{r4,r5}
        0x000000e4:    c130        0.      STMCS    r1!,{r4,r5}
        0x000000e6:    bf44        D.      ITT      MI
        0x000000e8:    6804        .h      LDRMI    r4,[r0,#0]
        0x000000ea:    600c        .`      STRMI    r4,[r1,#0]
        0x000000ec:    4770        pG      BX       lr
        0x000000ee:    0000        ..      MOVS     r0,r0
    !!handler_zi
    __scatterload_zeroinit
        0x000000f0:    2300        .#      MOVS     r3,#0
        0x000000f2:    2400        .$      MOVS     r4,#0
        0x000000f4:    2500        .%      MOVS     r5,#0
        0x000000f6:    2600        .&      MOVS     r6,#0
        0x000000f8:    3a10        .:      SUBS     r2,r2,#0x10
        0x000000fa:    bf28        (.      IT       CS
        0x000000fc:    c178        x.      STMCS    r1!,{r3-r6}
        0x000000fe:    d8fb        ..      BHI      0xf8 ; __scatterload_zeroinit + 8
        0x00000100:    0752        R.      LSLS     r2,r2,#29
        0x00000102:    bf28        (.      IT       CS
        0x00000104:    c130        0.      STMCS    r1!,{r4,r5}
        0x00000106:    bf48        H.      IT       MI
        0x00000108:    600b        .`      STRMI    r3,[r1,#0]
        0x0000010a:    4770        pG      BX       lr
    .ARM.Collect$$libinit$$00000000
    __rt_lib_init
        0x0000010c:    b51f        ..      PUSH     {r0-r4,lr}
    .ARM.Collect$$libinit$$00000001
    __rt_lib_init_fp_1
        0x0000010e:    f001fa58    ..X.    BL       _fp_init ; 0x15c2
    .ARM.Collect$$libinit$$00000004
    .ARM.Collect$$libinit$$0000000A
    .ARM.Collect$$libinit$$0000000C
    .ARM.Collect$$libinit$$0000000E
    .ARM.Collect$$libinit$$00000011
    .ARM.Collect$$libinit$$00000013
    .ARM.Collect$$libinit$$00000015
    .ARM.Collect$$libinit$$00000017
    .ARM.Collect$$libinit$$00000019
    .ARM.Collect$$libinit$$0000001B
    .ARM.Collect$$libinit$$0000001D
    .ARM.Collect$$libinit$$0000001F
    .ARM.Collect$$libinit$$00000021
    .ARM.Collect$$libinit$$00000023
    .ARM.Collect$$libinit$$00000025
    .ARM.Collect$$libinit$$0000002C
    .ARM.Collect$$libinit$$0000002E
    .ARM.Collect$$libinit$$00000030
    .ARM.Collect$$libinit$$00000032
    .ARM.Collect$$libinit$$00000033
    __rt_lib_init_alloca_1
    __rt_lib_init_argv_1
    __rt_lib_init_atexit_1
    __rt_lib_init_clock_1
    __rt_lib_init_cpp_1
    __rt_lib_init_exceptions_1
    __rt_lib_init_fp_trap_1
    __rt_lib_init_getenv_1
    __rt_lib_init_heap_1
    __rt_lib_init_lc_collate_1
    __rt_lib_init_lc_ctype_1
    __rt_lib_init_lc_monetary_1
    __rt_lib_init_lc_numeric_1
    __rt_lib_init_lc_time_1
    __rt_lib_init_preinit_1
    __rt_lib_init_rand_1
    __rt_lib_init_return
    __rt_lib_init_signal_1
    __rt_lib_init_stdio_1
    __rt_lib_init_user_alloc_1
        0x00000112:    bd1f        ..      POP      {r0-r4,pc}
    .ARM.Collect$$libshutdown$$00000000
    __rt_lib_shutdown
        0x00000114:    b510        ..      PUSH     {r4,lr}
    .ARM.Collect$$libshutdown$$00000002
    .ARM.Collect$$libshutdown$$00000004
    .ARM.Collect$$libshutdown$$00000007
    .ARM.Collect$$libshutdown$$0000000A
    .ARM.Collect$$libshutdown$$0000000C
    .ARM.Collect$$libshutdown$$0000000F
    .ARM.Collect$$libshutdown$$00000010
    __rt_lib_shutdown_cpp_1
    __rt_lib_shutdown_fp_trap_1
    __rt_lib_shutdown_heap_1
    __rt_lib_shutdown_return
    __rt_lib_shutdown_signal_1
    __rt_lib_shutdown_stdio_1
    __rt_lib_shutdown_user_alloc_1
        0x00000116:    bd10        ..      POP      {r4,pc}
    .ARM.Collect$$rtentry$$00000000
    .ARM.Collect$$rtentry$$00000002
    .ARM.Collect$$rtentry$$00000004
    __rt_entry
    __rt_entry_presh_1
    __rt_entry_sh
        0x00000118:    f000f866    ..f.    BL       __user_setup_stackheap ; 0x1e8
        0x0000011c:    4611        .F      MOV      r1,r2
    .ARM.Collect$$rtentry$$00000009
    .ARM.Collect$$rtentry$$0000000A
    __rt_entry_li
    __rt_entry_postsh_1
        0x0000011e:    f7fffff5    ....    BL       __rt_lib_init ; 0x10c
    .ARM.Collect$$rtentry$$0000000C
    .ARM.Collect$$rtentry$$0000000D
    __rt_entry_main
    __rt_entry_postli_1
        0x00000122:    f000fffd    ....    BL       main ; 0x1120
        0x00000126:    f000f884    ....    BL       exit ; 0x232
    .ARM.Collect$$rtexit$$00000000
    __rt_exit
        0x0000012a:    b403        ..      PUSH     {r0,r1}
    .ARM.Collect$$rtexit$$00000002
    .ARM.Collect$$rtexit$$00000003
    __rt_exit_ls
    __rt_exit_prels_1
        0x0000012c:    f7fffff2    ....    BL       __rt_lib_shutdown ; 0x114
    .ARM.Collect$$rtexit$$00000004
    __rt_exit_exit
        0x00000130:    bc03        ..      POP      {r0,r1}
        0x00000132:    f000f88b    ....    BL       _sys_exit ; 0x24c
        0x00000136:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_fault_isr
        0x00000138:    b501        ..      PUSH     {r0,lr}
        0x0000013a:    f01e0f04    ....    TST      lr,#4
        0x0000013e:    bf0a        ..      ITET     EQ
        0x00000140:    f3ef8008    ....    MRSEQ    r0,MSP
        0x00000144:    f3ef8009    ....    MRSNE    r0,PSP
        0x00000148:    f1100008    ....    ADDSEQ   r0,r0,#8
        0x0000014c:    f000fc3a    ..:.    BL       am_util_faultisr_collect_data ; 0x9c4
        0x00000150:    bd01        ..      POP      {r0,pc}
    getStackedReg
        0x00000152:    0080        ..      LSLS     r0,r0,#2
        0x00000154:    1840        @.      ADDS     r0,r0,r1
        0x00000156:    6800        .h      LDR      r0,[r0,#0]
        0x00000158:    4770        pG      BX       lr
        0x0000015a:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_hal_flash_delay
        0x0000015c:    3801        .8      SUBS     r0,#1
        0x0000015e:    d1fd        ..      BNE      am_hal_flash_delay ; 0x15c
        0x00000160:    4770        pG      BX       lr
        0x00000162:    0000        ..      MOVS     r0,r0
    .emb_text
    $v0
    am_hal_interrupt_master_enable
        0x00000164:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000168:    b662        b.      CPSIE    i
        0x0000016a:    4770        pG      BX       lr
    am_hal_interrupt_master_disable
        0x0000016c:    f3ef8010    ....    MRS      r0,PRIMASK
        0x00000170:    b672        r.      CPSID    i
        0x00000172:    4770        pG      BX       lr
    am_hal_interrupt_master_set
        0x00000174:    f3808810    ....    MSR      PRIMASK,r0
        0x00000178:    4770        pG      BX       lr
        0x0000017a:    0000        ..      MOVS     r0,r0
    .text
    $v0
    __user_initial_stackheap
        0x0000017c:    4802        .H      LDR      r0,[pc,#8] ; [0x188] = 0x100001a8
        0x0000017e:    4903        .I      LDR      r1,[pc,#12] ; [0x18c] = 0x100011a8
        0x00000180:    4a01        .J      LDR      r2,[pc,#4] ; [0x188] = 0x100001a8
        0x00000182:    4b03        .K      LDR      r3,[pc,#12] ; [0x190] = 0x100001a8
        0x00000184:    4770        pG      BX       lr
    $d
        0x00000186:    0000        ..      DCW    0
        0x00000188:    100001a8    ....    DCD    268435880
        0x0000018c:    100011a8    ....    DCD    268439976
        0x00000190:    100001a8    ....    DCD    268435880
    $t
    .text
    __aeabi_memclr4
    __aeabi_memclr8
    __rt_memclr_w
        0x00000194:    f04f0200    O...    MOV      r2,#0
    _memset_w
        0x00000198:    b500        ..      PUSH     {lr}
        0x0000019a:    4613        .F      MOV      r3,r2
        0x0000019c:    4694        .F      MOV      r12,r2
        0x0000019e:    4696        .F      MOV      lr,r2
        0x000001a0:    3920         9      SUBS     r1,r1,#0x20
        0x000001a2:    bf22        ".      ITTT     CS
        0x000001a4:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x000001a8:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x000001ac:    f1b10120    .. .    SUBSCS   r1,r1,#0x20
        0x000001b0:    f4bfaff7    ....    BCS.W    0x1a2 ; _memset_w + 10
        0x000001b4:    0709        ..      LSLS     r1,r1,#28
        0x000001b6:    bf28        (.      IT       CS
        0x000001b8:    e8a0500c    ...P    STMCS    r0!,{r2,r3,r12,lr}
        0x000001bc:    bf48        H.      IT       MI
        0x000001be:    c00c        ..      STMMI    r0!,{r2,r3}
        0x000001c0:    f85deb04    ]...    POP      {lr}
        0x000001c4:    0089        ..      LSLS     r1,r1,#2
        0x000001c6:    bf28        (.      IT       CS
        0x000001c8:    f8402b04    @..+    STRCS    r2,[r0],#4
        0x000001cc:    bf08        ..      IT       EQ
        0x000001ce:    4770        pG      BXEQ     lr
        0x000001d0:    bf48        H.      IT       MI
        0x000001d2:    f8202b02     ..+    STRHMI   r2,[r0],#2
        0x000001d6:    f0114f80    ...O    TST      r1,#0x40000000
        0x000001da:    bf18        ..      IT       NE
        0x000001dc:    f8002b01    ...+    STRBNE   r2,[r0],#1
        0x000001e0:    4770        pG      BX       lr
    .text
    __use_two_region_memory
        0x000001e2:    4770        pG      BX       lr
    __rt_heap_escrow$2region
        0x000001e4:    4770        pG      BX       lr
    __rt_heap_expand$2region
        0x000001e6:    4770        pG      BX       lr
    .text
    __user_setup_stackheap
        0x000001e8:    4675        uF      MOV      r5,lr
        0x000001ea:    f000f82b    ..+.    BL       __user_libspace ; 0x244
        0x000001ee:    46ae        .F      MOV      lr,r5
        0x000001f0:    0005        ..      MOVS     r5,r0
        0x000001f2:    4669        iF      MOV      r1,sp
        0x000001f4:    4653        SF      MOV      r3,r10
        0x000001f6:    f0200007     ...    BIC      r0,r0,#7
        0x000001fa:    4685        .F      MOV      sp,r0
        0x000001fc:    b018        ..      ADD      sp,sp,#0x60
        0x000001fe:    b520         .      PUSH     {r5,lr}
        0x00000200:    f7ffffbc    ....    BL       __user_initial_stackheap ; 0x17c
        0x00000204:    e8bd4020    .. @    POP      {r5,lr}
        0x00000208:    f04f0600    O...    MOV      r6,#0
        0x0000020c:    f04f0700    O...    MOV      r7,#0
        0x00000210:    f04f0800    O...    MOV      r8,#0
        0x00000214:    f04f0b00    O...    MOV      r11,#0
        0x00000218:    f0210107    !...    BIC      r1,r1,#7
        0x0000021c:    46ac        .F      MOV      r12,r5
        0x0000021e:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000222:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x00000226:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x0000022a:    e8ac09c0    ....    STM      r12!,{r6-r8,r11}
        0x0000022e:    468d        .F      MOV      sp,r1
        0x00000230:    4770        pG      BX       lr
    .text
    exit
        0x00000232:    b510        ..      PUSH     {r4,lr}
        0x00000234:    4604        .F      MOV      r4,r0
        0x00000236:    f3af8000    ....    NOP.W    
        0x0000023a:    4620         F      MOV      r0,r4
        0x0000023c:    e8bd4010    ...@    POP      {r4,lr}
        0x00000240:    f7ffbf73    ..s.    B.W      __rt_exit ; 0x12a
    .text
    __user_libspace
    __user_perproc_libspace
    __user_perthread_libspace
        0x00000244:    4800        .H      LDR      r0,[pc,#0] ; [0x248] = 0x10000148
        0x00000246:    4770        pG      BX       lr
    $d
        0x00000248:    10000148    H...    DCD    268435784
    $t
    .text
    _sys_exit
        0x0000024c:    4901        .I      LDR      r1,[pc,#4] ; [0x254] = 0x20026
        0x0000024e:    2018        .       MOVS     r0,#0x18
        0x00000250:    beab        ..      BKPT     #0xab
        0x00000252:    e7fe        ..      B        0x252 ; _sys_exit + 6
    $d
        0x00000254:    00020026    &...    DCD    131110
    $t
    .text
    __I$use$semihosting
    __use_no_semihosting_swi
        0x00000258:    4770        pG      BX       lr
    i.am_bsp_low_power_init
    .text
    __semihosting_library_function
    am_bsp_low_power_init
        0x0000025a:    b510        ..      PUSH     {r4,lr}
        0x0000025c:    f000fa86    ....    BL       am_hal_mcuctrl_bucks_enable ; 0x76c
        0x00000260:    f000fb9a    ....    BL       am_hal_vcomp_disable ; 0x998
        0x00000264:    2001        .       MOVS     r0,#1
        0x00000266:    f000faee    ....    BL       am_hal_rtc_osc_select ; 0x846
        0x0000026a:    2001        .       MOVS     r0,#1
        0x0000026c:    f000f9df    ....    BL       am_hal_clkgen_osc_stop ; 0x62e
        0x00000270:    f000fadb    ....    BL       am_hal_rtc_osc_disable ; 0x82a
        0x00000274:    e8bd4010    ...@    POP      {r4,lr}
        0x00000278:    f000ba70    ..p.    B.W      am_hal_mcuctrl_bandgap_disable ; 0x75c
    i.am_bsp_uart_string_print
    am_bsp_uart_string_print
        0x0000027c:    4601        .F      MOV      r1,r0
        0x0000027e:    2000        .       MOVS     r0,#0
        0x00000280:    f000bb78    ..x.    B.W      am_hal_uart_string_transmit_polled ; 0x974
    i.am_clkgen_isr
    am_clkgen_isr
        0x00000284:    b510        ..      PUSH     {r4,lr}
        0x00000286:    2008        .       MOVS     r0,#8
        0x00000288:    f000fac2    ....    BL       am_hal_rtc_int_clear ; 0x810
        0x0000028c:    2101        .!      MOVS     r1,#1
        0x0000028e:    4802        .H      LDR      r0,[pc,#8] ; [0x298] = 0x10000020
        0x00000290:    f000f95e    ..^.    BL       am_devices_led_toggle ; 0x550
        0x00000294:    bd10        ..      POP      {r4,pc}
    $d
        0x00000296:    0000        ..      DCW    0
        0x00000298:    10000020     ...    DCD    268435488
    $t
    i.am_devices_led_array_init
    am_devices_led_array_init
        0x0000029c:    b570        p.      PUSH     {r4-r6,lr}
        0x0000029e:    4605        .F      MOV      r5,r0
        0x000002a0:    460e        .F      MOV      r6,r1
        0x000002a2:    b10d        ..      CBZ      r5,0x2a8 ; am_devices_led_array_init + 12
        0x000002a4:    2e1f        ..      CMP      r6,#0x1f
        0x000002a6:    d900        ..      BLS      0x2aa ; am_devices_led_array_init + 14
        0x000002a8:    bd70        p.      POP      {r4-r6,pc}
        0x000002aa:    2400        .$      MOVS     r4,#0
        0x000002ac:    e004        ..      B        0x2b8 ; am_devices_led_array_init + 28
        0x000002ae:    eb0500c4    ....    ADD      r0,r5,r4,LSL #3
        0x000002b2:    f000f805    ....    BL       am_devices_led_init ; 0x2c0
        0x000002b6:    1c64        d.      ADDS     r4,r4,#1
        0x000002b8:    42b4        .B      CMP      r4,r6
        0x000002ba:    d3f8        ..      BCC      0x2ae ; am_devices_led_array_init + 18
        0x000002bc:    bf00        ..      NOP      
        0x000002be:    e7f3        ..      B        0x2a8 ; am_devices_led_array_init + 12
    i.am_devices_led_init
    am_devices_led_init
        0x000002c0:    b110        ..      CBZ      r0,0x2c8 ; am_devices_led_init + 8
        0x000002c2:    6801        .h      LDR      r1,[r0,#0]
        0x000002c4:    2932        2)      CMP      r1,#0x32
        0x000002c6:    d300        ..      BCC      0x2ca ; am_devices_led_init + 10
        0x000002c8:    4770        pG      BX       lr
        0x000002ca:    7901        .y      LDRB     r1,[r0,#4]
        0x000002cc:    f0010102    ....    AND      r1,r1,#2
        0x000002d0:    2900        .)      CMP      r1,#0
        0x000002d2:    d073        s.      BEQ      0x3bc ; am_devices_led_init + 252
        0x000002d4:    bf00        ..      NOP      
        0x000002d6:    6801        .h      LDR      r1,[r0,#0]
        0x000002d8:    2900        .)      CMP      r1,#0
        0x000002da:    da00        ..      BGE      0x2de ; am_devices_led_init + 30
        0x000002dc:    e035        5.      B        0x34a ; am_devices_led_init + 138
        0x000002de:    2173        s!      MOVS     r1,#0x73
        0x000002e0:    4a70        pJ      LDR      r2,[pc,#448] ; [0x4a4] = 0x40010000
        0x000002e2:    6611        .f      STR      r1,[r2,#0x60]
        0x000002e4:    7801        .x      LDRB     r1,[r0,#0]
        0x000002e6:    f00101f8    ....    AND      r1,r1,#0xf8
        0x000002ea:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x000002ee:    6c09        .l      LDR      r1,[r1,#0x40]
        0x000002f0:    7802        .x      LDRB     r2,[r0,#0]
        0x000002f2:    0752        R.      LSLS     r2,r2,#29
        0x000002f4:    0ed3        ..      LSRS     r3,r2,#27
        0x000002f6:    2207        ."      MOVS     r2,#7
        0x000002f8:    409a        .@      LSLS     r2,r2,r3
        0x000002fa:    4391        .C      BICS     r1,r1,r2
        0x000002fc:    7802        .x      LDRB     r2,[r0,#0]
        0x000002fe:    0752        R.      LSLS     r2,r2,#29
        0x00000300:    0ed3        ..      LSRS     r3,r2,#27
        0x00000302:    2202        ."      MOVS     r2,#2
        0x00000304:    409a        .@      LSLS     r2,r2,r3
        0x00000306:    4311        .C      ORRS     r1,r1,r2
        0x00000308:    7802        .x      LDRB     r2,[r0,#0]
        0x0000030a:    f00202f8    ....    AND      r2,r2,#0xf8
        0x0000030e:    4b65        eK      LDR      r3,[pc,#404] ; [0x4a4] = 0x40010000
        0x00000310:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x00000314:    6411        .d      STR      r1,[r2,#0x40]
        0x00000316:    7801        .x      LDRB     r1,[r0,#0]
        0x00000318:    f00101fc    ....    AND      r1,r1,#0xfc
        0x0000031c:    461a        .F      MOV      r2,r3
        0x0000031e:    5889        .X      LDR      r1,[r1,r2]
        0x00000320:    7802        .x      LDRB     r2,[r0,#0]
        0x00000322:    0792        ..      LSLS     r2,r2,#30
        0x00000324:    0ed3        ..      LSRS     r3,r2,#27
        0x00000326:    22ff        ."      MOVS     r2,#0xff
        0x00000328:    409a        .@      LSLS     r2,r2,r3
        0x0000032a:    4391        .C      BICS     r1,r1,r2
        0x0000032c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000032e:    0792        ..      LSLS     r2,r2,#30
        0x00000330:    0ed3        ..      LSRS     r3,r2,#27
        0x00000332:    2218        ."      MOVS     r2,#0x18
        0x00000334:    409a        .@      LSLS     r2,r2,r3
        0x00000336:    4311        .C      ORRS     r1,r1,r2
        0x00000338:    7802        .x      LDRB     r2,[r0,#0]
        0x0000033a:    f00202fc    ....    AND      r2,r2,#0xfc
        0x0000033e:    4b59        YK      LDR      r3,[pc,#356] ; [0x4a4] = 0x40010000
        0x00000340:    50d1        .P      STR      r1,[r2,r3]
        0x00000342:    2100        .!      MOVS     r1,#0
        0x00000344:    461a        .F      MOV      r2,r3
        0x00000346:    6611        .f      STR      r1,[r2,#0x60]
        0x00000348:    bf00        ..      NOP      
        0x0000034a:    bf00        ..      NOP      
        0x0000034c:    7801        .x      LDRB     r1,[r0,#0]
        0x0000034e:    f001021f    ....    AND      r2,r1,#0x1f
        0x00000352:    2101        .!      MOVS     r1,#1
        0x00000354:    4091        .@      LSLS     r1,r1,r2
        0x00000356:    7802        .x      LDRB     r2,[r0,#0]
        0x00000358:    f0020220    .. .    AND      r2,r2,#0x20
        0x0000035c:    4b51        QK      LDR      r3,[pc,#324] ; [0x4a4] = 0x40010000
        0x0000035e:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x00000362:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x00000366:    7901        .y      LDRB     r1,[r0,#4]
        0x00000368:    f0010101    ....    AND      r1,r1,#1
        0x0000036c:    b171        q.      CBZ      r1,0x38c ; am_devices_led_init + 204
        0x0000036e:    7801        .x      LDRB     r1,[r0,#0]
        0x00000370:    f0010120    .. .    AND      r1,r1,#0x20
        0x00000374:    461a        .F      MOV      r2,r3
        0x00000376:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x0000037a:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x0000037e:    7802        .x      LDRB     r2,[r0,#0]
        0x00000380:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000384:    2201        ."      MOVS     r2,#1
        0x00000386:    409a        .@      LSLS     r2,r2,r3
        0x00000388:    4311        .C      ORRS     r1,r1,r2
        0x0000038a:    e00d        ..      B        0x3a8 ; am_devices_led_init + 232
        0x0000038c:    7801        .x      LDRB     r1,[r0,#0]
        0x0000038e:    f0010120    .. .    AND      r1,r1,#0x20
        0x00000392:    4a44        DJ      LDR      r2,[pc,#272] ; [0x4a4] = 0x40010000
        0x00000394:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000398:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x0000039c:    7802        .x      LDRB     r2,[r0,#0]
        0x0000039e:    f002031f    ....    AND      r3,r2,#0x1f
        0x000003a2:    2201        ."      MOVS     r2,#1
        0x000003a4:    409a        .@      LSLS     r2,r2,r3
        0x000003a6:    4391        .C      BICS     r1,r1,r2
        0x000003a8:    7802        .x      LDRB     r2,[r0,#0]
        0x000003aa:    f0020220    .. .    AND      r2,r2,#0x20
        0x000003ae:    4b3d        =K      LDR      r3,[pc,#244] ; [0x4a4] = 0x40010000
        0x000003b0:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000003b4:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x000003b8:    e072        r.      B        0x4a0 ; am_devices_led_init + 480
        0x000003ba:    e7ff        ..      B        0x3bc ; am_devices_led_init + 252
        0x000003bc:    bf00        ..      NOP      
        0x000003be:    6801        .h      LDR      r1,[r0,#0]
        0x000003c0:    2900        .)      CMP      r1,#0
        0x000003c2:    da00        ..      BGE      0x3c6 ; am_devices_led_init + 262
        0x000003c4:    e035        5.      B        0x432 ; am_devices_led_init + 370
        0x000003c6:    2173        s!      MOVS     r1,#0x73
        0x000003c8:    4a36        6J      LDR      r2,[pc,#216] ; [0x4a4] = 0x40010000
        0x000003ca:    6611        .f      STR      r1,[r2,#0x60]
        0x000003cc:    7801        .x      LDRB     r1,[r0,#0]
        0x000003ce:    f00101f8    ....    AND      r1,r1,#0xf8
        0x000003d2:    eb020151    ..Q.    ADD      r1,r2,r1,LSR #1
        0x000003d6:    6c09        .l      LDR      r1,[r1,#0x40]
        0x000003d8:    7802        .x      LDRB     r2,[r0,#0]
        0x000003da:    0752        R.      LSLS     r2,r2,#29
        0x000003dc:    0ed3        ..      LSRS     r3,r2,#27
        0x000003de:    2207        ."      MOVS     r2,#7
        0x000003e0:    409a        .@      LSLS     r2,r2,r3
        0x000003e2:    4391        .C      BICS     r1,r1,r2
        0x000003e4:    7802        .x      LDRB     r2,[r0,#0]
        0x000003e6:    0752        R.      LSLS     r2,r2,#29
        0x000003e8:    0ed3        ..      LSRS     r3,r2,#27
        0x000003ea:    2206        ."      MOVS     r2,#6
        0x000003ec:    409a        .@      LSLS     r2,r2,r3
        0x000003ee:    4311        .C      ORRS     r1,r1,r2
        0x000003f0:    7802        .x      LDRB     r2,[r0,#0]
        0x000003f2:    f00202f8    ....    AND      r2,r2,#0xf8
        0x000003f6:    4b2b        +K      LDR      r3,[pc,#172] ; [0x4a4] = 0x40010000
        0x000003f8:    eb030252    ..R.    ADD      r2,r3,r2,LSR #1
        0x000003fc:    6411        .d      STR      r1,[r2,#0x40]
        0x000003fe:    7801        .x      LDRB     r1,[r0,#0]
        0x00000400:    f00101fc    ....    AND      r1,r1,#0xfc
        0x00000404:    461a        .F      MOV      r2,r3
        0x00000406:    5889        .X      LDR      r1,[r1,r2]
        0x00000408:    7802        .x      LDRB     r2,[r0,#0]
        0x0000040a:    0792        ..      LSLS     r2,r2,#30
        0x0000040c:    0ed3        ..      LSRS     r3,r2,#27
        0x0000040e:    22ff        ."      MOVS     r2,#0xff
        0x00000410:    409a        .@      LSLS     r2,r2,r3
        0x00000412:    4391        .C      BICS     r1,r1,r2
        0x00000414:    7802        .x      LDRB     r2,[r0,#0]
        0x00000416:    0792        ..      LSLS     r2,r2,#30
        0x00000418:    0ed3        ..      LSRS     r3,r2,#27
        0x0000041a:    2218        ."      MOVS     r2,#0x18
        0x0000041c:    409a        .@      LSLS     r2,r2,r3
        0x0000041e:    4311        .C      ORRS     r1,r1,r2
        0x00000420:    7802        .x      LDRB     r2,[r0,#0]
        0x00000422:    f00202fc    ....    AND      r2,r2,#0xfc
        0x00000426:    4b1f        .K      LDR      r3,[pc,#124] ; [0x4a4] = 0x40010000
        0x00000428:    50d1        .P      STR      r1,[r2,r3]
        0x0000042a:    2100        .!      MOVS     r1,#0
        0x0000042c:    461a        .F      MOV      r2,r3
        0x0000042e:    6611        .f      STR      r1,[r2,#0x60]
        0x00000430:    bf00        ..      NOP      
        0x00000432:    bf00        ..      NOP      
        0x00000434:    7801        .x      LDRB     r1,[r0,#0]
        0x00000436:    f001021f    ....    AND      r2,r1,#0x1f
        0x0000043a:    2101        .!      MOVS     r1,#1
        0x0000043c:    4091        .@      LSLS     r1,r1,r2
        0x0000043e:    7802        .x      LDRB     r2,[r0,#0]
        0x00000440:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000444:    4b17        .K      LDR      r3,[pc,#92] ; [0x4a4] = 0x40010000
        0x00000446:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000044a:    f8c210b4    ....    STR      r1,[r2,#0xb4]
        0x0000044e:    7901        .y      LDRB     r1,[r0,#4]
        0x00000450:    f0010101    ....    AND      r1,r1,#1
        0x00000454:    b171        q.      CBZ      r1,0x474 ; am_devices_led_init + 436
        0x00000456:    7801        .x      LDRB     r1,[r0,#0]
        0x00000458:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000045c:    461a        .F      MOV      r2,r3
        0x0000045e:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000462:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x00000466:    7802        .x      LDRB     r2,[r0,#0]
        0x00000468:    f002031f    ....    AND      r3,r2,#0x1f
        0x0000046c:    2201        ."      MOVS     r2,#1
        0x0000046e:    409a        .@      LSLS     r2,r2,r3
        0x00000470:    4311        .C      ORRS     r1,r1,r2
        0x00000472:    e00d        ..      B        0x490 ; am_devices_led_init + 464
        0x00000474:    7801        .x      LDRB     r1,[r0,#0]
        0x00000476:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000047a:    4a0a        .J      LDR      r2,[pc,#40] ; [0x4a4] = 0x40010000
        0x0000047c:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x00000480:    f8d11088    ....    LDR      r1,[r1,#0x88]
        0x00000484:    7802        .x      LDRB     r2,[r0,#0]
        0x00000486:    f002031f    ....    AND      r3,r2,#0x1f
        0x0000048a:    2201        ."      MOVS     r2,#1
        0x0000048c:    409a        .@      LSLS     r2,r2,r3
        0x0000048e:    4391        .C      BICS     r1,r1,r2
        0x00000490:    7802        .x      LDRB     r2,[r0,#0]
        0x00000492:    f0020220    .. .    AND      r2,r2,#0x20
        0x00000496:    4b03        .K      LDR      r3,[pc,#12] ; [0x4a4] = 0x40010000
        0x00000498:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x0000049c:    f8c21088    ....    STR      r1,[r2,#0x88]
        0x000004a0:    bf00        ..      NOP      
        0x000004a2:    e711        ..      B        0x2c8 ; am_devices_led_init + 8
    $d
        0x000004a4:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_off
    am_devices_led_off
        0x000004a8:    b510        ..      PUSH     {r4,lr}
        0x000004aa:    b128        (.      CBZ      r0,0x4b8 ; am_devices_led_off + 16
        0x000004ac:    291f        .)      CMP      r1,#0x1f
        0x000004ae:    d203        ..      BCS      0x4b8 ; am_devices_led_off + 16
        0x000004b0:    f8502031    P.1     LDR      r2,[r0,r1,LSL #3]
        0x000004b4:    2a32        2*      CMP      r2,#0x32
        0x000004b6:    d300        ..      BCC      0x4ba ; am_devices_led_off + 18
        0x000004b8:    bd10        ..      POP      {r4,pc}
        0x000004ba:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000004be:    7912        .y      LDRB     r2,[r2,#4]
        0x000004c0:    f0020202    ....    AND      r2,r2,#2
        0x000004c4:    b382        ..      CBZ      r2,0x528 ; am_devices_led_off + 128
        0x000004c6:    eb0002c1    ....    ADD      r2,r0,r1,LSL #3
        0x000004ca:    7912        .y      LDRB     r2,[r2,#4]
        0x000004cc:    f0020201    ....    AND      r2,r2,#1
        0x000004d0:    b982        ..      CBNZ     r2,0x4f4 ; am_devices_led_off + 76
        0x000004d2:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000004d6:    f0020220    .. .    AND      r2,r2,#0x20
        0x000004da:    4b1c        .K      LDR      r3,[pc,#112] ; [0x54c] = 0x40010000
        0x000004dc:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x000004e0:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x000004e4:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x000004e8:    f003041f    ....    AND      r4,r3,#0x1f
        0x000004ec:    2301        .#      MOVS     r3,#1
        0x000004ee:    40a3        .@      LSLS     r3,r3,r4
        0x000004f0:    431a        .C      ORRS     r2,r2,r3
        0x000004f2:    e00f        ..      B        0x514 ; am_devices_led_off + 108
        0x000004f4:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x000004f8:    f0020220    .. .    AND      r2,r2,#0x20
        0x000004fc:    4b13        .K      LDR      r3,[pc,#76] ; [0x54c] = 0x40010000
        0x000004fe:    eb0302d2    ....    ADD      r2,r3,r2,LSR #3
        0x00000502:    f8d22088    ...     LDR      r2,[r2,#0x88]
        0x00000506:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x0000050a:    f003041f    ....    AND      r4,r3,#0x1f
        0x0000050e:    2301        .#      MOVS     r3,#1
        0x00000510:    40a3        .@      LSLS     r3,r3,r4
        0x00000512:    439a        .C      BICS     r2,r2,r3
        0x00000514:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x00000518:    f0030320    .. .    AND      r3,r3,#0x20
        0x0000051c:    4c0b        .L      LDR      r4,[pc,#44] ; [0x54c] = 0x40010000
        0x0000051e:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000522:    f8c32088    ...     STR      r2,[r3,#0x88]
        0x00000526:    e00f        ..      B        0x548 ; am_devices_led_off + 160
        0x00000528:    e7ff        ..      B        0x52a ; am_devices_led_off + 130
        0x0000052a:    f8102031    ..1     LDRB     r2,[r0,r1,LSL #3]
        0x0000052e:    f002031f    ....    AND      r3,r2,#0x1f
        0x00000532:    2201        ."      MOVS     r2,#1
        0x00000534:    409a        .@      LSLS     r2,r2,r3
        0x00000536:    f8103031    ..10    LDRB     r3,[r0,r1,LSL #3]
        0x0000053a:    f0030320    .. .    AND      r3,r3,#0x20
        0x0000053e:    4c03        .L      LDR      r4,[pc,#12] ; [0x54c] = 0x40010000
        0x00000540:    eb0403d3    ....    ADD      r3,r4,r3,LSR #3
        0x00000544:    f8c320b4    ...     STR      r2,[r3,#0xb4]
        0x00000548:    bf00        ..      NOP      
        0x0000054a:    e7b5        ..      B        0x4b8 ; am_devices_led_off + 16
    $d
        0x0000054c:    40010000    ...@    DCD    1073807360
    $t
    i.am_devices_led_toggle
    am_devices_led_toggle
        0x00000550:    b570        p.      PUSH     {r4-r6,lr}
        0x00000552:    4604        .F      MOV      r4,r0
        0x00000554:    460d        .F      MOV      r5,r1
        0x00000556:    b12c        ,.      CBZ      r4,0x564 ; am_devices_led_toggle + 20
        0x00000558:    2d1f        .-      CMP      r5,#0x1f
        0x0000055a:    d203        ..      BCS      0x564 ; am_devices_led_toggle + 20
        0x0000055c:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x00000560:    2832        2(      CMP      r0,#0x32
        0x00000562:    d300        ..      BCC      0x566 ; am_devices_led_toggle + 22
        0x00000564:    bd70        p.      POP      {r4-r6,pc}
        0x00000566:    eb0400c5    ....    ADD      r0,r4,r5,LSL #3
        0x0000056a:    7900        .y      LDRB     r0,[r0,#4]
        0x0000056c:    f0000002    ....    AND      r0,r0,#2
        0x00000570:    b1c8        ..      CBZ      r0,0x5a6 ; am_devices_led_toggle + 86
        0x00000572:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x00000576:    f0000020    .. .    AND      r0,r0,#0x20
        0x0000057a:    491e        .I      LDR      r1,[pc,#120] ; [0x5f4] = 0x40010000
        0x0000057c:    eb0100d0    ....    ADD      r0,r1,r0,LSR #3
        0x00000580:    f8d00088    ....    LDR      r0,[r0,#0x88]
        0x00000584:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x00000588:    f001021f    ....    AND      r2,r1,#0x1f
        0x0000058c:    2101        .!      MOVS     r1,#1
        0x0000058e:    4091        .@      LSLS     r1,r1,r2
        0x00000590:    4048        H@      EORS     r0,r0,r1
        0x00000592:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x00000596:    f0010120    .. .    AND      r1,r1,#0x20
        0x0000059a:    4a16        .J      LDR      r2,[pc,#88] ; [0x5f4] = 0x40010000
        0x0000059c:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000005a0:    f8c10088    ....    STR      r0,[r1,#0x88]
        0x000005a4:    e023        #.      B        0x5ee ; am_devices_led_toggle + 158
        0x000005a6:    f8540035    T.5.    LDR      r0,[r4,r5,LSL #3]
        0x000005aa:    f000f899    ....    BL       am_hal_gpio_out_enable_bit_get ; 0x6e0
        0x000005ae:    b178        x.      CBZ      r0,0x5d0 ; am_devices_led_toggle + 128
        0x000005b0:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000005b4:    f000011f    ....    AND      r1,r0,#0x1f
        0x000005b8:    2001        .       MOVS     r0,#1
        0x000005ba:    4088        .@      LSLS     r0,r0,r1
        0x000005bc:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000005c0:    f0010120    .. .    AND      r1,r1,#0x20
        0x000005c4:    4a0b        .J      LDR      r2,[pc,#44] ; [0x5f4] = 0x40010000
        0x000005c6:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000005ca:    f8c100b4    ....    STR      r0,[r1,#0xb4]
        0x000005ce:    e00e        ..      B        0x5ee ; am_devices_led_toggle + 158
        0x000005d0:    f8140035    ..5.    LDRB     r0,[r4,r5,LSL #3]
        0x000005d4:    f000011f    ....    AND      r1,r0,#0x1f
        0x000005d8:    2001        .       MOVS     r0,#1
        0x000005da:    4088        .@      LSLS     r0,r0,r1
        0x000005dc:    f8141035    ..5.    LDRB     r1,[r4,r5,LSL #3]
        0x000005e0:    f0010120    .. .    AND      r1,r1,#0x20
        0x000005e4:    4a03        .J      LDR      r2,[pc,#12] ; [0x5f4] = 0x40010000
        0x000005e6:    eb0201d1    ....    ADD      r1,r2,r1,LSR #3
        0x000005ea:    f8c100a8    ....    STR      r0,[r1,#0xa8]
        0x000005ee:    bf00        ..      NOP      
        0x000005f0:    e7b8        ..      B        0x564 ; am_devices_led_toggle + 20
    $d
        0x000005f2:    0000        ..      DCW    0
        0x000005f4:    40010000    ...@    DCD    1073807360
    $t
    i.am_gpio_isr
    am_gpio_isr
        0x000005f8:    b510        ..      PUSH     {r4,lr}
        0x000005fa:    20c8        .       MOVS     r0,#0xc8
        0x000005fc:    f000f9d2    ....    BL       am_util_delay_ms ; 0x9a4
        0x00000600:    f44f3000    O..0    MOV      r0,#0x20000
        0x00000604:    2100        .!      MOVS     r1,#0
        0x00000606:    f000f855    ..U.    BL       am_hal_gpio_int_clear ; 0x6b4
        0x0000060a:    2100        .!      MOVS     r1,#0
        0x0000060c:    4801        .H      LDR      r0,[pc,#4] ; [0x614] = 0x10000020
        0x0000060e:    f7ffff9f    ....    BL       am_devices_led_toggle ; 0x550
        0x00000612:    bd10        ..      POP      {r4,pc}
    $d
        0x00000614:    10000020     ...    DCD    268435488
    $t
    i.am_hal_clkgen_osc_start
    am_hal_clkgen_osc_start
        0x00000618:    f0100f03    ....    TST      r0,#3
        0x0000061c:    bf08        ..      IT       EQ
        0x0000061e:    4770        pG      BXEQ     lr
        0x00000620:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000624:    68ca        .h      LDR      r2,[r1,#0xc]
        0x00000626:    ea220000    "...    BIC      r0,r2,r0
        0x0000062a:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000062c:    4770        pG      BX       lr
    i.am_hal_clkgen_osc_stop
    am_hal_clkgen_osc_stop
        0x0000062e:    f0100f03    ....    TST      r0,#3
        0x00000632:    bf08        ..      IT       EQ
        0x00000634:    4770        pG      BXEQ     lr
        0x00000636:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000063a:    68ca        .h      LDR      r2,[r1,#0xc]
        0x0000063c:    4310        .C      ORRS     r0,r0,r2
        0x0000063e:    60c8        .`      STR      r0,[r1,#0xc]
        0x00000640:    4770        pG      BX       lr
        0x00000642:    0000        ..      MOVS     r0,r0
    i.am_hal_clkgen_sysclk_get
    am_hal_clkgen_sysclk_get
        0x00000644:    f04f2040    O.@     MOV      r0,#0x40004000
        0x00000648:    6980        .i      LDR      r0,[r0,#0x18]
        0x0000064a:    f0000007    ....    AND      r0,r0,#7
        0x0000064e:    2808        .(      CMP      r0,#8
        0x00000650:    d215        ..      BCS      0x67e ; am_hal_clkgen_sysclk_get + 58
        0x00000652:    e8dff000    ....    TBB      [pc,r0]
    $d
        0x00000656:    0604        ..      DCW    1540
        0x00000658:    0e0c0a08    ....    DCD    235670024
        0x0000065c:    1210        ..      DCW    4624
    $t
        0x0000065e:    4809        .H      LDR      r0,[pc,#36] ; [0x684] = 0x16e3600
        0x00000660:    4770        pG      BX       lr
        0x00000662:    4809        .H      LDR      r0,[pc,#36] ; [0x688] = 0xb71b00
        0x00000664:    4770        pG      BX       lr
        0x00000666:    4809        .H      LDR      r0,[pc,#36] ; [0x68c] = 0x7a1200
        0x00000668:    4770        pG      BX       lr
        0x0000066a:    4809        .H      LDR      r0,[pc,#36] ; [0x690] = 0x5b8d80
        0x0000066c:    4770        pG      BX       lr
        0x0000066e:    4809        .H      LDR      r0,[pc,#36] ; [0x694] = 0x493e00
        0x00000670:    4770        pG      BX       lr
        0x00000672:    4809        .H      LDR      r0,[pc,#36] ; [0x698] = 0x3d0900
        0x00000674:    4770        pG      BX       lr
        0x00000676:    4809        .H      LDR      r0,[pc,#36] ; [0x69c] = 0x3450db
        0x00000678:    4770        pG      BX       lr
        0x0000067a:    4809        .H      LDR      r0,[pc,#36] ; [0x6a0] = 0x2dc6c0
        0x0000067c:    4770        pG      BX       lr
        0x0000067e:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000682:    4770        pG      BX       lr
    $d
        0x00000684:    016e3600    .6n.    DCD    24000000
        0x00000688:    00b71b00    ....    DCD    12000000
        0x0000068c:    007a1200    ..z.    DCD    8000000
        0x00000690:    005b8d80    ..[.    DCD    6000000
        0x00000694:    00493e00    .>I.    DCD    4800000
        0x00000698:    003d0900    ..=.    DCD    4000000
        0x0000069c:    003450db    .P4.    DCD    3428571
        0x000006a0:    002dc6c0    ..-.    DCD    3000000
    $t
    i.am_hal_clkgen_sysclk_select
    am_hal_clkgen_sysclk_select
        0x000006a4:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x000006a8:    2247        G"      MOVS     r2,#0x47
        0x000006aa:    614a        Ja      STR      r2,[r1,#0x14]
        0x000006ac:    6188        .a      STR      r0,[r1,#0x18]
        0x000006ae:    2000        .       MOVS     r0,#0
        0x000006b0:    6148        Ha      STR      r0,[r1,#0x14]
        0x000006b2:    4770        pG      BX       lr
    i.am_hal_gpio_int_clear
    am_hal_gpio_int_clear
        0x000006b4:    4a02        .J      LDR      r2,[pc,#8] ; [0x6c0] = 0x40010000
        0x000006b6:    f8c21218    ....    STR      r1,[r2,#0x218]
        0x000006ba:    f8c20208    ....    STR      r0,[r2,#0x208]
        0x000006be:    4770        pG      BX       lr
    $d
        0x000006c0:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_gpio_int_enable
    am_hal_gpio_int_enable
        0x000006c4:    4a05        .J      LDR      r2,[pc,#20] ; [0x6dc] = 0x40010000
        0x000006c6:    f8d23210    ...2    LDR      r3,[r2,#0x210]
        0x000006ca:    4319        .C      ORRS     r1,r1,r3
        0x000006cc:    f8c21210    ....    STR      r1,[r2,#0x210]
        0x000006d0:    f8d21200    ....    LDR      r1,[r2,#0x200]
        0x000006d4:    4308        .C      ORRS     r0,r0,r1
        0x000006d6:    f8c20200    ....    STR      r0,[r2,#0x200]
        0x000006da:    4770        pG      BX       lr
    $d
        0x000006dc:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_gpio_out_enable_bit_get
    am_hal_gpio_out_enable_bit_get
        0x000006e0:    490a        .I      LDR      r1,[pc,#40] ; [0x70c] = 0x40010000
        0x000006e2:    2201        ."      MOVS     r2,#1
        0x000006e4:    281f        .(      CMP      r0,#0x1f
        0x000006e6:    d908        ..      BLS      0x6fa ; am_hal_gpio_out_enable_bit_get + 26
        0x000006e8:    f8d110a4    ....    LDR      r1,[r1,#0xa4]
        0x000006ec:    3820         8      SUBS     r0,r0,#0x20
        0x000006ee:    fa02f000    ....    LSL      r0,r2,r0
        0x000006f2:    4008        .@      ANDS     r0,r0,r1
        0x000006f4:    bf08        ..      IT       EQ
        0x000006f6:    4770        pG      BXEQ     lr
        0x000006f8:    e006        ..      B        0x708 ; am_hal_gpio_out_enable_bit_get + 40
        0x000006fa:    f8d110a0    ....    LDR      r1,[r1,#0xa0]
        0x000006fe:    fa02f000    ....    LSL      r0,r2,r0
        0x00000702:    4008        .@      ANDS     r0,r0,r1
        0x00000704:    bf08        ..      IT       EQ
        0x00000706:    4770        pG      BXEQ     lr
        0x00000708:    2001        .       MOVS     r0,#1
        0x0000070a:    4770        pG      BX       lr
    $d
        0x0000070c:    40010000    ...@    DCD    1073807360
    $t
    i.am_hal_interrupt_enable
    am_hal_interrupt_enable
        0x00000710:    280f        .(      CMP      r0,#0xf
        0x00000712:    d90a        ..      BLS      0x72a ; am_hal_interrupt_enable + 26
        0x00000714:    3810        .8      SUBS     r0,r0,#0x10
        0x00000716:    f000001f    ....    AND      r0,r0,#0x1f
        0x0000071a:    2101        .!      MOVS     r1,#1
        0x0000071c:    fa01f000    ....    LSL      r0,r1,r0
        0x00000720:    f04f21e0    O..!    MOV      r1,#0xe000e000
        0x00000724:    f8c10100    ....    STR      r0,[r1,#0x100]
        0x00000728:    4770        pG      BX       lr
        0x0000072a:    490b        .I      LDR      r1,[pc,#44] ; [0x758] = 0xe000ed24
        0x0000072c:    2804        .(      CMP      r0,#4
        0x0000072e:    d00d        ..      BEQ      0x74c ; am_hal_interrupt_enable + 60
        0x00000730:    2805        .(      CMP      r0,#5
        0x00000732:    bf04        ..      ITT      EQ
        0x00000734:    6808        .h      LDREQ    r0,[r1,#0]
        0x00000736:    f4403000    @..0    ORREQ    r0,r0,#0x20000
        0x0000073a:    d005        ..      BEQ      0x748 ; am_hal_interrupt_enable + 56
        0x0000073c:    2806        .(      CMP      r0,#6
        0x0000073e:    bf06        ..      ITTE     EQ
        0x00000740:    6808        .h      LDREQ    r0,[r1,#0]
        0x00000742:    f4402080    @..     ORREQ    r0,r0,#0x40000
        0x00000746:    4770        pG      BXNE     lr
        0x00000748:    6008        .`      STR      r0,[r1,#0]
        0x0000074a:    4770        pG      BX       lr
        0x0000074c:    6808        .h      LDR      r0,[r1,#0]
        0x0000074e:    f4403080    @..0    ORR      r0,r0,#0x10000
        0x00000752:    6008        .`      STR      r0,[r1,#0]
        0x00000754:    4770        pG      BX       lr
    $d
        0x00000756:    0000        ..      DCW    0
        0x00000758:    e000ed24    $...    DCD    3758157092
    $t
    i.am_hal_mcuctrl_bandgap_disable
    am_hal_mcuctrl_bandgap_disable
        0x0000075c:    4902        .I      LDR      r1,[pc,#8] ; [0x768] = 0x40020000
        0x0000075e:    f06f0001    o...    MVN      r0,#1
        0x00000762:    f8c100fc    ....    STR      r0,[r1,#0xfc]
        0x00000766:    4770        pG      BX       lr
    $d
        0x00000768:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_bucks_enable
    am_hal_mcuctrl_bucks_enable
        0x0000076c:    4808        .H      LDR      r0,[pc,#32] ; [0x790] = 0x40020000
        0x0000076e:    6901        .i      LDR      r1,[r0,#0x10]
        0x00000770:    f0410102    A...    ORR      r1,r1,#2
        0x00000774:    6101        .a      STR      r1,[r0,#0x10]
        0x00000776:    6901        .i      LDR      r1,[r0,#0x10]
        0x00000778:    f0410101    A...    ORR      r1,r1,#1
        0x0000077c:    6101        .a      STR      r1,[r0,#0x10]
        0x0000077e:    6941        Ai      LDR      r1,[r0,#0x14]
        0x00000780:    f0110f02    ....    TST      r1,#2
        0x00000784:    d0fb        ..      BEQ      0x77e ; am_hal_mcuctrl_bucks_enable + 18
        0x00000786:    6941        Ai      LDR      r1,[r0,#0x14]
        0x00000788:    f0110f01    ....    TST      r1,#1
        0x0000078c:    d0fb        ..      BEQ      0x786 ; am_hal_mcuctrl_bucks_enable + 26
        0x0000078e:    4770        pG      BX       lr
    $d
        0x00000790:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_fault_status
    am_hal_mcuctrl_fault_status
        0x00000794:    490c        .I      LDR      r1,[pc,#48] ; [0x7c8] = 0x40020000
        0x00000796:    f8d121cc    ...!    LDR      r2,[r1,#0x1cc]
        0x0000079a:    f0020301    ....    AND      r3,r2,#1
        0x0000079e:    7003        .p      STRB     r3,[r0,#0]
        0x000007a0:    f3c20340    ..@.    UBFX     r3,r2,#1,#1
        0x000007a4:    7203        .r      STRB     r3,[r0,#8]
        0x000007a6:    f3c20280    ....    UBFX     r2,r2,#2,#1
        0x000007aa:    7402        .t      STRB     r2,[r0,#0x10]
        0x000007ac:    f8d121c4    ...!    LDR      r2,[r1,#0x1c4]
        0x000007b0:    60c2        .`      STR      r2,[r0,#0xc]
        0x000007b2:    6842        Bh      LDR      r2,[r0,#4]
        0x000007b4:    f8d131c0    ...1    LDR      r3,[r1,#0x1c0]
        0x000007b8:    431a        .C      ORRS     r2,r2,r3
        0x000007ba:    6042        B`      STR      r2,[r0,#4]
        0x000007bc:    6942        Bi      LDR      r2,[r0,#0x14]
        0x000007be:    f8d111c8    ....    LDR      r1,[r1,#0x1c8]
        0x000007c2:    4311        .C      ORRS     r1,r1,r2
        0x000007c4:    6141        Aa      STR      r1,[r0,#0x14]
        0x000007c6:    4770        pG      BX       lr
    $d
        0x000007c8:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_mcuctrl_sram_power_set
    am_hal_mcuctrl_sram_power_set
        0x000007cc:    4a02        .J      LDR      r2,[pc,#8] ; [0x7d8] = 0x40020000
        0x000007ce:    f8c20144    ..D.    STR      r0,[r2,#0x144]
        0x000007d2:    f8c21140    ..@.    STR      r1,[r2,#0x140]
        0x000007d6:    4770        pG      BX       lr
    $d
        0x000007d8:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_rtc_alarm_interval_set
    am_hal_rtc_alarm_interval_set
        0x000007dc:    f04f2240    O.@"    MOV      r2,#0x40004000
        0x000007e0:    2808        .(      CMP      r0,#8
        0x000007e2:    bf04        ..      ITT      EQ
        0x000007e4:    2007        .       MOVEQ    r0,#7
        0x000007e6:    21f0        .!      MOVEQ    r1,#0xf0
        0x000007e8:    d009        ..      BEQ      0x7fe ; am_hal_rtc_alarm_interval_set + 34
        0x000007ea:    2809        .(      CMP      r0,#9
        0x000007ec:    bf04        ..      ITT      EQ
        0x000007ee:    2007        .       MOVEQ    r0,#7
        0x000007f0:    21ff        .!      MOVEQ    r1,#0xff
        0x000007f2:    d004        ..      BEQ      0x7fe ; am_hal_rtc_alarm_interval_set + 34
        0x000007f4:    6c91        .l      LDR      r1,[r2,#0x48]
        0x000007f6:    b2c9        ..      UXTB     r1,r1
        0x000007f8:    29f0        .)      CMP      r1,#0xf0
        0x000007fa:    bf28        (.      IT       CS
        0x000007fc:    2100        .!      MOVCS    r1,#0
        0x000007fe:    6d13        .m      LDR      r3,[r2,#0x50]
        0x00000800:    f3600343    `.C.    BFI      r3,r0,#1,#3
        0x00000804:    6513        .e      STR      r3,[r2,#0x50]
        0x00000806:    6c90        .l      LDR      r0,[r2,#0x48]
        0x00000808:    f3610007    a...    BFI      r0,r1,#0,#8
        0x0000080c:    6490        .d      STR      r0,[r2,#0x48]
        0x0000080e:    4770        pG      BX       lr
    i.am_hal_rtc_int_clear
    am_hal_rtc_int_clear
        0x00000810:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x00000814:    f8c10108    ....    STR      r0,[r1,#0x108]
        0x00000818:    4770        pG      BX       lr
    i.am_hal_rtc_int_enable
    am_hal_rtc_int_enable
        0x0000081a:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000081e:    f8d12100    ...!    LDR      r2,[r1,#0x100]
        0x00000822:    4310        .C      ORRS     r0,r0,r2
        0x00000824:    f8c10100    ....    STR      r0,[r1,#0x100]
        0x00000828:    4770        pG      BX       lr
    i.am_hal_rtc_osc_disable
    am_hal_rtc_osc_disable
        0x0000082a:    f04f2040    O.@     MOV      r0,#0x40004000
        0x0000082e:    6d01        .m      LDR      r1,[r0,#0x50]
        0x00000830:    f0410110    A...    ORR      r1,r1,#0x10
        0x00000834:    6501        .e      STR      r1,[r0,#0x50]
        0x00000836:    4770        pG      BX       lr
    i.am_hal_rtc_osc_enable
    am_hal_rtc_osc_enable
        0x00000838:    f04f2040    O.@     MOV      r0,#0x40004000
        0x0000083c:    6d01        .m      LDR      r1,[r0,#0x50]
        0x0000083e:    f0210110    !...    BIC      r1,r1,#0x10
        0x00000842:    6501        .e      STR      r1,[r0,#0x50]
        0x00000844:    4770        pG      BX       lr
    i.am_hal_rtc_osc_select
    am_hal_rtc_osc_select
        0x00000846:    f04f2140    O.@!    MOV      r1,#0x40004000
        0x0000084a:    2800        .(      CMP      r0,#0
        0x0000084c:    68c8        .h      LDR      r0,[r1,#0xc]
        0x0000084e:    bf14        ..      ITE      NE
        0x00000850:    f0400080    @...    ORRNE    r0,r0,#0x80
        0x00000854:    f0200080     ...    BICEQ    r0,r0,#0x80
        0x00000858:    60c8        .`      STR      r0,[r1,#0xc]
        0x0000085a:    4770        pG      BX       lr
    i.am_hal_sysctrl_sleep
    am_hal_sysctrl_sleep
        0x0000085c:    490a        .I      LDR      r1,[pc,#40] ; [0x888] = 0xe000ed10
        0x0000085e:    b148        H.      CBZ      r0,0x874 ; am_hal_sysctrl_sleep + 24
        0x00000860:    480a        .H      LDR      r0,[pc,#40] ; [0x88c] = 0x40020000
        0x00000862:    f8d00250    ..P.    LDR      r0,[r0,#0x250]
        0x00000866:    f0100f01    ....    TST      r0,#1
        0x0000086a:    bf04        ..      ITT      EQ
        0x0000086c:    6808        .h      LDREQ    r0,[r1,#0]
        0x0000086e:    f0400004    @...    ORREQ    r0,r0,#4
        0x00000872:    d002        ..      BEQ      0x87a ; am_hal_sysctrl_sleep + 30
        0x00000874:    6808        .h      LDR      r0,[r1,#0]
        0x00000876:    f0200004     ...    BIC      r0,r0,#4
        0x0000087a:    6008        .`      STR      r0,[r1,#0]
        0x0000087c:    f3bf8f4f    ..O.    DSB      
        0x00000880:    bf30        0.      WFI      
        0x00000882:    f3bf8f6f    ..o.    ISB      
        0x00000886:    4770        pG      BX       lr
    $d
        0x00000888:    e000ed10    ....    DCD    3758157072
        0x0000088c:    40020000    ...@    DCD    1073872896
    $t
    i.am_hal_uart_clock_disable
    am_hal_uart_clock_disable
        0x00000890:    4805        .H      LDR      r0,[pc,#20] ; [0x8a8] = 0x4001c000
        0x00000892:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000894:    f0210108    !...    BIC      r1,r1,#8
        0x00000898:    6301        .c      STR      r1,[r0,#0x30]
        0x0000089a:    f04f2040    O.@     MOV      r0,#0x40004000
        0x0000089e:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x000008a0:    f0210101    !...    BIC      r1,r1,#1
        0x000008a4:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000008a6:    4770        pG      BX       lr
    $d
        0x000008a8:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_clock_enable
    am_hal_uart_clock_enable
        0x000008ac:    f04f2040    O.@     MOV      r0,#0x40004000
        0x000008b0:    6ac1        .j      LDR      r1,[r0,#0x2c]
        0x000008b2:    f0410101    A...    ORR      r1,r1,#1
        0x000008b6:    62c1        .b      STR      r1,[r0,#0x2c]
        0x000008b8:    4804        .H      LDR      r0,[pc,#16] ; [0x8cc] = 0x4001c000
        0x000008ba:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008bc:    f0410108    A...    ORR      r1,r1,#8
        0x000008c0:    6301        .c      STR      r1,[r0,#0x30]
        0x000008c2:    6b01        .k      LDR      r1,[r0,#0x30]
        0x000008c4:    f0410110    A...    ORR      r1,r1,#0x10
        0x000008c8:    6301        .c      STR      r1,[r0,#0x30]
        0x000008ca:    4770        pG      BX       lr
    $d
        0x000008cc:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_config
    am_hal_uart_config
        0x000008d0:    b570        p.      PUSH     {r4-r6,lr}
        0x000008d2:    4c18        .L      LDR      r4,[pc,#96] ; [0x934] = 0x4001c000
        0x000008d4:    460d        .F      MOV      r5,r1
        0x000008d6:    6b20         k      LDR      r0,[r4,#0x30]
        0x000008d8:    f0200001     ...    BIC      r0,r0,#1
        0x000008dc:    f4207040     .@p    BIC      r0,r0,#0x300
        0x000008e0:    6320         c      STR      r0,[r4,#0x30]
        0x000008e2:    680e        .h      LDR      r6,[r1,#0]
        0x000008e4:    f7fffeae    ....    BL       am_hal_clkgen_sysclk_get ; 0x644
        0x000008e8:    0132        2.      LSLS     r2,r6,#4
        0x000008ea:    fbb0f1f2    ....    UDIV     r1,r0,r2
        0x000008ee:    0180        ..      LSLS     r0,r0,#6
        0x000008f0:    fbb0f0f2    ....    UDIV     r0,r0,r2
        0x000008f4:    018a        ..      LSLS     r2,r1,#6
        0x000008f6:    1a80        ..      SUBS     r0,r0,r2
        0x000008f8:    b1d9        ..      CBZ      r1,0x932 ; am_hal_uart_config + 98
        0x000008fa:    6261        ab      STR      r1,[r4,#0x24]
        0x000008fc:    6261        ab      STR      r1,[r4,#0x24]
        0x000008fe:    62a0        .b      STR      r0,[r4,#0x28]
        0x00000900:    6b20         k      LDR      r0,[r4,#0x30]
        0x00000902:    f2403101    @..1    MOV      r1,#0x301
        0x00000906:    4308        .C      ORRS     r0,r0,r1
        0x00000908:    6320         c      STR      r0,[r4,#0x30]
        0x0000090a:    7a29        )z      LDRB     r1,[r5,#8]
        0x0000090c:    6868        hh      LDR      r0,[r5,#4]
        0x0000090e:    2900        .)      CMP      r1,#0
        0x00000910:    bf18        ..      IT       NE
        0x00000912:    2108        .!      MOVNE    r1,#8
        0x00000914:    4308        .C      ORRS     r0,r0,r1
        0x00000916:    68e9        .h      LDR      r1,[r5,#0xc]
        0x00000918:    4308        .C      ORRS     r0,r0,r1
        0x0000091a:    6ae1        .j      LDR      r1,[r4,#0x2c]
        0x0000091c:    4308        .C      ORRS     r0,r0,r1
        0x0000091e:    62e0        .b      STR      r0,[r4,#0x2c]
        0x00000920:    6b20         k      LDR      r0,[r4,#0x30]
        0x00000922:    6929        )i      LDR      r1,[r5,#0x10]
        0x00000924:    4308        .C      ORRS     r0,r0,r1
        0x00000926:    6320         c      STR      r0,[r4,#0x30]
        0x00000928:    6b20         k      LDR      r0,[r4,#0x30]
        0x0000092a:    f0400010    @...    ORR      r0,r0,#0x10
        0x0000092e:    6320         c      STR      r0,[r4,#0x30]
        0x00000930:    bd70        p.      POP      {r4-r6,pc}
        0x00000932:    e7fe        ..      B        0x932 ; am_hal_uart_config + 98
    $d
        0x00000934:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_disable
    am_hal_uart_disable
        0x00000938:    4803        .H      LDR      r0,[pc,#12] ; [0x948] = 0x4001c000
        0x0000093a:    6b01        .k      LDR      r1,[r0,#0x30]
        0x0000093c:    f0210101    !...    BIC      r1,r1,#1
        0x00000940:    f4217140    !.@q    BIC      r1,r1,#0x300
        0x00000944:    6301        .c      STR      r1,[r0,#0x30]
        0x00000946:    4770        pG      BX       lr
    $d
        0x00000948:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_enable
    am_hal_uart_enable
        0x0000094c:    4803        .H      LDR      r0,[pc,#12] ; [0x95c] = 0x4001c000
        0x0000094e:    6b01        .k      LDR      r1,[r0,#0x30]
        0x00000950:    f2403201    @..2    MOV      r2,#0x301
        0x00000954:    4311        .C      ORRS     r1,r1,r2
        0x00000956:    6301        .c      STR      r1,[r0,#0x30]
        0x00000958:    4770        pG      BX       lr
    $d
        0x0000095a:    0000        ..      DCW    0
        0x0000095c:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_fifo_config
    am_hal_uart_fifo_config
        0x00000960:    4803        .H      LDR      r0,[pc,#12] ; [0x970] = 0x4001c000
        0x00000962:    6ac2        .j      LDR      r2,[r0,#0x2c]
        0x00000964:    f0420210    B...    ORR      r2,r2,#0x10
        0x00000968:    62c2        .b      STR      r2,[r0,#0x2c]
        0x0000096a:    6341        Ac      STR      r1,[r0,#0x34]
        0x0000096c:    4770        pG      BX       lr
    $d
        0x0000096e:    0000        ..      DCW    0
        0x00000970:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_uart_string_transmit_polled
    am_hal_uart_string_transmit_polled
        0x00000974:    7808        .x      LDRB     r0,[r1,#0]
        0x00000976:    2800        .(      CMP      r0,#0
        0x00000978:    bf14        ..      ITE      NE
        0x0000097a:    4806        .H      LDRNE    r0,[pc,#24] ; [0x994] = 0x4001c000
        0x0000097c:    4770        pG      BXEQ     lr
        0x0000097e:    6982        .i      LDR      r2,[r0,#0x18]
        0x00000980:    f0120f20    .. .    TST      r2,#0x20
        0x00000984:    d1fb        ..      BNE      0x97e ; am_hal_uart_string_transmit_polled + 10
        0x00000986:    f8112b01    ...+    LDRB     r2,[r1],#1
        0x0000098a:    6002        .`      STR      r2,[r0,#0]
        0x0000098c:    780a        .x      LDRB     r2,[r1,#0]
        0x0000098e:    2a00        .*      CMP      r2,#0
        0x00000990:    d1f5        ..      BNE      0x97e ; am_hal_uart_string_transmit_polled + 10
        0x00000992:    4770        pG      BX       lr
    $d
        0x00000994:    4001c000    ...@    DCD    1073856512
    $t
    i.am_hal_vcomp_disable
    am_hal_vcomp_disable
        0x00000998:    4901        .I      LDR      r1,[pc,#4] ; [0x9a0] = 0x4000c000
        0x0000099a:    2037        7       MOVS     r0,#0x37
        0x0000099c:    6088        .`      STR      r0,[r1,#8]
        0x0000099e:    4770        pG      BX       lr
    $d
        0x000009a0:    4000c000    ...@    DCD    1073790976
    $t
    i.am_util_delay_ms
    am_util_delay_ms
        0x000009a4:    b570        p.      PUSH     {r4-r6,lr}
        0x000009a6:    4604        .F      MOV      r4,r0
        0x000009a8:    f7fffe4c    ..L.    BL       am_hal_clkgen_sysclk_get ; 0x644
        0x000009ac:    4606        .F      MOV      r6,r0
        0x000009ae:    f64030b8    @..0    MOV      r0,#0xbb8
        0x000009b2:    fbb6f0f0    ....    UDIV     r0,r6,r0
        0x000009b6:    fb00f504    ....    MUL      r5,r0,r4
        0x000009ba:    4628        (F      MOV      r0,r5
        0x000009bc:    f7fffbce    ....    BL       am_hal_flash_delay ; 0x15c
        0x000009c0:    bd70        p.      POP      {r4-r6,pc}
        0x000009c2:    0000        ..      MOVS     r0,r0
    i.am_util_faultisr_collect_data
    am_util_faultisr_collect_data
        0x000009c4:    b092        ..      SUB      sp,sp,#0x48
        0x000009c6:    4604        .F      MOV      r4,r0
        0x000009c8:    2118        .!      MOVS     r1,#0x18
        0x000009ca:    4668        hF      MOV      r0,sp
        0x000009cc:    f7fffbe2    ....    BL       __aeabi_memclr4 ; 0x194
        0x000009d0:    2500        .%      MOVS     r5,#0
        0x000009d2:    9510        ..      STR      r5,[sp,#0x40]
        0x000009d4:    4828        (H      LDR      r0,[pc,#160] ; [0xa78] = 0xe000ed28
        0x000009d6:    6800        .h      LDR      r0,[r0,#0]
        0x000009d8:    9010        ..      STR      r0,[sp,#0x40]
        0x000009da:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009dc:    b2c0        ..      UXTB     r0,r0
        0x000009de:    f88d0044    ..D.    STRB     r0,[sp,#0x44]
        0x000009e2:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009e4:    0a00        ..      LSRS     r0,r0,#8
        0x000009e6:    f88d0045    ..E.    STRB     r0,[sp,#0x45]
        0x000009ea:    9810        ..      LDR      r0,[sp,#0x40]
        0x000009ec:    f64f71ff    O..q    MOV      r1,#0xffff
        0x000009f0:    ea014010    ...@    AND      r0,r1,r0,LSR #16
        0x000009f4:    f8ad0046    ..F.    STRH     r0,[sp,#0x46]
        0x000009f8:    481f        .H      LDR      r0,[pc,#124] ; [0xa78] = 0xe000ed28
        0x000009fa:    3010        .0      ADDS     r0,r0,#0x10
        0x000009fc:    6800        .h      LDR      r0,[r0,#0]
        0x000009fe:    900f        ..      STR      r0,[sp,#0x3c]
        0x00000a00:    f89d0045    ..E.    LDRB     r0,[sp,#0x45]
        0x00000a04:    f0000002    ....    AND      r0,r0,#2
        0x00000a08:    b120         .      CBZ      r0,0xa14 ; am_util_faultisr_collect_data + 80
        0x00000a0a:    4621        !F      MOV      r1,r4
        0x00000a0c:    2006        .       MOVS     r0,#6
        0x00000a0e:    f7fffba0    ....    BL       getStackedReg ; 0x152
        0x00000a12:    e001        ..      B        0xa18 ; am_util_faultisr_collect_data + 84
        0x00000a14:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x00000a18:    900e        ..      STR      r0,[sp,#0x38]
        0x00000a1a:    4621        !F      MOV      r1,r4
        0x00000a1c:    2000        .       MOVS     r0,#0
        0x00000a1e:    f7fffb98    ....    BL       getStackedReg ; 0x152
        0x00000a22:    9006        ..      STR      r0,[sp,#0x18]
        0x00000a24:    4621        !F      MOV      r1,r4
        0x00000a26:    2001        .       MOVS     r0,#1
        0x00000a28:    f7fffb93    ....    BL       getStackedReg ; 0x152
        0x00000a2c:    9007        ..      STR      r0,[sp,#0x1c]
        0x00000a2e:    4621        !F      MOV      r1,r4
        0x00000a30:    2002        .       MOVS     r0,#2
        0x00000a32:    f7fffb8e    ....    BL       getStackedReg ; 0x152
        0x00000a36:    9008        ..      STR      r0,[sp,#0x20]
        0x00000a38:    4621        !F      MOV      r1,r4
        0x00000a3a:    2003        .       MOVS     r0,#3
        0x00000a3c:    f7fffb89    ....    BL       getStackedReg ; 0x152
        0x00000a40:    9009        ..      STR      r0,[sp,#0x24]
        0x00000a42:    4621        !F      MOV      r1,r4
        0x00000a44:    2004        .       MOVS     r0,#4
        0x00000a46:    f7fffb84    ....    BL       getStackedReg ; 0x152
        0x00000a4a:    900a        ..      STR      r0,[sp,#0x28]
        0x00000a4c:    4621        !F      MOV      r1,r4
        0x00000a4e:    2005        .       MOVS     r0,#5
        0x00000a50:    f7fffb7f    ....    BL       getStackedReg ; 0x152
        0x00000a54:    900b        ..      STR      r0,[sp,#0x2c]
        0x00000a56:    4621        !F      MOV      r1,r4
        0x00000a58:    2006        .       MOVS     r0,#6
        0x00000a5a:    f7fffb7a    ..z.    BL       getStackedReg ; 0x152
        0x00000a5e:    900c        ..      STR      r0,[sp,#0x30]
        0x00000a60:    4621        !F      MOV      r1,r4
        0x00000a62:    2007        .       MOVS     r0,#7
        0x00000a64:    f7fffb75    ..u.    BL       getStackedReg ; 0x152
        0x00000a68:    900d        ..      STR      r0,[sp,#0x34]
        0x00000a6a:    4668        hF      MOV      r0,sp
        0x00000a6c:    f7fffe92    ....    BL       am_hal_mcuctrl_fault_status ; 0x794
        0x00000a70:    bf00        ..      NOP      
        0x00000a72:    bf00        ..      NOP      
        0x00000a74:    e7fe        ..      B        0xa74 ; am_util_faultisr_collect_data + 176
    $d
        0x00000a76:    0000        ..      DCW    0
        0x00000a78:    e000ed28    (...    DCD    3758157096
    $t
    i.am_util_stdio_printf
    am_util_stdio_printf
        0x00000a7c:    b40f        ..      PUSH     {r0-r3}
        0x00000a7e:    b538        8.      PUSH     {r3-r5,lr}
        0x00000a80:    480b        .H      LDR      r0,[pc,#44] ; [0xab0] = 0x10000014
        0x00000a82:    6800        .h      LDR      r0,[r0,#0]
        0x00000a84:    b918        ..      CBNZ     r0,0xa8e ; am_util_stdio_printf + 18
        0x00000a86:    2000        .       MOVS     r0,#0
        0x00000a88:    bc38        8.      POP      {r3-r5}
        0x00000a8a:    f85dfb14    ]...    LDR      pc,[sp],#0x14
        0x00000a8e:    a805        ..      ADD      r0,sp,#0x14
        0x00000a90:    9000        ..      STR      r0,[sp,#0]
        0x00000a92:    4808        .H      LDR      r0,[pc,#32] ; [0xab4] = 0x10000048
        0x00000a94:    9a00        ..      LDR      r2,[sp,#0]
        0x00000a96:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000a98:    f000f824    ..$.    BL       am_util_stdio_vsprintf ; 0xae4
        0x00000a9c:    4604        .F      MOV      r4,r0
        0x00000a9e:    2000        .       MOVS     r0,#0
        0x00000aa0:    9000        ..      STR      r0,[sp,#0]
        0x00000aa2:    4804        .H      LDR      r0,[pc,#16] ; [0xab4] = 0x10000048
        0x00000aa4:    4902        .I      LDR      r1,[pc,#8] ; [0xab0] = 0x10000014
        0x00000aa6:    6809        .h      LDR      r1,[r1,#0]
        0x00000aa8:    4788        .G      BLX      r1
        0x00000aaa:    4620         F      MOV      r0,r4
        0x00000aac:    e7ec        ..      B        0xa88 ; am_util_stdio_printf + 12
    $d
        0x00000aae:    0000        ..      DCW    0
        0x00000ab0:    10000014    ....    DCD    268435476
        0x00000ab4:    10000048    H...    DCD    268435528
    $t
    i.am_util_stdio_printf_init
    am_util_stdio_printf_init
        0x00000ab8:    4901        .I      LDR      r1,[pc,#4] ; [0xac0] = 0x10000014
        0x00000aba:    6008        .`      STR      r0,[r1,#0]
        0x00000abc:    4770        pG      BX       lr
    $d
        0x00000abe:    0000        ..      DCW    0
        0x00000ac0:    10000014    ....    DCD    268435476
    $t
    i.am_util_stdio_terminal_clear
    am_util_stdio_terminal_clear
        0x00000ac4:    b510        ..      PUSH     {r4,lr}
        0x00000ac6:    a002        ..      ADR      r0,{pc}+0xa ; 0xad0
        0x00000ac8:    f7ffffd8    ....    BL       am_util_stdio_printf ; 0xa7c
        0x00000acc:    bd10        ..      POP      {r4,pc}
    $d
        0x00000ace:    0000        ..      DCW    0
        0x00000ad0:    0a0a0a0a    ....    DCD    168430090
        0x00000ad4:    0a0a0a0a    ....    DCD    168430090
        0x00000ad8:    0a0a0a0a    ....    DCD    168430090
        0x00000adc:    0a0a0a0a    ....    DCD    168430090
        0x00000ae0:    00000a0a    ....    DCD    2570
    $t
    i.am_util_stdio_vsprintf
    am_util_stdio_vsprintf
        0x00000ae4:    e92d4ff7    -..O    PUSH     {r0-r2,r4-r11,lr}
        0x00000ae8:    ed2d8b02    -...    VPUSH    {d8}
        0x00000aec:    b08a        ..      SUB      sp,sp,#0x28
        0x00000aee:    4604        .F      MOV      r4,r0
        0x00000af0:    460d        .F      MOV      r5,r1
        0x00000af2:    f04f0900    O...    MOV      r9,#0
        0x00000af6:    2000        .       MOVS     r0,#0
        0x00000af8:    9000        ..      STR      r0,[sp,#0]
        0x00000afa:    e1b9        ..      B        0xe70 ; am_util_stdio_vsprintf + 908
        0x00000afc:    2006        .       MOVS     r0,#6
        0x00000afe:    9006        ..      STR      r0,[sp,#0x18]
        0x00000b00:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b02:    2825        %(      CMP      r0,#0x25
        0x00000b04:    d012        ..      BEQ      0xb2c ; am_util_stdio_vsprintf + 72
        0x00000b06:    b16c        l.      CBZ      r4,0xb24 ; am_util_stdio_vsprintf + 64
        0x00000b08:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b0a:    280a        .(      CMP      r0,#0xa
        0x00000b0c:    d107        ..      BNE      0xb1e ; am_util_stdio_vsprintf + 58
        0x00000b0e:    48de        .H      LDR      r0,[pc,#888] ; [0xe88] = 0x10000018
        0x00000b10:    7800        .x      LDRB     r0,[r0,#0]
        0x00000b12:    b120         .      CBZ      r0,0xb1e ; am_util_stdio_vsprintf + 58
        0x00000b14:    200d        .       MOVS     r0,#0xd
        0x00000b16:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b1a:    f1090901    ....    ADD      r9,r9,#1
        0x00000b1e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b20:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000b24:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b26:    f1090901    ....    ADD      r9,r9,#1
        0x00000b2a:    e1a1        ..      B        0xe70 ; am_util_stdio_vsprintf + 908
        0x00000b2c:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b2e:    2000        .       MOVS     r0,#0
        0x00000b30:    9002        ..      STR      r0,[sp,#8]
        0x00000b32:    9003        ..      STR      r0,[sp,#0xc]
        0x00000b34:    2020                MOVS     r0,#0x20
        0x00000b36:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b38:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b3a:    2830        0(      CMP      r0,#0x30
        0x00000b3c:    d101        ..      BNE      0xb42 ; am_util_stdio_vsprintf + 94
        0x00000b3e:    9004        ..      STR      r0,[sp,#0x10]
        0x00000b40:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b42:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b44:    4628        (F      MOV      r0,r5
        0x00000b46:    f000f9a7    ....    BL       decstr_to_int ; 0xe98
        0x00000b4a:    4606        .F      MOV      r6,r0
        0x00000b4c:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b4e:    4405        .D      ADD      r5,r5,r0
        0x00000b50:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b52:    2873        s(      CMP      r0,#0x73
        0x00000b54:    d002        ..      BEQ      0xb5c ; am_util_stdio_vsprintf + 120
        0x00000b56:    2e00        ..      CMP      r6,#0
        0x00000b58:    da00        ..      BGE      0xb5c ; am_util_stdio_vsprintf + 120
        0x00000b5a:    4276        vB      RSBS     r6,r6,#0
        0x00000b5c:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b5e:    282e        .(      CMP      r0,#0x2e
        0x00000b60:    d107        ..      BNE      0xb72 ; am_util_stdio_vsprintf + 142
        0x00000b62:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b64:    a907        ..      ADD      r1,sp,#0x1c
        0x00000b66:    4628        (F      MOV      r0,r5
        0x00000b68:    f000f996    ....    BL       decstr_to_int ; 0xe98
        0x00000b6c:    9006        ..      STR      r0,[sp,#0x18]
        0x00000b6e:    9807        ..      LDR      r0,[sp,#0x1c]
        0x00000b70:    4405        .D      ADD      r5,r5,r0
        0x00000b72:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b74:    286c        l(      CMP      r0,#0x6c
        0x00000b76:    d106        ..      BNE      0xb86 ; am_util_stdio_vsprintf + 162
        0x00000b78:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b7a:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b7c:    286c        l(      CMP      r0,#0x6c
        0x00000b7e:    d102        ..      BNE      0xb86 ; am_util_stdio_vsprintf + 162
        0x00000b80:    1c6d        m.      ADDS     r5,r5,#1
        0x00000b82:    2001        .       MOVS     r0,#1
        0x00000b84:    9002        ..      STR      r0,[sp,#8]
        0x00000b86:    7828        (x      LDRB     r0,[r5,#0]
        0x00000b88:    2866        f(      CMP      r0,#0x66
        0x00000b8a:    d06f        o.      BEQ      0xc6c ; am_util_stdio_vsprintf + 392
        0x00000b8c:    dc08        ..      BGT      0xba0 ; am_util_stdio_vsprintf + 188
        0x00000b8e:    2846        F(      CMP      r0,#0x46
        0x00000b90:    d06d        m.      BEQ      0xc6e ; am_util_stdio_vsprintf + 394
        0x00000b92:    2858        X(      CMP      r0,#0x58
        0x00000b94:    d05c        \.      BEQ      0xc50 ; am_util_stdio_vsprintf + 364
        0x00000b96:    2863        c(      CMP      r0,#0x63
        0x00000b98:    d00b        ..      BEQ      0xbb2 ; am_util_stdio_vsprintf + 206
        0x00000b9a:    2864        d(      CMP      r0,#0x64
        0x00000b9c:    d168        h.      BNE      0xc70 ; am_util_stdio_vsprintf + 396
        0x00000b9e:    e0c3        ..      B        0xd28 ; am_util_stdio_vsprintf + 580
        0x00000ba0:    2869        i(      CMP      r0,#0x69
        0x00000ba2:    d07d        }.      BEQ      0xca0 ; am_util_stdio_vsprintf + 444
        0x00000ba4:    2873        s(      CMP      r0,#0x73
        0x00000ba6:    d011        ..      BEQ      0xbcc ; am_util_stdio_vsprintf + 232
        0x00000ba8:    2875        u(      CMP      r0,#0x75
        0x00000baa:    d07a        z.      BEQ      0xca2 ; am_util_stdio_vsprintf + 446
        0x00000bac:    2878        x(      CMP      r0,#0x78
        0x00000bae:    d1f5        ..      BNE      0xb9c ; am_util_stdio_vsprintf + 184
        0x00000bb0:    e04b        K.      B        0xc4a ; am_util_stdio_vsprintf + 358
        0x00000bb2:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000bb4:    f8101b04    ....    LDRB     r1,[r0],#4
        0x00000bb8:    900e        ..      STR      r0,[sp,#0x38]
        0x00000bba:    b2c8        ..      UXTB     r0,r1
        0x00000bbc:    9005        ..      STR      r0,[sp,#0x14]
        0x00000bbe:    b114        ..      CBZ      r4,0xbc6 ; am_util_stdio_vsprintf + 226
        0x00000bc0:    9805        ..      LDR      r0,[sp,#0x14]
        0x00000bc2:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000bc6:    f1090901    ....    ADD      r9,r9,#1
        0x00000bca:    e14e        N.      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000bcc:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000bce:    f850bb04    P...    LDR      r11,[r0],#4
        0x00000bd2:    900e        ..      STR      r0,[sp,#0x38]
        0x00000bd4:    4658        XF      MOV      r0,r11
        0x00000bd6:    f000fb79    ..y.    BL       simple_strlen ; 0x12cc
        0x00000bda:    9000        ..      STR      r0,[sp,#0]
        0x00000bdc:    2e00        ..      CMP      r6,#0
        0x00000bde:    dd11        ..      BLE      0xc04 ; am_util_stdio_vsprintf + 288
        0x00000be0:    9800        ..      LDR      r0,[sp,#0]
        0x00000be2:    42b0        .B      CMP      r0,r6
        0x00000be4:    d20e        ..      BCS      0xc04 ; am_util_stdio_vsprintf + 288
        0x00000be6:    9800        ..      LDR      r0,[sp,#0]
        0x00000be8:    1a36        6.      SUBS     r6,r6,r0
        0x00000bea:    4632        2F      MOV      r2,r6
        0x00000bec:    4620         F      MOV      r0,r4
        0x00000bee:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000bf0:    f000fb5b    ..[.    BL       padbuffer ; 0x12aa
        0x00000bf4:    4606        .F      MOV      r6,r0
        0x00000bf6:    b10c        ..      CBZ      r4,0xbfc ; am_util_stdio_vsprintf + 280
        0x00000bf8:    4630        0F      MOV      r0,r6
        0x00000bfa:    e000        ..      B        0xbfe ; am_util_stdio_vsprintf + 282
        0x00000bfc:    2000        .       MOVS     r0,#0
        0x00000bfe:    4404        .D      ADD      r4,r4,r0
        0x00000c00:    44b1        .D      ADD      r9,r9,r6
        0x00000c02:    2600        .&      MOVS     r6,#0
        0x00000c04:    e008        ..      B        0xc18 ; am_util_stdio_vsprintf + 308
        0x00000c06:    b11c        ..      CBZ      r4,0xc10 ; am_util_stdio_vsprintf + 300
        0x00000c08:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000c0c:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000c10:    f10b0b01    ....    ADD      r11,r11,#1
        0x00000c14:    f1090901    ....    ADD      r9,r9,#1
        0x00000c18:    f89b0000    ....    LDRB     r0,[r11,#0]
        0x00000c1c:    2800        .(      CMP      r0,#0
        0x00000c1e:    d1f2        ..      BNE      0xc06 ; am_util_stdio_vsprintf + 290
        0x00000c20:    b196        ..      CBZ      r6,0xc48 ; am_util_stdio_vsprintf + 356
        0x00000c22:    4276        vB      RSBS     r6,r6,#0
        0x00000c24:    9800        ..      LDR      r0,[sp,#0]
        0x00000c26:    42b0        .B      CMP      r0,r6
        0x00000c28:    d20e        ..      BCS      0xc48 ; am_util_stdio_vsprintf + 356
        0x00000c2a:    9800        ..      LDR      r0,[sp,#0]
        0x00000c2c:    1a36        6.      SUBS     r6,r6,r0
        0x00000c2e:    4632        2F      MOV      r2,r6
        0x00000c30:    4620         F      MOV      r0,r4
        0x00000c32:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000c34:    f000fb39    ..9.    BL       padbuffer ; 0x12aa
        0x00000c38:    4606        .F      MOV      r6,r0
        0x00000c3a:    b10c        ..      CBZ      r4,0xc40 ; am_util_stdio_vsprintf + 348
        0x00000c3c:    4630        0F      MOV      r0,r6
        0x00000c3e:    e000        ..      B        0xc42 ; am_util_stdio_vsprintf + 350
        0x00000c40:    2000        .       MOVS     r0,#0
        0x00000c42:    4404        .D      ADD      r4,r4,r0
        0x00000c44:    44b1        .D      ADD      r9,r9,r6
        0x00000c46:    2600        .&      MOVS     r6,#0
        0x00000c48:    e10f        ..      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000c4a:    2001        .       MOVS     r0,#1
        0x00000c4c:    9003        ..      STR      r0,[sp,#0xc]
        0x00000c4e:    bf00        ..      NOP      
        0x00000c50:    9802        ..      LDR      r0,[sp,#8]
        0x00000c52:    b170        p.      CBZ      r0,0xc72 ; am_util_stdio_vsprintf + 398
        0x00000c54:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c56:    1dc0        ..      ADDS     r0,r0,#7
        0x00000c58:    f0200007     ...    BIC      r0,r0,#7
        0x00000c5c:    4601        .F      MOV      r1,r0
        0x00000c5e:    900e        ..      STR      r0,[sp,#0x38]
        0x00000c60:    6800        .h      LDR      r0,[r0,#0]
        0x00000c62:    6849        Ih      LDR      r1,[r1,#4]
        0x00000c64:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000c66:    3208        .2      ADDS     r2,r2,#8
        0x00000c68:    920e        ..      STR      r2,[sp,#0x38]
        0x00000c6a:    e008        ..      B        0xc7e ; am_util_stdio_vsprintf + 410
        0x00000c6c:    e0c3        ..      B        0xdf6 ; am_util_stdio_vsprintf + 786
        0x00000c6e:    e0c3        ..      B        0xdf8 ; am_util_stdio_vsprintf + 788
        0x00000c70:    e0f4        ..      B        0xe5c ; am_util_stdio_vsprintf + 888
        0x00000c72:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000c74:    6800        .h      LDR      r0,[r0,#0]
        0x00000c76:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000c78:    1d09        ..      ADDS     r1,r1,#4
        0x00000c7a:    910e        ..      STR      r1,[sp,#0x38]
        0x00000c7c:    2100        .!      MOVS     r1,#0
        0x00000c7e:    4607        .F      MOV      r7,r0
        0x00000c80:    4688        .F      MOV      r8,r1
        0x00000c82:    b19e        ..      CBZ      r6,0xcac ; am_util_stdio_vsprintf + 456
        0x00000c84:    4638        8F      MOV      r0,r7
        0x00000c86:    4641        AF      MOV      r1,r8
        0x00000c88:    f000fac6    ....    BL       ndigits_in_hex ; 0x1218
        0x00000c8c:    1a36        6.      SUBS     r6,r6,r0
        0x00000c8e:    4632        2F      MOV      r2,r6
        0x00000c90:    4620         F      MOV      r0,r4
        0x00000c92:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000c94:    f000fb09    ....    BL       padbuffer ; 0x12aa
        0x00000c98:    4606        .F      MOV      r6,r0
        0x00000c9a:    b11c        ..      CBZ      r4,0xca4 ; am_util_stdio_vsprintf + 448
        0x00000c9c:    4630        0F      MOV      r0,r6
        0x00000c9e:    e002        ..      B        0xca6 ; am_util_stdio_vsprintf + 450
        0x00000ca0:    e043        C.      B        0xd2a ; am_util_stdio_vsprintf + 582
        0x00000ca2:    e00e        ..      B        0xcc2 ; am_util_stdio_vsprintf + 478
        0x00000ca4:    2000        .       MOVS     r0,#0
        0x00000ca6:    4404        .D      ADD      r4,r4,r0
        0x00000ca8:    44b1        .D      ADD      r9,r9,r6
        0x00000caa:    2600        .&      MOVS     r6,#0
        0x00000cac:    4622        "F      MOV      r2,r4
        0x00000cae:    4638        8F      MOV      r0,r7
        0x00000cb0:    4641        AF      MOV      r1,r8
        0x00000cb2:    9b03        ..      LDR      r3,[sp,#0xc]
        0x00000cb4:    f000fb88    ....    BL       uint64_to_hexstr ; 0x13c8
        0x00000cb8:    4682        .F      MOV      r10,r0
        0x00000cba:    b104        ..      CBZ      r4,0xcbe ; am_util_stdio_vsprintf + 474
        0x00000cbc:    4454        TD      ADD      r4,r4,r10
        0x00000cbe:    44d1        .D      ADD      r9,r9,r10
        0x00000cc0:    e0d3        ..      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000cc2:    9802        ..      LDR      r0,[sp,#8]
        0x00000cc4:    b158        X.      CBZ      r0,0xcde ; am_util_stdio_vsprintf + 506
        0x00000cc6:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000cc8:    1dc0        ..      ADDS     r0,r0,#7
        0x00000cca:    f0200007     ...    BIC      r0,r0,#7
        0x00000cce:    4601        .F      MOV      r1,r0
        0x00000cd0:    900e        ..      STR      r0,[sp,#0x38]
        0x00000cd2:    6800        .h      LDR      r0,[r0,#0]
        0x00000cd4:    6849        Ih      LDR      r1,[r1,#4]
        0x00000cd6:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000cd8:    3208        .2      ADDS     r2,r2,#8
        0x00000cda:    920e        ..      STR      r2,[sp,#0x38]
        0x00000cdc:    e005        ..      B        0xcea ; am_util_stdio_vsprintf + 518
        0x00000cde:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000ce0:    6800        .h      LDR      r0,[r0,#0]
        0x00000ce2:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000ce4:    1d09        ..      ADDS     r1,r1,#4
        0x00000ce6:    910e        ..      STR      r1,[sp,#0x38]
        0x00000ce8:    2100        .!      MOVS     r1,#0
        0x00000cea:    4607        .F      MOV      r7,r0
        0x00000cec:    4688        .F      MOV      r8,r1
        0x00000cee:    b18e        ..      CBZ      r6,0xd14 ; am_util_stdio_vsprintf + 560
        0x00000cf0:    4638        8F      MOV      r0,r7
        0x00000cf2:    4641        AF      MOV      r1,r8
        0x00000cf4:    f000fabc    ....    BL       ndigits_in_u64 ; 0x1270
        0x00000cf8:    1a36        6.      SUBS     r6,r6,r0
        0x00000cfa:    4632        2F      MOV      r2,r6
        0x00000cfc:    4620         F      MOV      r0,r4
        0x00000cfe:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000d00:    f000fad3    ....    BL       padbuffer ; 0x12aa
        0x00000d04:    4606        .F      MOV      r6,r0
        0x00000d06:    b10c        ..      CBZ      r4,0xd0c ; am_util_stdio_vsprintf + 552
        0x00000d08:    4630        0F      MOV      r0,r6
        0x00000d0a:    e000        ..      B        0xd0e ; am_util_stdio_vsprintf + 554
        0x00000d0c:    2000        .       MOVS     r0,#0
        0x00000d0e:    4404        .D      ADD      r4,r4,r0
        0x00000d10:    44b1        .D      ADD      r9,r9,r6
        0x00000d12:    2600        .&      MOVS     r6,#0
        0x00000d14:    4622        "F      MOV      r2,r4
        0x00000d16:    4638        8F      MOV      r0,r7
        0x00000d18:    4641        AF      MOV      r1,r8
        0x00000d1a:    f000fb9a    ....    BL       uint64_to_str ; 0x1452
        0x00000d1e:    4682        .F      MOV      r10,r0
        0x00000d20:    b104        ..      CBZ      r4,0xd24 ; am_util_stdio_vsprintf + 576
        0x00000d22:    4454        TD      ADD      r4,r4,r10
        0x00000d24:    44d1        .D      ADD      r9,r9,r10
        0x00000d26:    e0a0        ..      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000d28:    bf00        ..      NOP      
        0x00000d2a:    9802        ..      LDR      r0,[sp,#8]
        0x00000d2c:    b158        X.      CBZ      r0,0xd46 ; am_util_stdio_vsprintf + 610
        0x00000d2e:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000d30:    1dc0        ..      ADDS     r0,r0,#7
        0x00000d32:    f0200007     ...    BIC      r0,r0,#7
        0x00000d36:    4601        .F      MOV      r1,r0
        0x00000d38:    900e        ..      STR      r0,[sp,#0x38]
        0x00000d3a:    6800        .h      LDR      r0,[r0,#0]
        0x00000d3c:    6849        Ih      LDR      r1,[r1,#4]
        0x00000d3e:    9a0e        ..      LDR      r2,[sp,#0x38]
        0x00000d40:    3208        .2      ADDS     r2,r2,#8
        0x00000d42:    920e        ..      STR      r2,[sp,#0x38]
        0x00000d44:    e005        ..      B        0xd52 ; am_util_stdio_vsprintf + 622
        0x00000d46:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000d48:    6800        .h      LDR      r0,[r0,#0]
        0x00000d4a:    990e        ..      LDR      r1,[sp,#0x38]
        0x00000d4c:    1d09        ..      ADDS     r1,r1,#4
        0x00000d4e:    910e        ..      STR      r1,[sp,#0x38]
        0x00000d50:    17c1        ..      ASRS     r1,r0,#31
        0x00000d52:    e9cd0108    ....    STRD     r0,r1,[sp,#0x20]
        0x00000d56:    2300        .#      MOVS     r3,#0
        0x00000d58:    e9dd0108    ....    LDRD     r0,r1,[sp,#0x20]
        0x00000d5c:    1ac0        ..      SUBS     r0,r0,r3
        0x00000d5e:    4199        .A      SBCS     r1,r1,r3
        0x00000d60:    da08        ..      BGE      0xd74 ; am_util_stdio_vsprintf + 656
        0x00000d62:    2200        ."      MOVS     r2,#0
        0x00000d64:    e9dd1008    ....    LDRD     r1,r0,[sp,#0x20]
        0x00000d68:    424f        OB      RSBS     r7,r1,#0
        0x00000d6a:    eb620800    b...    SBC      r8,r2,r0
        0x00000d6e:    2001        .       MOVS     r0,#1
        0x00000d70:    9001        ..      STR      r0,[sp,#4]
        0x00000d72:    e003        ..      B        0xd7c ; am_util_stdio_vsprintf + 664
        0x00000d74:    e9dd7808    ...x    LDRD     r7,r8,[sp,#0x20]
        0x00000d78:    2000        .       MOVS     r0,#0
        0x00000d7a:    9001        ..      STR      r0,[sp,#4]
        0x00000d7c:    b34e        N.      CBZ      r6,0xdd2 ; am_util_stdio_vsprintf + 750
        0x00000d7e:    4638        8F      MOV      r0,r7
        0x00000d80:    4641        AF      MOV      r1,r8
        0x00000d82:    f000fa63    ..c.    BL       ndigits_in_i64 ; 0x124c
        0x00000d86:    1a36        6.      SUBS     r6,r6,r0
        0x00000d88:    9801        ..      LDR      r0,[sp,#4]
        0x00000d8a:    b148        H.      CBZ      r0,0xda0 ; am_util_stdio_vsprintf + 700
        0x00000d8c:    1e76        v.      SUBS     r6,r6,#1
        0x00000d8e:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000d90:    2830        0(      CMP      r0,#0x30
        0x00000d92:    d105        ..      BNE      0xda0 ; am_util_stdio_vsprintf + 700
        0x00000d94:    b114        ..      CBZ      r4,0xd9c ; am_util_stdio_vsprintf + 696
        0x00000d96:    202d        -       MOVS     r0,#0x2d
        0x00000d98:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000d9c:    f1090901    ....    ADD      r9,r9,#1
        0x00000da0:    4632        2F      MOV      r2,r6
        0x00000da2:    4620         F      MOV      r0,r4
        0x00000da4:    9904        ..      LDR      r1,[sp,#0x10]
        0x00000da6:    f000fa80    ....    BL       padbuffer ; 0x12aa
        0x00000daa:    4606        .F      MOV      r6,r0
        0x00000dac:    b10c        ..      CBZ      r4,0xdb2 ; am_util_stdio_vsprintf + 718
        0x00000dae:    4630        0F      MOV      r0,r6
        0x00000db0:    e000        ..      B        0xdb4 ; am_util_stdio_vsprintf + 720
        0x00000db2:    2000        .       MOVS     r0,#0
        0x00000db4:    4404        .D      ADD      r4,r4,r0
        0x00000db6:    44b1        .D      ADD      r9,r9,r6
        0x00000db8:    2600        .&      MOVS     r6,#0
        0x00000dba:    9801        ..      LDR      r0,[sp,#4]
        0x00000dbc:    b188        ..      CBZ      r0,0xde2 ; am_util_stdio_vsprintf + 766
        0x00000dbe:    9804        ..      LDR      r0,[sp,#0x10]
        0x00000dc0:    2820         (      CMP      r0,#0x20
        0x00000dc2:    d10e        ..      BNE      0xde2 ; am_util_stdio_vsprintf + 766
        0x00000dc4:    b114        ..      CBZ      r4,0xdcc ; am_util_stdio_vsprintf + 744
        0x00000dc6:    202d        -       MOVS     r0,#0x2d
        0x00000dc8:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000dcc:    f1090901    ....    ADD      r9,r9,#1
        0x00000dd0:    e007        ..      B        0xde2 ; am_util_stdio_vsprintf + 766
        0x00000dd2:    9801        ..      LDR      r0,[sp,#4]
        0x00000dd4:    b128        (.      CBZ      r0,0xde2 ; am_util_stdio_vsprintf + 766
        0x00000dd6:    b114        ..      CBZ      r4,0xdde ; am_util_stdio_vsprintf + 762
        0x00000dd8:    202d        -       MOVS     r0,#0x2d
        0x00000dda:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000dde:    f1090901    ....    ADD      r9,r9,#1
        0x00000de2:    4622        "F      MOV      r2,r4
        0x00000de4:    4638        8F      MOV      r0,r7
        0x00000de6:    4641        AF      MOV      r1,r8
        0x00000de8:    f000fb33    ..3.    BL       uint64_to_str ; 0x1452
        0x00000dec:    4682        .F      MOV      r10,r0
        0x00000dee:    b104        ..      CBZ      r4,0xdf2 ; am_util_stdio_vsprintf + 782
        0x00000df0:    4454        TD      ADD      r4,r4,r10
        0x00000df2:    44d1        .D      ADD      r9,r9,r10
        0x00000df4:    e039        9.      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000df6:    bf00        ..      NOP      
        0x00000df8:    b37c        |.      CBZ      r4,0xe5a ; am_util_stdio_vsprintf + 886
        0x00000dfa:    980e        ..      LDR      r0,[sp,#0x38]
        0x00000dfc:    1dc0        ..      ADDS     r0,r0,#7
        0x00000dfe:    f0200007     ...    BIC      r0,r0,#7
        0x00000e02:    900e        ..      STR      r0,[sp,#0x38]
        0x00000e04:    ecb01b02    ....    VLDM     r0!,{d1}
        0x00000e08:    eeb00a41    ..A.    VMOV.F32 s0,s2
        0x00000e0c:    eef00a61    ..a.    VMOV.F32 s1,s3
        0x00000e10:    900e        ..      STR      r0,[sp,#0x38]
        0x00000e12:    ec510b10    Q...    VMOV     r0,r1,d0
        0x00000e16:    f000fb55    ..U.    BL       __aeabi_d2f ; 0x14c4
        0x00000e1a:    ee080a10    ....    VMOV     s16,r0
        0x00000e1e:    2014        .       MOVS     r0,#0x14
        0x00000e20:    6020         `      STR      r0,[r4,#0]
        0x00000e22:    4620         F      MOV      r0,r4
        0x00000e24:    eeb00a48    ..H.    VMOV.F32 s0,s16
        0x00000e28:    9906        ..      LDR      r1,[sp,#0x18]
        0x00000e2a:    f000f8bd    ....    BL       ftoa ; 0xfa8
        0x00000e2e:    4682        .F      MOV      r10,r0
        0x00000e30:    f1ba0f00    ....    CMP      r10,#0
        0x00000e34:    da0e        ..      BGE      0xe54 ; am_util_stdio_vsprintf + 880
        0x00000e36:    f10a0101    ....    ADD      r1,r10,#1
        0x00000e3a:    b909        ..      CBNZ     r1,0xe40 ; am_util_stdio_vsprintf + 860
        0x00000e3c:    4813        .H      LDR      r0,[pc,#76] ; [0xe8c] = 0x302e30
        0x00000e3e:    e005        ..      B        0xe4c ; am_util_stdio_vsprintf + 872
        0x00000e40:    f10a0102    ....    ADD      r1,r10,#2
        0x00000e44:    b909        ..      CBNZ     r1,0xe4a ; am_util_stdio_vsprintf + 870
        0x00000e46:    4812        .H      LDR      r0,[pc,#72] ; [0xe90] = 0x232e23
        0x00000e48:    e000        ..      B        0xe4c ; am_util_stdio_vsprintf + 872
        0x00000e4a:    4812        .H      LDR      r0,[pc,#72] ; [0xe94] = 0x3f2e3f
        0x00000e4c:    6020         `      STR      r0,[r4,#0]
        0x00000e4e:    f04f0a03    O...    MOV      r10,#3
        0x00000e52:    bf00        ..      NOP      
        0x00000e54:    44d1        .D      ADD      r9,r9,r10
        0x00000e56:    4454        TD      ADD      r4,r4,r10
        0x00000e58:    bf00        ..      NOP      
        0x00000e5a:    e006        ..      B        0xe6a ; am_util_stdio_vsprintf + 902
        0x00000e5c:    b114        ..      CBZ      r4,0xe64 ; am_util_stdio_vsprintf + 896
        0x00000e5e:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e60:    f8040b01    ....    STRB     r0,[r4],#1
        0x00000e64:    f1090901    ....    ADD      r9,r9,#1
        0x00000e68:    bf00        ..      NOP      
        0x00000e6a:    bf00        ..      NOP      
        0x00000e6c:    1c6d        m.      ADDS     r5,r5,#1
        0x00000e6e:    bf00        ..      NOP      
        0x00000e70:    7828        (x      LDRB     r0,[r5,#0]
        0x00000e72:    2800        .(      CMP      r0,#0
        0x00000e74:    f47fae42    ..B.    BNE      0xafc ; am_util_stdio_vsprintf + 24
        0x00000e78:    b104        ..      CBZ      r4,0xe7c ; am_util_stdio_vsprintf + 920
        0x00000e7a:    7020         p      STRB     r0,[r4,#0]
        0x00000e7c:    4648        HF      MOV      r0,r9
        0x00000e7e:    b00a        ..      ADD      sp,sp,#0x28
        0x00000e80:    ecbd8b02    ....    VPOP     {d8}
        0x00000e84:    e8bd8ffe    ....    POP      {r1-r11,pc}
    $d
        0x00000e88:    10000018    ....    DCD    268435480
        0x00000e8c:    00302e30    0.0.    DCD    3157552
        0x00000e90:    00232e23    #.#.    DCD    2305571
        0x00000e94:    003f2e3f    ?.?.    DCD    4140607
    $t
    i.decstr_to_int
    decstr_to_int
        0x00000e98:    b530        0.      PUSH     {r4,r5,lr}
        0x00000e9a:    4602        .F      MOV      r2,r0
        0x00000e9c:    2500        .%      MOVS     r5,#0
        0x00000e9e:    2300        .#      MOVS     r3,#0
        0x00000ea0:    2400        .$      MOVS     r4,#0
        0x00000ea2:    7810        .x      LDRB     r0,[r2,#0]
        0x00000ea4:    282d        -(      CMP      r0,#0x2d
        0x00000ea6:    d102        ..      BNE      0xeae ; decstr_to_int + 22
        0x00000ea8:    2501        .%      MOVS     r5,#1
        0x00000eaa:    1c52        R.      ADDS     r2,r2,#1
        0x00000eac:    1c64        d.      ADDS     r4,r4,#1
        0x00000eae:    e007        ..      B        0xec0 ; decstr_to_int + 40
        0x00000eb0:    1c64        d.      ADDS     r4,r4,#1
        0x00000eb2:    eb030083    ....    ADD      r0,r3,r3,LSL #2
        0x00000eb6:    0043        C.      LSLS     r3,r0,#1
        0x00000eb8:    7810        .x      LDRB     r0,[r2,#0]
        0x00000eba:    3830        08      SUBS     r0,r0,#0x30
        0x00000ebc:    4403        .D      ADD      r3,r3,r0
        0x00000ebe:    1c52        R.      ADDS     r2,r2,#1
        0x00000ec0:    7810        .x      LDRB     r0,[r2,#0]
        0x00000ec2:    2830        0(      CMP      r0,#0x30
        0x00000ec4:    db02        ..      BLT      0xecc ; decstr_to_int + 52
        0x00000ec6:    7810        .x      LDRB     r0,[r2,#0]
        0x00000ec8:    2839        9(      CMP      r0,#0x39
        0x00000eca:    ddf1        ..      BLE      0xeb0 ; decstr_to_int + 24
        0x00000ecc:    b101        ..      CBZ      r1,0xed0 ; decstr_to_int + 56
        0x00000ece:    600c        .`      STR      r4,[r1,#0]
        0x00000ed0:    b10d        ..      CBZ      r5,0xed6 ; decstr_to_int + 62
        0x00000ed2:    4258        XB      RSBS     r0,r3,#0
        0x00000ed4:    bd30        0.      POP      {r4,r5,pc}
        0x00000ed6:    4618        .F      MOV      r0,r3
        0x00000ed8:    e7fc        ..      B        0xed4 ; decstr_to_int + 60
    i.divu64_10
    divu64_10
        0x00000eda:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x00000ede:    4604        .F      MOV      r4,r0
        0x00000ee0:    460d        .F      MOV      r5,r1
        0x00000ee2:    2000        .       MOVS     r0,#0
        0x00000ee4:    ea850100    ....    EOR      r1,r5,r0
        0x00000ee8:    4040        @@      EORS     r0,r0,r0
        0x00000eea:    4301        .C      ORRS     r1,r1,r0
        0x00000eec:    d044        D.      BEQ      0xf78 ; divu64_10 + 158
        0x00000eee:    ea5f0a55    _.U.    LSRS     r10,r5,#1
        0x00000ef2:    ea4f0134    O.4.    RRX      r1,r4
        0x00000ef6:    ea4f0b94    O...    LSR      r11,r4,#2
        0x00000efa:    ea4b7085    K..p    ORR      r0,r11,r5,LSL #30
        0x00000efe:    180a        ..      ADDS     r2,r1,r0
        0x00000f00:    eb4a0395    J...    ADC      r3,r10,r5,LSR #2
        0x00000f04:    ea4f1012    O...    LSR      r0,r2,#4
        0x00000f08:    ea407a03    @..z    ORR      r10,r0,r3,LSL #28
        0x00000f0c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f10:    eb431313    C...    ADC      r3,r3,r3,LSR #4
        0x00000f14:    ea4f2012    O..     LSR      r0,r2,#8
        0x00000f18:    ea406a03    @..j    ORR      r10,r0,r3,LSL #24
        0x00000f1c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f20:    eb432313    C..#    ADC      r3,r3,r3,LSR #8
        0x00000f24:    ea4f4012    O..@    LSR      r0,r2,#16
        0x00000f28:    ea404a03    @..J    ORR      r10,r0,r3,LSL #16
        0x00000f2c:    eb1a0202    ....    ADDS     r2,r10,r2
        0x00000f30:    eb434313    C..C    ADC      r3,r3,r3,LSR #16
        0x00000f34:    189a        ..      ADDS     r2,r3,r2
        0x00000f36:    f1430300    C...    ADC      r3,r3,#0
        0x00000f3a:    08d0        ..      LSRS     r0,r2,#3
        0x00000f3c:    ea407243    @.Cr    ORR      r2,r0,r3,LSL #29
        0x00000f40:    08db        ..      LSRS     r3,r3,#3
        0x00000f42:    210a        .!      MOVS     r1,#0xa
        0x00000f44:    f04f0a00    O...    MOV      r10,#0
        0x00000f48:    fba20b01    ....    UMULL    r0,r11,r2,r1
        0x00000f4c:    fb03b101    ....    MLA      r1,r3,r1,r11
        0x00000f50:    fb02110a    ....    MLA      r1,r2,r10,r1
        0x00000f54:    1a26        &.      SUBS     r6,r4,r0
        0x00000f56:    eb650701    e...    SBC      r7,r5,r1
        0x00000f5a:    2106        .!      MOVS     r1,#6
        0x00000f5c:    eb160a01    ....    ADDS     r10,r6,r1
        0x00000f60:    f1470100    G...    ADC      r1,r7,#0
        0x00000f64:    ea4f101a    O...    LSR      r0,r10,#4
        0x00000f68:    ea407a01    @..z    ORR      r10,r0,r1,LSL #28
        0x00000f6c:    eb1a0002    ....    ADDS     r0,r10,r2
        0x00000f70:    eb431111    C...    ADC      r1,r3,r1,LSR #4
        0x00000f74:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000f78:    46a0        .F      MOV      r8,r4
        0x00000f7a:    ea4f0058    O.X.    LSR      r0,r8,#1
        0x00000f7e:    eb000c98    ....    ADD      r12,r0,r8,LSR #2
        0x00000f82:    eb0c1c1c    ....    ADD      r12,r12,r12,LSR #4
        0x00000f86:    eb0c2c1c    ...,    ADD      r12,r12,r12,LSR #8
        0x00000f8a:    eb0c4c1c    ...L    ADD      r12,r12,r12,LSR #16
        0x00000f8e:    ea4f0cdc    O...    LSR      r12,r12,#3
        0x00000f92:    eb0c008c    ....    ADD      r0,r12,r12,LSL #2
        0x00000f96:    eba80940    ..@.    SUB      r9,r8,r0,LSL #1
        0x00000f9a:    f1090006    ....    ADD      r0,r9,#6
        0x00000f9e:    eb0c1010    ....    ADD      r0,r12,r0,LSR #4
        0x00000fa2:    2100        .!      MOVS     r1,#0
        0x00000fa4:    e7e6        ..      B        0xf74 ; divu64_10 + 154
        0x00000fa6:    0000        ..      MOVS     r0,r0
    i.ftoa
    ftoa
        0x00000fa8:    e92d4ff3    -..O    PUSH     {r0,r1,r4-r11,lr}
        0x00000fac:    ed2d0b02    -...    VPUSH    {d0}
        0x00000fb0:    ed2d8b02    -...    VPUSH    {d8}
        0x00000fb4:    b081        ..      SUB      sp,sp,#4
        0x00000fb6:    eeb08a40    ..@.    VMOV.F32 s16,s0
        0x00000fba:    4604        .F      MOV      r4,r0
        0x00000fbc:    f8d4b000    ....    LDR      r11,[r4,#0]
        0x00000fc0:    f1bb0f04    ....    CMP      r11,#4
        0x00000fc4:    da07        ..      BGE      0xfd6 ; ftoa + 46
        0x00000fc6:    f06f0002    o...    MVN      r0,#2
        0x00000fca:    b001        ..      ADD      sp,sp,#4
        0x00000fcc:    ecbd8b02    ....    VPOP     {d8}
        0x00000fd0:    b004        ..      ADD      sp,sp,#0x10
        0x00000fd2:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x00000fd6:    eeb58ac0    ....    VCMPE.F32 s16,#0.0
        0x00000fda:    eef1fa10    ....    VMRS     APSR_nzcv,FPSCR
        0x00000fde:    d103        ..      BNE      0xfe8 ; ftoa + 64
        0x00000fe0:    484e        NH      LDR      r0,[pc,#312] ; [0x111c] = 0x302e30
        0x00000fe2:    6020         `      STR      r0,[r4,#0]
        0x00000fe4:    2003        .       MOVS     r0,#3
        0x00000fe6:    e7f0        ..      B        0xfca ; ftoa + 34
        0x00000fe8:    46a2        .F      MOV      r10,r4
        0x00000fea:    ed8d8a00    ....    VSTR     s16,[sp,#0]
        0x00000fee:    9800        ..      LDR      r0,[sp,#0]
        0x00000ff0:    f3c050c7    ...P    UBFX     r0,r0,#23,#8
        0x00000ff4:    f1a0057f    ....    SUB      r5,r0,#0x7f
        0x00000ff8:    9800        ..      LDR      r0,[sp,#0]
        0x00000ffa:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00000ffe:    f4400900    @...    ORR      r9,r0,#0x800000
        0x00001002:    f04f0800    O...    MOV      r8,#0
        0x00001006:    2700        .'      MOVS     r7,#0
        0x00001008:    2d1f        .-      CMP      r5,#0x1f
        0x0000100a:    db01        ..      BLT      0x1010 ; ftoa + 104
        0x0000100c:    1eb8        ..      SUBS     r0,r7,#2
        0x0000100e:    e7dc        ..      B        0xfca ; ftoa + 34
        0x00001010:    f1150f17    ....    CMN      r5,#0x17
        0x00001014:    da02        ..      BGE      0x101c ; ftoa + 116
        0x00001016:    f04f30ff    O..0    MOV      r0,#0xffffffff
        0x0000101a:    e7d6        ..      B        0xfca ; ftoa + 34
        0x0000101c:    2d17        .-      CMP      r5,#0x17
        0x0000101e:    db04        ..      BLT      0x102a ; ftoa + 130
        0x00001020:    f1a50017    ....    SUB      r0,r5,#0x17
        0x00001024:    fa09f700    ....    LSL      r7,r9,r0
        0x00001028:    e011        ..      B        0x104e ; ftoa + 166
        0x0000102a:    2d00        .-      CMP      r5,#0
        0x0000102c:    db09        ..      BLT      0x1042 ; ftoa + 154
        0x0000102e:    f1c50017    ....    RSB      r0,r5,#0x17
        0x00001032:    fa49f700    I...    ASR      r7,r9,r0
        0x00001036:    1c68        h.      ADDS     r0,r5,#1
        0x00001038:    fa09f000    ....    LSL      r0,r9,r0
        0x0000103c:    f020487f     ..H    BIC      r8,r0,#0xff000000
        0x00001040:    e005        ..      B        0x104e ; ftoa + 166
        0x00001042:    f029407f    )..@    BIC      r0,r9,#0xff000000
        0x00001046:    1c69        i.      ADDS     r1,r5,#1
        0x00001048:    4249        IB      RSBS     r1,r1,#0
        0x0000104a:    fa40f801    @...    ASR      r8,r0,r1
        0x0000104e:    9800        ..      LDR      r0,[sp,#0]
        0x00001050:    2800        .(      CMP      r0,#0
        0x00001052:    da02        ..      BGE      0x105a ; ftoa + 178
        0x00001054:    202d        -       MOVS     r0,#0x2d
        0x00001056:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000105a:    b91f        ..      CBNZ     r7,0x1064 ; ftoa + 188
        0x0000105c:    2030        0       MOVS     r0,#0x30
        0x0000105e:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001062:    e014        ..      B        0x108e ; ftoa + 230
        0x00001064:    2f00        ./      CMP      r7,#0
        0x00001066:    dd05        ..      BLE      0x1074 ; ftoa + 204
        0x00001068:    4622        "F      MOV      r2,r4
        0x0000106a:    4638        8F      MOV      r0,r7
        0x0000106c:    17f9        ..      ASRS     r1,r7,#31
        0x0000106e:    f000f9f0    ....    BL       uint64_to_str ; 0x1452
        0x00001072:    e007        ..      B        0x1084 ; ftoa + 220
        0x00001074:    202d        -       MOVS     r0,#0x2d
        0x00001076:    f8040b01    ....    STRB     r0,[r4],#1
        0x0000107a:    4622        "F      MOV      r2,r4
        0x0000107c:    4278        xB      RSBS     r0,r7,#0
        0x0000107e:    17c1        ..      ASRS     r1,r0,#31
        0x00001080:    f000f9e7    ....    BL       uint64_to_str ; 0x1452
        0x00001084:    e000        ..      B        0x1088 ; ftoa + 224
        0x00001086:    1c64        d.      ADDS     r4,r4,#1
        0x00001088:    7820         x      LDRB     r0,[r4,#0]
        0x0000108a:    2800        .(      CMP      r0,#0
        0x0000108c:    d1fb        ..      BNE      0x1086 ; ftoa + 222
        0x0000108e:    202e        .       MOVS     r0,#0x2e
        0x00001090:    f8040b01    ....    STRB     r0,[r4],#1
        0x00001094:    f1b80f00    ....    CMP      r8,#0
        0x00001098:    d103        ..      BNE      0x10a2 ; ftoa + 250
        0x0000109a:    2030        0       MOVS     r0,#0x30
        0x0000109c:    f8040b01    ....    STRB     r0,[r4],#1
        0x000010a0:    e036        6.      B        0x1110 ; ftoa + 360
        0x000010a2:    eba4020a    ....    SUB      r2,r4,r10
        0x000010a6:    ebab0202    ....    SUB      r2,r11,r2
        0x000010aa:    1e51        Q.      SUBS     r1,r2,#1
        0x000010ac:    9a06        ..      LDR      r2,[sp,#0x18]
        0x000010ae:    4291        .B      CMP      r1,r2
        0x000010b0:    dd01        ..      BLE      0x10b6 ; ftoa + 270
        0x000010b2:    9a06        ..      LDR      r2,[sp,#0x18]
        0x000010b4:    e000        ..      B        0x10b8 ; ftoa + 272
        0x000010b6:    460a        .F      MOV      r2,r1
        0x000010b8:    4611        .F      MOV      r1,r2
        0x000010ba:    2000        .       MOVS     r0,#0
        0x000010bc:    e00b        ..      B        0x10d6 ; ftoa + 302
        0x000010be:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x000010c2:    ea4f0842    O.B.    LSL      r8,r2,#1
        0x000010c6:    2230        0"      MOVS     r2,#0x30
        0x000010c8:    eb026228    ..(b    ADD      r2,r2,r8,ASR #24
        0x000010cc:    f8042b01    ...+    STRB     r2,[r4],#1
        0x000010d0:    f028487f    (..H    BIC      r8,r8,#0xff000000
        0x000010d4:    1c40        @.      ADDS     r0,r0,#1
        0x000010d6:    4288        .B      CMP      r0,r1
        0x000010d8:    dbf1        ..      BLT      0x10be ; ftoa + 278
        0x000010da:    eb080288    ....    ADD      r2,r8,r8,LSL #2
        0x000010de:    0052        R.      LSLS     r2,r2,#1
        0x000010e0:    2305        .#      MOVS     r3,#5
        0x000010e2:    ebb36f22    .."o    CMP      r3,r2,ASR #24
        0x000010e6:    dc12        ..      BGT      0x110e ; ftoa + 358
        0x000010e8:    1e66        f.      SUBS     r6,r4,#1
        0x000010ea:    e00d        ..      B        0x1108 ; ftoa + 352
        0x000010ec:    7832        2x      LDRB     r2,[r6,#0]
        0x000010ee:    2a2e        .*      CMP      r2,#0x2e
        0x000010f0:    d009        ..      BEQ      0x1106 ; ftoa + 350
        0x000010f2:    7832        2x      LDRB     r2,[r6,#0]
        0x000010f4:    2a39        9*      CMP      r2,#0x39
        0x000010f6:    d102        ..      BNE      0x10fe ; ftoa + 342
        0x000010f8:    2230        0"      MOVS     r2,#0x30
        0x000010fa:    7032        2p      STRB     r2,[r6,#0]
        0x000010fc:    e003        ..      B        0x1106 ; ftoa + 350
        0x000010fe:    7832        2x      LDRB     r2,[r6,#0]
        0x00001100:    1c52        R.      ADDS     r2,r2,#1
        0x00001102:    7032        2p      STRB     r2,[r6,#0]
        0x00001104:    e002        ..      B        0x110c ; ftoa + 356
        0x00001106:    1e76        v.      SUBS     r6,r6,#1
        0x00001108:    4556        VE      CMP      r6,r10
        0x0000110a:    d2ef        ..      BCS      0x10ec ; ftoa + 324
        0x0000110c:    bf00        ..      NOP      
        0x0000110e:    bf00        ..      NOP      
        0x00001110:    2000        .       MOVS     r0,#0
        0x00001112:    7020         p      STRB     r0,[r4,#0]
        0x00001114:    eba4000a    ....    SUB      r0,r4,r10
        0x00001118:    e757        W.      B        0xfca ; ftoa + 34
    $d
        0x0000111a:    0000        ..      DCW    0
        0x0000111c:    00302e30    0.0.    DCD    3157552
    $t
    i.main
    main
        0x00001120:    2000        .       MOVS     r0,#0
        0x00001122:    f7fffabf    ....    BL       am_hal_clkgen_sysclk_select ; 0x6a4
        0x00001126:    f7fff898    ....    BL       __semihosting_library_function ; 0x25a
        0x0000112a:    2001        .       MOVS     r0,#1
        0x0000112c:    f7fffa74    ..t.    BL       am_hal_clkgen_osc_start ; 0x618
        0x00001130:    2000        .       MOVS     r0,#0
        0x00001132:    f7fffb88    ....    BL       am_hal_rtc_osc_select ; 0x846
        0x00001136:    f7fffb7f    ....    BL       am_hal_rtc_osc_enable ; 0x838
        0x0000113a:    482e        .H      LDR      r0,[pc,#184] ; [0x11f4] = 0x27d
        0x0000113c:    f7fffcbc    ....    BL       am_util_stdio_printf_init ; 0xab8
        0x00001140:    2000        .       MOVS     r0,#0
        0x00001142:    f000f903    ....    BL       uart_init ; 0x134c
        0x00001146:    f7fffcbd    ....    BL       am_util_stdio_terminal_clear ; 0xac4
        0x0000114a:    a02b        +.      ADR      r0,{pc}+0xae ; 0x11f8
        0x0000114c:    f7fffc96    ....    BL       am_util_stdio_printf ; 0xa7c
        0x00001150:    2000        .       MOVS     r0,#0
        0x00001152:    f000f8c7    ....    BL       uart_disable ; 0x12e4
        0x00001156:    21fe        .!      MOVS     r1,#0xfe
        0x00001158:    4608        .F      MOV      r0,r1
        0x0000115a:    f7fffb37    ..7.    BL       am_hal_mcuctrl_sram_power_set ; 0x7cc
        0x0000115e:    2105        .!      MOVS     r1,#5
        0x00001160:    482b        +H      LDR      r0,[pc,#172] ; [0x1210] = 0x10000020
        0x00001162:    f7fff89b    ....    BL       am_devices_led_array_init ; 0x29c
        0x00001166:    bf00        ..      NOP      
        0x00001168:    2073        s       MOVS     r0,#0x73
        0x0000116a:    492a        *I      LDR      r1,[pc,#168] ; [0x1214] = 0x40010000
        0x0000116c:    6608        .f      STR      r0,[r1,#0x60]
        0x0000116e:    4608        .F      MOV      r0,r1
        0x00001170:    6c80        .l      LDR      r0,[r0,#0x48]
        0x00001172:    f0200070     .p.    BIC      r0,r0,#0x70
        0x00001176:    6488        .d      STR      r0,[r1,#0x48]
        0x00001178:    4608        .F      MOV      r0,r1
        0x0000117a:    6900        .i      LDR      r0,[r0,#0x10]
        0x0000117c:    f420407f     ..@    BIC      r0,r0,#0xff00
        0x00001180:    f44050d0    @..P    ORR      r0,r0,#0x1a00
        0x00001184:    6108        .a      STR      r0,[r1,#0x10]
        0x00001186:    2000        .       MOVS     r0,#0
        0x00001188:    6608        .f      STR      r0,[r1,#0x60]
        0x0000118a:    bf00        ..      NOP      
        0x0000118c:    2100        .!      MOVS     r1,#0
        0x0000118e:    4820         H      LDR      r0,[pc,#128] ; [0x1210] = 0x10000020
        0x00001190:    f7fff98a    ....    BL       am_devices_led_off ; 0x4a8
        0x00001194:    2101        .!      MOVS     r1,#1
        0x00001196:    481e        .H      LDR      r0,[pc,#120] ; [0x1210] = 0x10000020
        0x00001198:    f7fff986    ....    BL       am_devices_led_off ; 0x4a8
        0x0000119c:    bf00        ..      NOP      
        0x0000119e:    2073        s       MOVS     r0,#0x73
        0x000011a0:    491c        .I      LDR      r1,[pc,#112] ; [0x1214] = 0x40010000
        0x000011a2:    6608        .f      STR      r0,[r1,#0x60]
        0x000011a4:    4608        .F      MOV      r0,r1
        0x000011a6:    6c80        .l      LDR      r0,[r0,#0x48]
        0x000011a8:    f0200080     ...    BIC      r0,r0,#0x80
        0x000011ac:    6488        .d      STR      r0,[r1,#0x48]
        0x000011ae:    2000        .       MOVS     r0,#0
        0x000011b0:    6608        .f      STR      r0,[r1,#0x60]
        0x000011b2:    bf00        ..      NOP      
        0x000011b4:    f44f3000    O..0    MOV      r0,#0x20000
        0x000011b8:    2100        .!      MOVS     r1,#0
        0x000011ba:    f7fffa7b    ..{.    BL       am_hal_gpio_int_clear ; 0x6b4
        0x000011be:    f44f3000    O..0    MOV      r0,#0x20000
        0x000011c2:    2100        .!      MOVS     r1,#0
        0x000011c4:    f7fffa7e    ..~.    BL       am_hal_gpio_int_enable ; 0x6c4
        0x000011c8:    2007        .       MOVS     r0,#7
        0x000011ca:    f7fffb07    ....    BL       am_hal_rtc_alarm_interval_set ; 0x7dc
        0x000011ce:    2008        .       MOVS     r0,#8
        0x000011d0:    f7fffb1e    ....    BL       am_hal_rtc_int_clear ; 0x810
        0x000011d4:    2008        .       MOVS     r0,#8
        0x000011d6:    f7fffb20    .. .    BL       am_hal_rtc_int_enable ; 0x81a
        0x000011da:    2019        .       MOVS     r0,#0x19
        0x000011dc:    f7fffa98    ....    BL       am_hal_interrupt_enable ; 0x710
        0x000011e0:    2012        .       MOVS     r0,#0x12
        0x000011e2:    f7fffa95    ....    BL       am_hal_interrupt_enable ; 0x710
        0x000011e6:    f7feffbd    ....    BL       am_hal_interrupt_master_enable ; 0x164
        0x000011ea:    e002        ..      B        0x11f2 ; main + 210
        0x000011ec:    2001        .       MOVS     r0,#1
        0x000011ee:    f7fffb35    ..5.    BL       am_hal_sysctrl_sleep ; 0x85c
        0x000011f2:    e7fb        ..      B        0x11ec ; main + 204
    $d
        0x000011f4:    0000027d    }...    DCD    637
        0x000011f8:    70656544    Deep    DCD    1885693252
        0x000011fc:    65656c73    slee    DCD    1701145715
        0x00001200:    61572070    p Wa    DCD    1633099888
        0x00001204:    4520656b    ke E    DCD    1159751019
        0x00001208:    706d6178    xamp    DCD    1886216568
        0x0000120c:    000a656c    le..    DCD    681324
        0x00001210:    10000020     ...    DCD    268435488
        0x00001214:    40010000    ...@    DCD    1073807360
    $t
    i.ndigits_in_hex
    ndigits_in_hex
        0x00001218:    b530        0.      PUSH     {r4,r5,lr}
        0x0000121a:    4602        .F      MOV      r2,r0
        0x0000121c:    460b        .F      MOV      r3,r1
        0x0000121e:    2400        .$      MOVS     r4,#0
        0x00001220:    ea820104    ....    EOR      r1,r2,r4
        0x00001224:    405c        \@      EORS     r4,r4,r3
        0x00001226:    4321        !C      ORRS     r1,r1,r4
        0x00001228:    d101        ..      BNE      0x122e ; ndigits_in_hex + 22
        0x0000122a:    2101        .!      MOVS     r1,#1
        0x0000122c:    e000        ..      B        0x1230 ; ndigits_in_hex + 24
        0x0000122e:    2100        .!      MOVS     r1,#0
        0x00001230:    4608        .F      MOV      r0,r1
        0x00001232:    e004        ..      B        0x123e ; ndigits_in_hex + 38
        0x00001234:    0911        ..      LSRS     r1,r2,#4
        0x00001236:    ea417203    A..r    ORR      r2,r1,r3,LSL #28
        0x0000123a:    091b        ..      LSRS     r3,r3,#4
        0x0000123c:    1c40        @.      ADDS     r0,r0,#1
        0x0000123e:    2400        .$      MOVS     r4,#0
        0x00001240:    ea820104    ....    EOR      r1,r2,r4
        0x00001244:    405c        \@      EORS     r4,r4,r3
        0x00001246:    4321        !C      ORRS     r1,r1,r4
        0x00001248:    d1f4        ..      BNE      0x1234 ; ndigits_in_hex + 28
        0x0000124a:    bd30        0.      POP      {r4,r5,pc}
    i.ndigits_in_i64
    ndigits_in_i64
        0x0000124c:    b570        p.      PUSH     {r4-r6,lr}
        0x0000124e:    4604        .F      MOV      r4,r0
        0x00001250:    460d        .F      MOV      r5,r1
        0x00001252:    2100        .!      MOVS     r1,#0
        0x00001254:    4608        .F      MOV      r0,r1
        0x00001256:    1a61        a.      SUBS     r1,r4,r1
        0x00001258:    eb750000    u...    SBCS     r0,r5,r0
        0x0000125c:    da03        ..      BGE      0x1266 ; ndigits_in_i64 + 26
        0x0000125e:    2200        ."      MOVS     r2,#0
        0x00001260:    4264        dB      RSBS     r4,r4,#0
        0x00001262:    eb620505    b...    SBC      r5,r2,r5
        0x00001266:    4620         F      MOV      r0,r4
        0x00001268:    4629        )F      MOV      r1,r5
        0x0000126a:    f000f801    ....    BL       ndigits_in_u64 ; 0x1270
        0x0000126e:    bd70        p.      POP      {r4-r6,pc}
    i.ndigits_in_u64
    ndigits_in_u64
        0x00001270:    b570        p.      PUSH     {r4-r6,lr}
        0x00001272:    4604        .F      MOV      r4,r0
        0x00001274:    460d        .F      MOV      r5,r1
        0x00001276:    2100        .!      MOVS     r1,#0
        0x00001278:    ea840001    ....    EOR      r0,r4,r1
        0x0000127c:    4069        i@      EORS     r1,r1,r5
        0x0000127e:    4308        .C      ORRS     r0,r0,r1
        0x00001280:    d101        ..      BNE      0x1286 ; ndigits_in_u64 + 22
        0x00001282:    2001        .       MOVS     r0,#1
        0x00001284:    e000        ..      B        0x1288 ; ndigits_in_u64 + 24
        0x00001286:    2000        .       MOVS     r0,#0
        0x00001288:    4606        .F      MOV      r6,r0
        0x0000128a:    e006        ..      B        0x129a ; ndigits_in_u64 + 42
        0x0000128c:    4620         F      MOV      r0,r4
        0x0000128e:    4629        )F      MOV      r1,r5
        0x00001290:    f7fffe23    ..#.    BL       divu64_10 ; 0xeda
        0x00001294:    4604        .F      MOV      r4,r0
        0x00001296:    460d        .F      MOV      r5,r1
        0x00001298:    1c76        v.      ADDS     r6,r6,#1
        0x0000129a:    2100        .!      MOVS     r1,#0
        0x0000129c:    ea840001    ....    EOR      r0,r4,r1
        0x000012a0:    4069        i@      EORS     r1,r1,r5
        0x000012a2:    4308        .C      ORRS     r0,r0,r1
        0x000012a4:    d1f2        ..      BNE      0x128c ; ndigits_in_u64 + 28
        0x000012a6:    4630        0F      MOV      r0,r6
        0x000012a8:    bd70        p.      POP      {r4-r6,pc}
    i.padbuffer
    padbuffer
        0x000012aa:    b530        0.      PUSH     {r4,r5,lr}
        0x000012ac:    4603        .F      MOV      r3,r0
        0x000012ae:    2000        .       MOVS     r0,#0
        0x000012b0:    2a00        .*      CMP      r2,#0
        0x000012b2:    dc00        ..      BGT      0x12b6 ; padbuffer + 12
        0x000012b4:    bd30        0.      POP      {r4,r5,pc}
        0x000012b6:    e003        ..      B        0x12c0 ; padbuffer + 22
        0x000012b8:    b10b        ..      CBZ      r3,0x12be ; padbuffer + 20
        0x000012ba:    f8031b01    ....    STRB     r1,[r3],#1
        0x000012be:    1c40        @.      ADDS     r0,r0,#1
        0x000012c0:    1e14        ..      SUBS     r4,r2,#0
        0x000012c2:    f1a20201    ....    SUB      r2,r2,#1
        0x000012c6:    d1f7        ..      BNE      0x12b8 ; padbuffer + 14
        0x000012c8:    bf00        ..      NOP      
        0x000012ca:    e7f3        ..      B        0x12b4 ; padbuffer + 10
    i.simple_strlen
    simple_strlen
        0x000012cc:    4601        .F      MOV      r1,r0
        0x000012ce:    2000        .       MOVS     r0,#0
        0x000012d0:    b901        ..      CBNZ     r1,0x12d4 ; simple_strlen + 8
        0x000012d2:    4770        pG      BX       lr
        0x000012d4:    e000        ..      B        0x12d8 ; simple_strlen + 12
        0x000012d6:    1c40        @.      ADDS     r0,r0,#1
        0x000012d8:    f8113b01    ...;    LDRB     r3,[r1],#1
        0x000012dc:    2b00        .+      CMP      r3,#0
        0x000012de:    d1fa        ..      BNE      0x12d6 ; simple_strlen + 10
        0x000012e0:    bf00        ..      NOP      
        0x000012e2:    e7f6        ..      B        0x12d2 ; simple_strlen + 6
    i.uart_disable
    uart_disable
        0x000012e4:    b510        ..      PUSH     {r4,lr}
        0x000012e6:    4604        .F      MOV      r4,r0
        0x000012e8:    200a        .       MOVS     r0,#0xa
        0x000012ea:    f7fffb5b    ..[.    BL       am_util_delay_ms ; 0x9a4
        0x000012ee:    4620         F      MOV      r0,r4
        0x000012f0:    f7fffb22    ..".    BL       am_hal_uart_disable ; 0x938
        0x000012f4:    4620         F      MOV      r0,r4
        0x000012f6:    f7fffacb    ....    BL       am_hal_uart_clock_disable ; 0x890
        0x000012fa:    bf00        ..      NOP      
        0x000012fc:    2073        s       MOVS     r0,#0x73
        0x000012fe:    4912        .I      LDR      r1,[pc,#72] ; [0x1348] = 0x40010000
        0x00001300:    6608        .f      STR      r0,[r1,#0x60]
        0x00001302:    4608        .F      MOV      r0,r1
        0x00001304:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00001306:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x0000130a:    6508        .e      STR      r0,[r1,#0x50]
        0x0000130c:    4608        .F      MOV      r0,r1
        0x0000130e:    6a00        .j      LDR      r0,[r0,#0x20]
        0x00001310:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x00001314:    f04050c0    @..P    ORR      r0,r0,#0x18000000
        0x00001318:    6208        .b      STR      r0,[r1,#0x20]
        0x0000131a:    2000        .       MOVS     r0,#0
        0x0000131c:    6608        .f      STR      r0,[r1,#0x60]
        0x0000131e:    bf00        ..      NOP      
        0x00001320:    bf00        ..      NOP      
        0x00001322:    2073        s       MOVS     r0,#0x73
        0x00001324:    6608        .f      STR      r0,[r1,#0x60]
        0x00001326:    4608        .F      MOV      r0,r1
        0x00001328:    6d00        .m      LDR      r0,[r0,#0x50]
        0x0000132a:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x0000132e:    6508        .e      STR      r0,[r1,#0x50]
        0x00001330:    4608        .F      MOV      r0,r1
        0x00001332:    6a40        @j      LDR      r0,[r0,#0x24]
        0x00001334:    f02000ff     ...    BIC      r0,r0,#0xff
        0x00001338:    f0400018    @...    ORR      r0,r0,#0x18
        0x0000133c:    6248        Hb      STR      r0,[r1,#0x24]
        0x0000133e:    2000        .       MOVS     r0,#0
        0x00001340:    6608        .f      STR      r0,[r1,#0x60]
        0x00001342:    bf00        ..      NOP      
        0x00001344:    bd10        ..      POP      {r4,pc}
    $d
        0x00001346:    0000        ..      DCW    0
        0x00001348:    40010000    ...@    DCD    1073807360
    $t
    i.uart_init
    uart_init
        0x0000134c:    b510        ..      PUSH     {r4,lr}
        0x0000134e:    4604        .F      MOV      r4,r0
        0x00001350:    bf00        ..      NOP      
        0x00001352:    2073        s       MOVS     r0,#0x73
        0x00001354:    491a        .I      LDR      r1,[pc,#104] ; [0x13c0] = 0x40010000
        0x00001356:    6608        .f      STR      r0,[r1,#0x60]
        0x00001358:    4608        .F      MOV      r0,r1
        0x0000135a:    6d00        .m      LDR      r0,[r0,#0x50]
        0x0000135c:    f42040e0     ..@    BIC      r0,r0,#0x7000
        0x00001360:    6508        .e      STR      r0,[r1,#0x50]
        0x00001362:    4608        .F      MOV      r0,r1
        0x00001364:    6a00        .j      LDR      r0,[r0,#0x20]
        0x00001366:    f020407f     ..@    BIC      r0,r0,#0xff000000
        0x0000136a:    f0405080    @..P    ORR      r0,r0,#0x10000000
        0x0000136e:    6208        .b      STR      r0,[r1,#0x20]
        0x00001370:    2000        .       MOVS     r0,#0
        0x00001372:    6608        .f      STR      r0,[r1,#0x60]
        0x00001374:    bf00        ..      NOP      
        0x00001376:    bf00        ..      NOP      
        0x00001378:    2073        s       MOVS     r0,#0x73
        0x0000137a:    6608        .f      STR      r0,[r1,#0x60]
        0x0000137c:    4608        .F      MOV      r0,r1
        0x0000137e:    6d00        .m      LDR      r0,[r0,#0x50]
        0x00001380:    f42020e0     ..     BIC      r0,r0,#0x70000
        0x00001384:    6508        .e      STR      r0,[r1,#0x50]
        0x00001386:    4608        .F      MOV      r0,r1
        0x00001388:    6a40        @j      LDR      r0,[r0,#0x24]
        0x0000138a:    f02000ff     ...    BIC      r0,r0,#0xff
        0x0000138e:    f0400012    @...    ORR      r0,r0,#0x12
        0x00001392:    6248        Hb      STR      r0,[r1,#0x24]
        0x00001394:    2000        .       MOVS     r0,#0
        0x00001396:    6608        .f      STR      r0,[r1,#0x60]
        0x00001398:    bf00        ..      NOP      
        0x0000139a:    4620         F      MOV      r0,r4
        0x0000139c:    f7fffa86    ....    BL       am_hal_uart_clock_enable ; 0x8ac
        0x000013a0:    4620         F      MOV      r0,r4
        0x000013a2:    f7fffac9    ....    BL       am_hal_uart_disable ; 0x938
        0x000013a6:    4907        .I      LDR      r1,[pc,#28] ; [0x13c4] = 0x10000000
        0x000013a8:    4620         F      MOV      r0,r4
        0x000013aa:    f7fffa91    ....    BL       am_hal_uart_config ; 0x8d0
        0x000013ae:    2112        .!      MOVS     r1,#0x12
        0x000013b0:    4620         F      MOV      r0,r4
        0x000013b2:    f7fffad5    ....    BL       am_hal_uart_fifo_config ; 0x960
        0x000013b6:    4620         F      MOV      r0,r4
        0x000013b8:    f7fffac8    ....    BL       am_hal_uart_enable ; 0x94c
        0x000013bc:    bd10        ..      POP      {r4,pc}
    $d
        0x000013be:    0000        ..      DCW    0
        0x000013c0:    40010000    ...@    DCD    1073807360
        0x000013c4:    10000000    ....    DCD    268435456
    $t
    i.uint64_to_hexstr
    uint64_to_hexstr
        0x000013c8:    e92d41f0    -..A    PUSH     {r4-r8,lr}
        0x000013cc:    b085        ..      SUB      sp,sp,#0x14
        0x000013ce:    4604        .F      MOV      r4,r0
        0x000013d0:    460d        .F      MOV      r5,r1
        0x000013d2:    461e        .F      MOV      r6,r3
        0x000013d4:    2100        .!      MOVS     r1,#0
        0x000013d6:    468c        .F      MOV      r12,r1
        0x000013d8:    ea84070c    ....    EOR      r7,r4,r12
        0x000013dc:    ea850c0c    ....    EOR      r12,r5,r12
        0x000013e0:    ea57070c    W...    ORRS     r7,r7,r12
        0x000013e4:    d105        ..      BNE      0x13f2 ; uint64_to_hexstr + 42
        0x000013e6:    f04f0830    O.0.    MOV      r8,#0x30
        0x000013ea:    460f        .F      MOV      r7,r1
        0x000013ec:    1c49        I.      ADDS     r1,r1,#1
        0x000013ee:    f80d8007    ....    STRB     r8,[sp,r7]
        0x000013f2:    e016        ..      B        0x1422 ; uint64_to_hexstr + 90
        0x000013f4:    270f        .'      MOVS     r7,#0xf
        0x000013f6:    4027        '@      ANDS     r7,r7,r4
        0x000013f8:    b2fb        ..      UXTB     r3,r7
        0x000013fa:    2b09        .+      CMP      r3,#9
        0x000013fc:    dd05        ..      BLE      0x140a ; uint64_to_hexstr + 66
        0x000013fe:    b10e        ..      CBZ      r6,0x1404 ; uint64_to_hexstr + 60
        0x00001400:    2727        ''      MOVS     r7,#0x27
        0x00001402:    e000        ..      B        0x1406 ; uint64_to_hexstr + 62
        0x00001404:    2707        .'      MOVS     r7,#7
        0x00001406:    441f        .D      ADD      r7,r7,r3
        0x00001408:    b2fb        ..      UXTB     r3,r7
        0x0000140a:    f1030730    ..0.    ADD      r7,r3,#0x30
        0x0000140e:    f00708ff    ....    AND      r8,r7,#0xff
        0x00001412:    460f        .F      MOV      r7,r1
        0x00001414:    1c49        I.      ADDS     r1,r1,#1
        0x00001416:    f80d8007    ....    STRB     r8,[sp,r7]
        0x0000141a:    0927        '.      LSRS     r7,r4,#4
        0x0000141c:    ea477405    G..t    ORR      r4,r7,r5,LSL #28
        0x00001420:    092d        -.      LSRS     r5,r5,#4
        0x00001422:    f04f0c00    O...    MOV      r12,#0
        0x00001426:    ea84070c    ....    EOR      r7,r4,r12
        0x0000142a:    ea850c0c    ....    EOR      r12,r5,r12
        0x0000142e:    ea57070c    W...    ORRS     r7,r7,r12
        0x00001432:    d1df        ..      BNE      0x13f4 ; uint64_to_hexstr + 44
        0x00001434:    4608        .F      MOV      r0,r1
        0x00001436:    b14a        J.      CBZ      r2,0x144c ; uint64_to_hexstr + 132
        0x00001438:    e003        ..      B        0x1442 ; uint64_to_hexstr + 122
        0x0000143a:    f81d7001    ...p    LDRB     r7,[sp,r1]
        0x0000143e:    f8027b01    ...{    STRB     r7,[r2],#1
        0x00001442:    1e0f        ..      SUBS     r7,r1,#0
        0x00001444:    f1a10101    ....    SUB      r1,r1,#1
        0x00001448:    d1f7        ..      BNE      0x143a ; uint64_to_hexstr + 114
        0x0000144a:    7017        .p      STRB     r7,[r2,#0]
        0x0000144c:    b005        ..      ADD      sp,sp,#0x14
        0x0000144e:    e8bd81f0    ....    POP      {r4-r8,pc}
    i.uint64_to_str
    uint64_to_str
        0x00001452:    e92d4ff0    -..O    PUSH     {r4-r11,lr}
        0x00001456:    b087        ..      SUB      sp,sp,#0x1c
        0x00001458:    4607        .F      MOV      r7,r0
        0x0000145a:    4688        .F      MOV      r8,r1
        0x0000145c:    4616        .F      MOV      r6,r2
        0x0000145e:    f04f0900    O...    MOV      r9,#0
        0x00001462:    46cb        .F      MOV      r11,r9
        0x00001464:    bf00        ..      NOP      
        0x00001466:    4638        8F      MOV      r0,r7
        0x00001468:    4641        AF      MOV      r1,r8
        0x0000146a:    f7fffd36    ..6.    BL       divu64_10 ; 0xeda
        0x0000146e:    4604        .F      MOV      r4,r0
        0x00001470:    460d        .F      MOV      r5,r1
        0x00001472:    210a        .!      MOVS     r1,#0xa
        0x00001474:    fba40101    ....    UMULL    r0,r1,r4,r1
        0x00001478:    ebb70a00    ....    SUBS     r10,r7,r0
        0x0000147c:    f10a0030    ..0.    ADD      r0,r10,#0x30
        0x00001480:    b2c2        ..      UXTB     r2,r0
        0x00001482:    4648        HF      MOV      r0,r9
        0x00001484:    f1090901    ....    ADD      r9,r9,#1
        0x00001488:    f80d2000    ...     STRB     r2,[sp,r0]
        0x0000148c:    4627        'F      MOV      r7,r4
        0x0000148e:    46a8        .F      MOV      r8,r5
        0x00001490:    f04f0200    O...    MOV      r2,#0
        0x00001494:    ea870002    ....    EOR      r0,r7,r2
        0x00001498:    ea880102    ....    EOR      r1,r8,r2
        0x0000149c:    4308        .C      ORRS     r0,r0,r1
        0x0000149e:    d1e2        ..      BNE      0x1466 ; uint64_to_str + 20
        0x000014a0:    46cb        .F      MOV      r11,r9
        0x000014a2:    b156        V.      CBZ      r6,0x14ba ; uint64_to_str + 104
        0x000014a4:    e003        ..      B        0x14ae ; uint64_to_str + 92
        0x000014a6:    f81d0009    ....    LDRB     r0,[sp,r9]
        0x000014aa:    f8060b01    ....    STRB     r0,[r6],#1
        0x000014ae:    f1b90000    ....    SUBS     r0,r9,#0
        0x000014b2:    f1a90901    ....    SUB      r9,r9,#1
        0x000014b6:    d1f6        ..      BNE      0x14a6 ; uint64_to_str + 84
        0x000014b8:    7030        0p      STRB     r0,[r6,#0]
        0x000014ba:    4658        XF      MOV      r0,r11
        0x000014bc:    b007        ..      ADD      sp,sp,#0x1c
        0x000014be:    e8bd8ff0    ....    POP      {r4-r11,pc}
        0x000014c2:    0000        ..      MOVS     r0,r0
    x$fpl$d2f
    $v0
    __aeabi_d2f
    _d2f
        0x000014c4:    f0214200    !..B    BIC      r2,r1,#0x80000000
        0x000014c8:    f1a25260    ..`R    SUB      r2,r2,#0x38000000
        0x000014cc:    f5b21f80    ....    CMP      r2,#0x100000
        0x000014d0:    f0014300    ...C    AND      r3,r1,#0x80000000
        0x000014d4:    bf28        (.      IT       CS
        0x000014d6:    f1d26c7f    ...l    RSBSCS   r12,r2,#0xff00000
        0x000014da:    d90b        ..      BLS      0x14f4 ; __aeabi_d2f + 48
        0x000014dc:    ea5f1c00    _...    LSLS     r12,r0,#4
        0x000014e0:    ea4302c2    C...    ORR      r2,r3,r2,LSL #3
        0x000014e4:    eb427050    B.Pp    ADC      r0,r2,r0,LSR #29
        0x000014e8:    bf18        ..      IT       NE
        0x000014ea:    4770        pG      BXNE     lr
        0x000014ec:    bf28        (.      IT       CS
        0x000014ee:    f0200001     ...    BICCS    r0,r0,#1
        0x000014f2:    4770        pG      BX       lr
        0x000014f4:    f5b21f80    ....    CMP      r2,#0x100000
        0x000014f8:    bfbc        ..      ITT      LT
        0x000014fa:    4618        .F      MOVLT    r0,r3
        0x000014fc:    4770        pG      BXLT     lr
        0x000014fe:    ea4f0c41    O.A.    LSL      r12,r1,#1
        0x00001502:    f51c1f00    ....    CMN      r12,#0x200000
        0x00001506:    d202        ..      BCS      0x150e ; __aeabi_d2f + 74
        0x00001508:    4608        .F      MOV      r0,r1
        0x0000150a:    f000b85f    .._.    B.W      __fpl_fretinf ; 0x15cc
        0x0000150e:    b570        p.      PUSH     {r4-r6,lr}
        0x00001510:    f000f809    ....    BL       __fpl_dnaninf ; 0x1526
    $d
        0x00001514:    89000000    ....    DCD    2298478592
    $t
        0x00001518:    f7ffbff6    ....    B.W      0x1508 ; __aeabi_d2f + 68
        0x0000151c:    f04f4000    O..@    MOV      r0,#0x80000000
        0x00001520:    f5a00080    ....    SUB      r0,r0,#0x400000
        0x00001524:    4770        pG      BX       lr
    x$fpl$dnaninf
    $v0
    __fpl_dnaninf
        0x00001526:    f10e0e02    ....    ADD      lr,lr,#2
        0x0000152a:    f02e0e03    ....    BIC      lr,lr,#3
        0x0000152e:    f85e6b04    ^..k    LDR      r6,[lr],#4
        0x00001532:    4236        6B      TST      r6,r6
        0x00001534:    d405        ..      BMI      0x1542 ; __fpl_dnaninf + 28
        0x00001536:    2a01        .*      CMP      r2,#1
        0x00001538:    eb430503    C...    ADC      r5,r3,r3
        0x0000153c:    f5151f00    ....    CMN      r5,#0x200000
        0x00001540:    d812        ..      BHI      0x1568 ; __fpl_dnaninf + 66
        0x00001542:    2801        .(      CMP      r0,#1
        0x00001544:    eb410c01    A...    ADC      r12,r1,r1
        0x00001548:    f51c1f00    ....    CMN      r12,#0x200000
        0x0000154c:    d80c        ..      BHI      0x1568 ; __fpl_dnaninf + 66
        0x0000154e:    d10e        ..      BNE      0x156e ; __fpl_dnaninf + 72
        0x00001550:    ea4f7cd1    O..|    LSR      r12,r1,#31
        0x00001554:    f5151f00    ....    CMN      r5,#0x200000
        0x00001558:    eb0c0c4c    ..L.    ADD      r12,r12,r12,LSL #1
        0x0000155c:    f10c0c02    ....    ADD      r12,r12,#2
        0x00001560:    bf08        ..      IT       EQ
        0x00001562:    eb4c7cd3    L..|    ADCEQ    r12,r12,r3,LSR #31
        0x00001566:    e004        ..      B        0x1572 ; __fpl_dnaninf + 76
        0x00001568:    f04f0c08    O...    MOV      r12,#8
        0x0000156c:    e001        ..      B        0x1572 ; __fpl_dnaninf + 76
        0x0000156e:    ea4f7cd3    O..|    LSR      r12,r3,#31
        0x00001572:    eb0c054c    ..L.    ADD      r5,r12,r12,LSL #1
        0x00001576:    fa26f605    &...    LSR      r6,r6,r5
        0x0000157a:    f0060607    ....    AND      r6,r6,#7
        0x0000157e:    f1b60c04    ....    SUBS     r12,r6,#4
        0x00001582:    d206        ..      BCS      0x1592 ; __fpl_dnaninf + 108
        0x00001584:    eb0e0c86    ....    ADD      r12,lr,r6,LSL #2
        0x00001588:    e8bd4070    ..p@    POP      {r4-r6,lr}
        0x0000158c:    f04c0c01    L...    ORR      r12,r12,#1
        0x00001590:    4760        `G      BX       r12
        0x00001592:    e8dff00c    ....    TBB      [pc,r12]
    $d
        0x00001596:    0b09        ..      DCW    2825
        0x00001598:    0202        ..      DCW    514
    $t
        0x0000159a:    f04f4100    O..A    MOV      r1,#0x80000000
        0x0000159e:    f04f0000    O...    MOV      r0,#0
        0x000015a2:    f5a12100    ...!    SUB      r1,r1,#0x80000
        0x000015a6:    bd70        p.      POP      {r4-r6,pc}
        0x000015a8:    4619        .F      MOV      r1,r3
        0x000015aa:    4610        .F      MOV      r0,r2
        0x000015ac:    2801        .(      CMP      r0,#1
        0x000015ae:    eb510401    Q...    ADCS     r4,r1,r1
        0x000015b2:    bf18        ..      IT       NE
        0x000015b4:    f5d41400    ....    RSBSNE   r4,r4,#0x200000
        0x000015b8:    bf84        ..      ITT      HI
        0x000015ba:    2000        .       MOVHI    r0,#0
        0x000015bc:    f0014100    ...A    ANDHI    r1,r1,#0x80000000
        0x000015c0:    bd70        p.      POP      {r4-r6,pc}
    x$fpl$fpinit
    $v0
    _fp_init
        0x000015c2:    f04f7040    O.@p    MOV      r0,#0x3000000
        0x000015c6:    eee10a10    ....    VMSR     FPSCR,r0
    __fplib_config_fpu_vfp
    __fplib_config_pureend_doubles
        0x000015ca:    4770        pG      BX       lr
    x$fpl$fretinf
    $v0
    __fpl_fretinf
        0x000015cc:    21ff        .!      MOVS     r1,#0xff
        0x000015ce:    ea4150d0    A..P    ORR      r0,r1,r0,LSR #23
        0x000015d2:    05c0        ..      LSLS     r0,r0,#23
        0x000015d4:    4770        pG      BX       lr
    x$fpl$usenofp
    __I$use$fp
        0x000015d6:    0000        ..      MOVS     r0,r0
    $d.realdata
    Region$$Table$$Base
        0x000015d8:    000015f8    ....    DCD    5624
        0x000015dc:    10000000    ....    DCD    268435456
        0x000015e0:    00000048    H...    DCD    72
        0x000015e4:    000000d4    ....    DCD    212
        0x000015e8:    00001640    @...    DCD    5696
        0x000015ec:    10000048    H...    DCD    268435528
        0x000015f0:    00001160    `...    DCD    4448
        0x000015f4:    000000f0    ....    DCD    240
    Region$$Table$$Limit

** Section #2 'SRAM' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 72 bytes (alignment 4)
    Address: 0x10000000

    0x10000000:   00 c2 01 00 60 00 00 00 00 00 00 00 00 00 00 00    ....`...........
    0x10000010:   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    ................
    0x10000020:   22 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00    ".......!.......
    0x10000030:   1c 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00    ................
    0x10000040:   19 00 00 00 00 00 00 00                            ........


** Section #3 'SRAM' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4448 bytes (alignment 8)
    Address: 0x10000048


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1476 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 2800 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 14508 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 5932 bytes


** Section #8 '.debug_loc' (SHT_PROGBITS)
    Size   : 2516 bytes


** Section #9 '.debug_macinfo' (SHT_PROGBITS)
    Size   : 7140 bytes


** Section #10 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 779 bytes


** Section #11 '.symtab' (SHT_SYMTAB)
    Size   : 7440 bytes (alignment 4)
    String table #12 '.strtab'
    Last local symbol no. 313

    Symbol table .symtab (464 symbols, 313 local)

      #  Symbol Name                Value      Bind  Sec  Type  Vis  Size
    ========================================================================

      1  $d                         0x00000000   Lc    1   --   De 
      2  $t                         0x00000070   Lc    1   --   De 
      3  $d                         0x00000094   Lc    1   --   De 
      4  $t                         0x00000098   Lc    1   --   De 
      5  $d                         0x000000cc   Lc    1   --   De 
      6  $t                         0x000000d4   Lc    1   --   De 
      7  $d                         0x00000186   Lc    1   --   De 
      8  $t                         0x00000194   Lc    1   --   De 
      9  $d                         0x00000248   Lc    1   --   De 
     10  $t                         0x0000024c   Lc    1   --   De 
     11  $d                         0x00000254   Lc    1   --   De 
     12  $t                         0x00000258   Lc    1   --   De 
     13  $d                         0x00000296   Lc    1   --   De 
     14  $t                         0x0000029c   Lc    1   --   De 
     15  $d                         0x000004a4   Lc    1   --   De 
     16  $t                         0x000004a8   Lc    1   --   De 
     17  $d                         0x0000054c   Lc    1   --   De 
     18  $t                         0x00000550   Lc    1   --   De 
     19  $d                         0x000005f2   Lc    1   --   De 
     20  $t                         0x000005f8   Lc    1   --   De 
     21  $d                         0x00000614   Lc    1   --   De 
     22  $t                         0x00000618   Lc    1   --   De 
     23  $d                         0x00000656   Lc    1   --   De 
     24  $t                         0x0000065e   Lc    1   --   De 
     25  $d                         0x00000684   Lc    1   --   De 
     26  $t                         0x000006a4   Lc    1   --   De 
     27  $d                         0x000006c0   Lc    1   --   De 
     28  $t                         0x000006c4   Lc    1   --   De 
     29  $d                         0x000006dc   Lc    1   --   De 
     30  $t                         0x000006e0   Lc    1   --   De 
     31  $d                         0x0000070c   Lc    1   --   De 
     32  $t                         0x00000710   Lc    1   --   De 
     33  $d                         0x00000756   Lc    1   --   De 
     34  $t                         0x0000075c   Lc    1   --   De 
     35  $d                         0x00000768   Lc    1   --   De 
     36  $t                         0x0000076c   Lc    1   --   De 
     37  $d                         0x00000790   Lc    1   --   De 
     38  $t                         0x00000794   Lc    1   --   De 
     39  $d                         0x000007c8   Lc    1   --   De 
     40  $t                         0x000007cc   Lc    1   --   De 
     41  $d                         0x000007d8   Lc    1   --   De 
     42  $t                         0x000007dc   Lc    1   --   De 
     43  $d                         0x00000888   Lc    1   --   De 
     44  $t                         0x00000890   Lc    1   --   De 
     45  $d                         0x000008a8   Lc    1   --   De 
     46  $t                         0x000008ac   Lc    1   --   De 
     47  $d                         0x000008cc   Lc    1   --   De 
     48  $t                         0x000008d0   Lc    1   --   De 
     49  $d                         0x00000934   Lc    1   --   De 
     50  $t                         0x00000938   Lc    1   --   De 
     51  $d                         0x00000948   Lc    1   --   De 
     52  $t                         0x0000094c   Lc    1   --   De 
     53  $d                         0x0000095a   Lc    1   --   De 
     54  $t                         0x00000960   Lc    1   --   De 
     55  $d                         0x0000096e   Lc    1   --   De 
     56  $t                         0x00000974   Lc    1   --   De 
     57  $d                         0x00000994   Lc    1   --   De 
     58  $t                         0x00000998   Lc    1   --   De 
     59  $d                         0x000009a0   Lc    1   --   De 
     60  $t                         0x000009a4   Lc    1   --   De 
     61  $d                         0x00000a76   Lc    1   --   De 
     62  $t                         0x00000a7c   Lc    1   --   De 
     63  $d                         0x00000aae   Lc    1   --   De 
     64  $t                         0x00000ab8   Lc    1   --   De 
     65  $d                         0x00000abe   Lc    1   --   De 
     66  $t                         0x00000ac4   Lc    1   --   De 
     67  $d                         0x00000ace   Lc    1   --   De 
     68  $t                         0x00000ae4   Lc    1   --   De 
     69  $d                         0x00000e88   Lc    1   --   De 
     70  $t                         0x00000e98   Lc    1   --   De 
     71  $d                         0x0000111a   Lc    1   --   De 
     72  $t                         0x00001120   Lc    1   --   De 
     73  $d                         0x000011f4   Lc    1   --   De 
     74  $t                         0x00001218   Lc    1   --   De 
     75  $d                         0x00001346   Lc    1   --   De 
     76  $t                         0x0000134c   Lc    1   --   De 
     77  $d                         0x000013be   Lc    1   --   De 
     78  $t                         0x000013c8   Lc    1   --   De 
     79  $d                         0x00001514   Lc    1   --   De 
     80  $t                         0x00001518   Lc    1   --   De 
     81  $d                         0x00001596   Lc    1   --   De 
     82  $t                         0x0000159a   Lc    1   --   De 
     83  $d.realdata                0x000015d8   Lc    1   --   De 
     84  $d.realdata                0x10000000   Lc    2   --   De 
     85  ../src/deepsleep_wake.c    0x00000000   Lc  Abs  File  De 
     86  i.am_clkgen_isr            0x00000284   Lc    1  Sect  De 
     87  i.am_gpio_isr              0x000005f8   Lc    1  Sect  De 
     88  i.main                     0x00001120   Lc    1  Sect  De 
     89  i.uart_disable             0x000012e4   Lc    1  Sect  De 
     90  i.uart_init                0x0000134c   Lc    1  Sect  De 
     91  .data                      0x10000000   Lc    2  Sect  De   0x14
     92  ../../../../../devices/am_devices_led.c
                                    0x00000000   Lc  Abs  File  De 
     93  i.am_devices_led_array_init
                                    0x0000029c   Lc    1  Sect  De 
     94  i.am_devices_led_init      0x000002c0   Lc    1  Sect  De 
     95  i.am_devices_led_off       0x000004a8   Lc    1  Sect  De 
     96  i.am_devices_led_toggle    0x00000550   Lc    1  Sect  De 
     97  ../../../../../utils/am_util_delay.c
                                    0x00000000   Lc  Abs  File  De 
     98  i.am_util_delay_ms         0x000009a4   Lc    1  Sect  De 
     99  ..\..\..\..\..\utils\am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
    100  .emb_text                  0x00000138   Lc    1  Sect  De   0x22
    101  $v0                        0x00000138   Lc    1   --   De 
    102  ../../../../../utils/am_util_faultisr.c
                                    0x00000000   Lc  Abs  File  De 
    103  i.am_util_faultisr_collect_data
                                    0x000009c4   Lc    1  Sect  De 
    104  ../../../../../utils/am_util_stdio.c
                                    0x00000000   Lc  Abs  File  De 
    105  i.am_util_stdio_printf     0x00000a7c   Lc    1  Sect  De 
    106  i.am_util_stdio_printf_init
                                    0x00000ab8   Lc    1  Sect  De 
    107  i.am_util_stdio_terminal_clear
                                    0x00000ac4   Lc    1  Sect  De 
    108  i.am_util_stdio_vsprintf   0x00000ae4   Lc    1  Sect  De 
    109  i.decstr_to_int            0x00000e98   Lc    1  Sect  De 
    110  decstr_to_int              0x00000e99   Lc    1  Code  De   0x42
    111  i.divu64_10                0x00000eda   Lc    1  Sect  De 
    112  divu64_10                  0x00000edb   Lc    1  Code  De   0xcc
    113  i.ftoa                     0x00000fa8   Lc    1  Sect  De 
    114  ftoa                       0x00000fa9   Lc    1  Code  De   0x172
    115  i.ndigits_in_hex           0x00001218   Lc    1  Sect  De 
    116  ndigits_in_hex             0x00001219   Lc    1  Code  De   0x34
    117  i.ndigits_in_i64           0x0000124c   Lc    1  Sect  De 
    118  ndigits_in_i64             0x0000124d   Lc    1  Code  De   0x24
    119  i.ndigits_in_u64           0x00001270   Lc    1  Sect  De 
    120  ndigits_in_u64             0x00001271   Lc    1  Code  De   0x3a
    121  i.padbuffer                0x000012aa   Lc    1  Sect  De 
    122  padbuffer                  0x000012ab   Lc    1  Code  De   0x22
    123  i.simple_strlen            0x000012cc   Lc    1  Sect  De 
    124  simple_strlen              0x000012cd   Lc    1  Code  De   0x18
    125  i.uint64_to_hexstr         0x000013c8   Lc    1  Sect  De 
    126  uint64_to_hexstr           0x000013c9   Lc    1  Code  De   0x8a
    127  i.uint64_to_str            0x00001452   Lc    1  Sect  De 
    128  uint64_to_str              0x00001453   Lc    1  Code  De   0x70
    129  .bss                       0x10000048   Lc    3  Sect  De   0x100
    130  g_prfbuf                   0x10000048   Lc    3  Data  De   0x100
    131  .data                      0x10000014   Lc    2  Sect  De   0x5
    132  g_bTxtXlate                0x10000018   Lc    2  Data  De   0x1
    133  ../keil/startup_keil.s     0x00000000   Lc  Abs  File  De 
    134  STACK                      0x100001a8   Lc    3  Sect  De   0x1000
    135  StackMem                   0x100001a8   Lc    3  Data  De 
    136  HEAP                       0x100001a8   Lc    3  Sect  De 
    137  HeapMem                    0x100001a8   Lc    3  Data  De 
    138  RESET                      0x00000000   Lc    1  Sect  De   0x98
    139  $v0                        0x00000070   Lc    1   --   De 
    140  .text                      0x0000017c   Lc    1  Sect  De   0x18
    141  $v0                        0x0000017c   Lc    1   --   De 
    142  ../am_hal_global.c         0x00000000   Lc  Abs  File  De 
    143  .data                      0x1000001c   Lc    2  Sect  De   0x4
    144  ../am_hal_clkgen.c         0x00000000   Lc  Abs  File  De 
    145  i.am_hal_clkgen_osc_start  0x00000618   Lc    1  Sect  De 
    146  i.am_hal_clkgen_osc_stop   0x0000062e   Lc    1  Sect  De 
    147  i.am_hal_clkgen_sysclk_get 0x00000644   Lc    1  Sect  De 
    148  i.am_hal_clkgen_sysclk_select
                                    0x000006a4   Lc    1  Sect  De 
    149  ..\am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    150  .emb_text                  0x0000015c   Lc    1  Sect  De   0x6
    151  $v0                        0x0000015c   Lc    1   --   De 
    152  ../am_hal_flash.c          0x00000000   Lc  Abs  File  De 
    153  ../am_hal_gpio.c           0x00000000   Lc  Abs  File  De 
    154  i.am_hal_gpio_int_clear    0x000006b4   Lc    1  Sect  De 
    155  i.am_hal_gpio_int_enable   0x000006c4   Lc    1  Sect  De 
    156  i.am_hal_gpio_out_enable_bit_get
                                    0x000006e0   Lc    1  Sect  De 
    157  ..\am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    158  .emb_text                  0x00000164   Lc    1  Sect  De   0x16
    159  $v0                        0x00000164   Lc    1   --   De 
    160  ../am_hal_interrupt.c      0x00000000   Lc  Abs  File  De 
    161  i.am_hal_interrupt_enable  0x00000710   Lc    1  Sect  De 
    162  ../am_hal_mcuctrl.c        0x00000000   Lc  Abs  File  De 
    163  i.am_hal_mcuctrl_bandgap_disable
                                    0x0000075c   Lc    1  Sect  De 
    164  i.am_hal_mcuctrl_bucks_enable
                                    0x0000076c   Lc    1  Sect  De 
    165  i.am_hal_mcuctrl_fault_status
                                    0x00000794   Lc    1  Sect  De 
    166  i.am_hal_mcuctrl_sram_power_set
                                    0x000007cc   Lc    1  Sect  De 
    167  ../am_hal_rtc.c            0x00000000   Lc  Abs  File  De 
    168  i.am_hal_rtc_alarm_interval_set
                                    0x000007dc   Lc    1  Sect  De 
    169  i.am_hal_rtc_int_clear     0x00000810   Lc    1  Sect  De 
    170  i.am_hal_rtc_int_enable    0x0000081a   Lc    1  Sect  De 
    171  i.am_hal_rtc_osc_disable   0x0000082a   Lc    1  Sect  De 
    172  i.am_hal_rtc_osc_enable    0x00000838   Lc    1  Sect  De 
    173  i.am_hal_rtc_osc_select    0x00000846   Lc    1  Sect  De 
    174  ../am_hal_sysctrl.c        0x00000000   Lc  Abs  File  De 
    175  i.am_hal_sysctrl_sleep     0x0000085c   Lc    1  Sect  De 
    176  ../am_hal_uart.c           0x00000000   Lc  Abs  File  De 
    177  i.am_hal_uart_clock_disable
                                    0x00000890   Lc    1  Sect  De 
    178  i.am_hal_uart_clock_enable 0x000008ac   Lc    1  Sect  De 
    179  i.am_hal_uart_config       0x000008d0   Lc    1  Sect  De 
    180  i.am_hal_uart_disable      0x00000938   Lc    1  Sect  De 
    181  i.am_hal_uart_enable       0x0000094c   Lc    1  Sect  De 
    182  i.am_hal_uart_fifo_config  0x00000960   Lc    1  Sect  De 
    183  i.am_hal_uart_string_transmit_polled
                                    0x00000974   Lc    1  Sect  De 
    184  ../am_bsp.c                0x00000000   Lc  Abs  File  De 
    185  i.am_bsp_low_power_init    0x0000025a   Lc    1  Sect  De 
    186  i.am_bsp_uart_string_print 0x0000027c   Lc    1  Sect  De 
    187  .data                      0x10000020   Lc    2  Sect  De   0x28
    188  ../am_hal_debug.c          0x00000000   Lc  Abs  File  De 
    189  ../am_hal_iom.c            0x00000000   Lc  Abs  File  De 
    190  ../am_hal_itm.c            0x00000000   Lc  Abs  File  De 
    191  ../am_hal_tpiu.c           0x00000000   Lc  Abs  File  De 
    192  ../am_hal_vcomp.c          0x00000000   Lc  Abs  File  De 
    193  i.am_hal_vcomp_disable     0x00000998   Lc    1  Sect  De 
    194  ../am_hal_i2c_bit_bang.c   0x00000000   Lc  Abs  File  De 
    195  ../am_hal_queue.c          0x00000000   Lc  Abs  File  De 
    196  dc.s                       0x00000000   Lc  Abs  File  De 
    197  ../clib/longlong.s         0x00000000   Lc  Abs  File  De 
    198  ../clib/memcpset.s         0x00000000   Lc  Abs  File  De 
    199  .text                      0x00000194   Lc    1  Sect  De   0x4e
    200  ../clib/heapaux.c          0x00000000   Lc  Abs  File  De 
    201  .text                      0x000001e2   Lc    1  Sect  De 
    202  ../clib/angel/startup.s    0x00000000   Lc  Abs  File  De 
    203  !!!main                    0x00000098   Lc    1  Sect  De   0x8
    204  ../fplib/d2f.s             0x00000000   Lc  Abs  File  De 
    205  x$fpl$d2f                  0x000014c4   Lc    1  Sect  De   0x62
    206  $v0                        0x000014c4   Lc    1   --   De 
    207  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    208  .ARM.Collect$$rtentry$$00000000
                                    0x00000118   Lc    1  Sect  De 
    209  ../fplib/dnaninf.s         0x00000000   Lc  Abs  File  De 
    210  x$fpl$dnaninf              0x00001526   Lc    1  Sect  De   0x9c
    211  $v0                        0x00001526   Lc    1   --   De 
    212  ../fplib/fretinf.s         0x00000000   Lc  Abs  File  De 
    213  x$fpl$fretinf              0x000015cc   Lc    1  Sect  De   0xa
    214  $v0                        0x000015cc   Lc    1   --   De 
    215  ../fplib/usenofp.s         0x00000000   Lc  Abs  File  De 
    216  x$fpl$usenofp              0x000015d6   Lc    1  Sect  De 
    217  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    218  .ARM.Collect$$rtentry$$00000002
                                    0x00000118   Lc    1  Sect  De 
    219  .ARM.Collect$$rtentry$$00000009
                                    0x0000011e   Lc    1  Sect  De 
    220  .ARM.Collect$$rtentry$$0000000A
                                    0x0000011e   Lc    1  Sect  De   0x4
    221  .ARM.Collect$$rtentry$$0000000C
                                    0x00000122   Lc    1  Sect  De 
    222  .ARM.Collect$$rtentry$$0000000D
                                    0x00000122   Lc    1  Sect  De   0x8
    223  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    224  .ARM.Collect$$rtentry$$00000004
                                    0x00000118   Lc    1  Sect  De   0x6
    225  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    226  .text                      0x000001e8   Lc    1  Sect  De   0x4a
    227  ../clib/stdlib.c           0x00000000   Lc  Abs  File  De 
    228  .text                      0x00000232   Lc    1  Sect  De 
    229  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    230  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    231  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    232  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    233  .ARM.Collect$$libinit$$00000000
                                    0x0000010c   Lc    1  Sect  De   0x2
    234  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    235  .text                      0x00000244   Lc    1  Sect  De   0x8
    236  .bss                       0x10000148   Lc    3  Sect  De   0x60
    237  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    238  .ARM.Collect$$rtexit$$00000000
                                    0x0000012a   Lc    1  Sect  De   0x2
    239  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    240  .ARM.Collect$$libinit$$00000001
                                    0x0000010e   Lc    1  Sect  De   0x4
    241  .ARM.Collect$$libinit$$00000004
                                    0x00000112   Lc    1  Sect  De 
    242  .ARM.Collect$$libinit$$0000000A
                                    0x00000112   Lc    1  Sect  De 
    243  .ARM.Collect$$libinit$$0000000C
                                    0x00000112   Lc    1  Sect  De 
    244  .ARM.Collect$$libinit$$0000000E
                                    0x00000112   Lc    1  Sect  De 
    245  .ARM.Collect$$libinit$$00000011
                                    0x00000112   Lc    1  Sect  De 
    246  .ARM.Collect$$libinit$$00000013
                                    0x00000112   Lc    1  Sect  De 
    247  .ARM.Collect$$libinit$$00000015
                                    0x00000112   Lc    1  Sect  De 
    248  .ARM.Collect$$libinit$$00000017
                                    0x00000112   Lc    1  Sect  De 
    249  .ARM.Collect$$libinit$$00000019
                                    0x00000112   Lc    1  Sect  De 
    250  .ARM.Collect$$libinit$$0000001B
                                    0x00000112   Lc    1  Sect  De 
    251  .ARM.Collect$$libinit$$0000001D
                                    0x00000112   Lc    1  Sect  De 
    252  .ARM.Collect$$libinit$$0000001F
                                    0x00000112   Lc    1  Sect  De 
    253  .ARM.Collect$$libinit$$00000021
                                    0x00000112   Lc    1  Sect  De 
    254  .ARM.Collect$$libinit$$00000023
                                    0x00000112   Lc    1  Sect  De 
    255  .ARM.Collect$$libinit$$00000025
                                    0x00000112   Lc    1  Sect  De 
    256  .ARM.Collect$$libinit$$0000002C
                                    0x00000112   Lc    1  Sect  De 
    257  .ARM.Collect$$libinit$$0000002E
                                    0x00000112   Lc    1  Sect  De 
    258  .ARM.Collect$$libinit$$00000030
                                    0x00000112   Lc    1  Sect  De 
    259  .ARM.Collect$$libinit$$00000032
                                    0x00000112   Lc    1  Sect  De 
    260  .ARM.Collect$$libinit$$00000033
                                    0x00000112   Lc    1  Sect  De   0x2
    261  ../clib/angel/kernel.s     0x00000000   Lc  Abs  File  De 
    262  .ARM.Collect$$rtexit$$00000002
                                    0x0000012c   Lc    1  Sect  De 
    263  .ARM.Collect$$rtexit$$00000003
                                    0x0000012c   Lc    1  Sect  De   0x4
    264  .ARM.Collect$$rtexit$$00000004
                                    0x00000130   Lc    1  Sect  De   0x6
    265  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    266  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    267  ../fplib/fpinit.s          0x00000000   Lc  Abs  File  De 
    268  x$fpl$fpinit               0x000015c2   Lc    1  Sect  De   0xa
    269  $v0                        0x000015c2   Lc    1   --   De 
    270  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    271  .text                      0x0000024c   Lc    1  Sect  De 
    272  ../clib/angel/boardlib.s   0x00000000   Lc  Abs  File  De 
    273  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    274  ../clib/armsys.c           0x00000000   Lc  Abs  File  De 
    275  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    276  .ARM.Collect$$libshutdown$$00000000
                                    0x00000114   Lc    1  Sect  De   0x2
    277  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    278  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    279  .text                      0x00000258   Lc    1  Sect  De   0x2
    280  ../clib/angel/sys.s        0x00000000   Lc  Abs  File  De 
    281  .text                      0x0000025a   Lc    1  Sect  De 
    282  ../clib/heapalloc.c        0x00000000   Lc  Abs  File  De 
    283  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    284  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    285  ../clib/libinit.s          0x00000000   Lc  Abs  File  De 
    286  .ARM.Collect$$libshutdown$$00000002
                                    0x00000116   Lc    1  Sect  De 
    287  .ARM.Collect$$libshutdown$$00000004
                                    0x00000116   Lc    1  Sect  De 
    288  .ARM.Collect$$libshutdown$$00000007
                                    0x00000116   Lc    1  Sect  De 
    289  .ARM.Collect$$libshutdown$$0000000A
                                    0x00000116   Lc    1  Sect  De 
    290  .ARM.Collect$$libshutdown$$0000000C
                                    0x00000116   Lc    1  Sect  De 
    291  .ARM.Collect$$libshutdown$$0000000F
                                    0x00000116   Lc    1  Sect  De 
    292  .ARM.Collect$$libshutdown$$00000010
                                    0x00000116   Lc    1  Sect  De   0x2
    293  ../clib/angel/rt.s         0x00000000   Lc  Abs  File  De 
    294  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    295  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    296  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    297  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    298  ../clib/angel/sysapp.c     0x00000000   Lc  Abs  File  De 
    299  ../clib/signal.s           0x00000000   Lc  Abs  File  De 
    300  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    301  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    302  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    303  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    304  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    305  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    306  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    307  ../clib/signal.c           0x00000000   Lc  Abs  File  De 
    308  ../clib/angel/scatter.s    0x00000000   Lc  Abs  File  De 
    309  !!!scatter                 0x000000a0   Lc    1  Sect  De   0x34
    310  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    311  !!handler_copy             0x000000d4   Lc    1  Sect  De   0x1a
    312  ../clib/angel/handlers.s   0x00000000   Lc  Abs  File  De 
    313  !!handler_zi               0x000000f0   Lc    1  Sect  De   0x1c
    314  BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
                                    0x00000000   Gb  Abs   --   Hi 
    315  __ARM_use_no_argv          0x00000000   Gb  Abs   --   Hi 
    316  __Vectors                  0x00000000   Gb    1  Data  Hi 
    317  Reset_Handler              0x00000071   Wk    1  Code  Hi   0x1c
    318  am_nmi_isr                 0x0000008d   Wk    1  Code  Hi   0x2
    319  am_memmanage_isr           0x00000091   Wk    1  Code  Hi   0x2
    320  am_adc_isr                 0x00000093   Wk    1  Code  Hi 
    321  am_brownout_isr            0x00000093   Wk    1  Code  Hi 
    322  am_ctimer_isr              0x00000093   Wk    1  Code  Hi 
    323  am_debugmon_isr            0x00000093   Wk    1  Code  Hi 
    324  am_iomaster0_isr           0x00000093   Wk    1  Code  Hi 
    325  am_iomaster1_isr           0x00000093   Wk    1  Code  Hi 
    326  am_ioslave_acc_isr         0x00000093   Wk    1  Code  Hi 
    327  am_ioslave_ios_isr         0x00000093   Wk    1  Code  Hi 
    328  am_pendsv_isr              0x00000093   Wk    1  Code  Hi 
    329  am_svcall_isr              0x00000093   Wk    1  Code  Hi 
    330  am_systick_isr             0x00000093   Wk    1  Code  Hi 
    331  am_uart_isr                0x00000093   Wk    1  Code  Hi 
    332  am_vcomp_isr               0x00000093   Wk    1  Code  Hi 
    333  am_watchdog_isr            0x00000093   Wk    1  Code  Hi 
    334  __main                     0x00000099   Gb    1  Code  Hi   0x8
    335  __scatterload              0x000000a1   Gb    1  Code  Hi 
    336  __scatterload_rt2          0x000000a1   Gb    1  Code  Hi   0x2c
    337  __scatterload_rt2_thumb_only
                                    0x000000a1   Gb    1  Code  Hi 
    338  __scatterload_null         0x000000af   Gb    1  Code  Hi 
    339  __scatterload_copy         0x000000d5   Gb    1  Code  Hi   0x1a
    340  __scatterload_zeroinit     0x000000f1   Gb    1  Code  Hi   0x1c
    341  __rt_lib_init              0x0000010d   Gb    1  Code  De 
    342  __rt_lib_init_fp_1         0x0000010f   Gb    1  Code  Hi 
    343  __rt_lib_init_alloca_1     0x00000113   Gb    1  Code  Hi 
    344  __rt_lib_init_argv_1       0x00000113   Gb    1  Code  Hi 
    345  __rt_lib_init_atexit_1     0x00000113   Gb    1  Code  Hi 
    346  __rt_lib_init_clock_1      0x00000113   Gb    1  Code  Hi 
    347  __rt_lib_init_cpp_1        0x00000113   Gb    1  Code  Hi 
    348  __rt_lib_init_exceptions_1 0x00000113   Gb    1  Code  Hi 
    349  __rt_lib_init_fp_trap_1    0x00000113   Gb    1  Code  Hi 
    350  __rt_lib_init_getenv_1     0x00000113   Gb    1  Code  Hi 
    351  __rt_lib_init_heap_1       0x00000113   Gb    1  Code  Hi 
    352  __rt_lib_init_lc_collate_1 0x00000113   Gb    1  Code  Hi 
    353  __rt_lib_init_lc_ctype_1   0x00000113   Gb    1  Code  Hi 
    354  __rt_lib_init_lc_monetary_1
                                    0x00000113   Gb    1  Code  Hi 
    355  __rt_lib_init_lc_numeric_1 0x00000113   Gb    1  Code  Hi 
    356  __rt_lib_init_lc_time_1    0x00000113   Gb    1  Code  Hi 
    357  __rt_lib_init_preinit_1    0x00000113   Gb    1  Code  Hi 
    358  __rt_lib_init_rand_1       0x00000113   Gb    1  Code  Hi 
    359  __rt_lib_init_return       0x00000113   Gb    1  Code  Hi 
    360  __rt_lib_init_signal_1     0x00000113   Gb    1  Code  Hi 
    361  __rt_lib_init_stdio_1      0x00000113   Gb    1  Code  Hi 
    362  __rt_lib_init_user_alloc_1 0x00000113   Gb    1  Code  Hi 
    363  __rt_lib_shutdown          0x00000115   Gb    1  Code  De 
    364  __rt_lib_shutdown_cpp_1    0x00000117   Gb    1  Code  Hi 
    365  __rt_lib_shutdown_fp_trap_1
                                    0x00000117   Gb    1  Code  Hi 
    366  __rt_lib_shutdown_heap_1   0x00000117   Gb    1  Code  Hi 
    367  __rt_lib_shutdown_return   0x00000117   Gb    1  Code  Hi 
    368  __rt_lib_shutdown_signal_1 0x00000117   Gb    1  Code  Hi 
    369  __rt_lib_shutdown_stdio_1  0x00000117   Gb    1  Code  Hi 
    370  __rt_lib_shutdown_user_alloc_1
                                    0x00000117   Gb    1  Code  Hi 
    371  __rt_entry                 0x00000119   Gb    1  Code  Hi 
    372  __rt_entry_presh_1         0x00000119   Gb    1  Code  Hi 
    373  __rt_entry_sh              0x00000119   Gb    1  Code  Hi 
    374  __rt_entry_li              0x0000011f   Gb    1  Code  Hi 
    375  __rt_entry_postsh_1        0x0000011f   Gb    1  Code  Hi 
    376  __rt_entry_main            0x00000123   Gb    1  Code  Hi 
    377  __rt_entry_postli_1        0x00000123   Gb    1  Code  Hi 
    378  __rt_exit                  0x0000012b   Gb    1  Code  De 
    379  __rt_exit_ls               0x0000012d   Gb    1  Code  Hi 
    380  __rt_exit_prels_1          0x0000012d   Gb    1  Code  Hi 
    381  __rt_exit_exit             0x00000131   Gb    1  Code  Hi 
    382  am_fault_isr               0x00000139   Gb    1  Code  Hi   0x1a
    383  getStackedReg              0x00000153   Gb    1  Code  Hi   0x8
    384  am_hal_flash_delay         0x0000015d   Gb    1  Code  Hi   0x6
    385  am_hal_interrupt_master_enable
                                    0x00000165   Gb    1  Code  Hi   0x8
    386  am_hal_interrupt_master_disable
                                    0x0000016d   Gb    1  Code  Hi   0x8
    387  am_hal_interrupt_master_set
                                    0x00000175   Gb    1  Code  Hi   0x6
    388  __user_initial_stackheap   0x0000017d   Gb    1  Code  Hi   0xa
    389  __aeabi_memclr4            0x00000195   Gb    1  Code  Hi 
    390  __aeabi_memclr8            0x00000195   Gb    1  Code  De 
    391  __rt_memclr_w              0x00000195   Gb    1  Code  De   0x4e
    392  _memset_w                  0x00000199   Gb    1  Code  De 
    393  __use_two_region_memory    0x000001e3   Gb    1  Code  Hi   0x2
    394  __rt_heap_escrow$2region   0x000001e5   Gb    1  Code  De   0x2
    395  __rt_heap_expand$2region   0x000001e7   Gb    1  Code  De   0x2
    396  __user_setup_stackheap     0x000001e9   Gb    1  Code  De   0x4a
    397  exit                       0x00000233   Gb    1  Code  De   0x12
    398  __user_libspace            0x00000245   Wk    1  Code  De   0x8
    399  __user_perproc_libspace    0x00000245   Wk    1  Code  De 
    400  __user_perthread_libspace  0x00000245   Wk    1  Code  De 
    401  _sys_exit                  0x0000024d   Gb    1  Code  De   0x8
    402  __I$use$semihosting        0x00000259   Gb    1  Code  Hi 
    403  __use_no_semihosting_swi   0x00000259   Gb    1  Code  Hi   0x2
    404  __semihosting_library_function
                                    0x0000025b   Gb    1  Code  Hi 
    405  am_bsp_low_power_init      0x0000025b   Gb    1  Code  Hi   0x22
    406  am_bsp_uart_string_print   0x0000027d   Gb    1  Code  Hi   0x8
    407  am_clkgen_isr              0x00000285   Gb    1  Code  Hi   0x12
    408  am_devices_led_array_init  0x0000029d   Gb    1  Code  Hi   0x24
    409  am_devices_led_init        0x000002c1   Gb    1  Code  Hi   0x1e4
    410  am_devices_led_off         0x000004a9   Gb    1  Code  Hi   0xa4
    411  am_devices_led_toggle      0x00000551   Gb    1  Code  Hi   0xa2
    412  am_gpio_isr                0x000005f9   Gb    1  Code  Hi   0x1c
    413  am_hal_clkgen_osc_start    0x00000619   Gb    1  Code  Hi   0x16
    414  am_hal_clkgen_osc_stop     0x0000062f   Gb    1  Code  Hi   0x14
    415  am_hal_clkgen_sysclk_get   0x00000645   Gb    1  Code  Hi   0x40
    416  am_hal_clkgen_sysclk_select
                                    0x000006a5   Gb    1  Code  Hi   0x10
    417  am_hal_gpio_int_clear      0x000006b5   Gb    1  Code  Hi   0xc
    418  am_hal_gpio_int_enable     0x000006c5   Gb    1  Code  Hi   0x18
    419  am_hal_gpio_out_enable_bit_get
                                    0x000006e1   Gb    1  Code  Hi   0x2c
    420  am_hal_interrupt_enable    0x00000711   Gb    1  Code  Hi   0x46
    421  am_hal_mcuctrl_bandgap_disable
                                    0x0000075d   Gb    1  Code  Hi   0xc
    422  am_hal_mcuctrl_bucks_enable
                                    0x0000076d   Gb    1  Code  Hi   0x24
    423  am_hal_mcuctrl_fault_status
                                    0x00000795   Gb    1  Code  Hi   0x34
    424  am_hal_mcuctrl_sram_power_set
                                    0x000007cd   Gb    1  Code  Hi   0xc
    425  am_hal_rtc_alarm_interval_set
                                    0x000007dd   Gb    1  Code  Hi   0x34
    426  am_hal_rtc_int_clear       0x00000811   Gb    1  Code  Hi   0xa
    427  am_hal_rtc_int_enable      0x0000081b   Gb    1  Code  Hi   0x10
    428  am_hal_rtc_osc_disable     0x0000082b   Gb    1  Code  Hi   0xe
    429  am_hal_rtc_osc_enable      0x00000839   Gb    1  Code  Hi   0xe
    430  am_hal_rtc_osc_select      0x00000847   Gb    1  Code  Hi   0x16
    431  am_hal_sysctrl_sleep       0x0000085d   Gb    1  Code  Hi   0x2c
    432  am_hal_uart_clock_disable  0x00000891   Gb    1  Code  Hi   0x18
    433  am_hal_uart_clock_enable   0x000008ad   Gb    1  Code  Hi   0x20
    434  am_hal_uart_config         0x000008d1   Gb    1  Code  Hi   0x64
    435  am_hal_uart_disable        0x00000939   Gb    1  Code  Hi   0x10
    436  am_hal_uart_enable         0x0000094d   Gb    1  Code  Hi   0xe
    437  am_hal_uart_fifo_config    0x00000961   Gb    1  Code  Hi   0xe
    438  am_hal_uart_string_transmit_polled
                                    0x00000975   Gb    1  Code  Hi   0x20
    439  am_hal_vcomp_disable       0x00000999   Gb    1  Code  Hi   0x8
    440  am_util_delay_ms           0x000009a5   Gb    1  Code  Hi   0x1e
    441  am_util_faultisr_collect_data
                                    0x000009c5   Gb    1  Code  Hi   0xb2
    442  am_util_stdio_printf       0x00000a7d   Gb    1  Code  Hi   0x32
    443  am_util_stdio_printf_init  0x00000ab9   Gb    1  Code  Hi   0x6
    444  am_util_stdio_terminal_clear
                                    0x00000ac5   Gb    1  Code  Hi   0xa
    445  am_util_stdio_vsprintf     0x00000ae5   Gb    1  Code  Hi   0x3a4
    446  main                       0x00001121   Gb    1  Code  Hi   0xd4
    447  uart_disable               0x000012e5   Gb    1  Code  Hi   0x62
    448  uart_init                  0x0000134d   Gb    1  Code  Hi   0x72
    449  __aeabi_d2f                0x000014c5   Gb    1  Code  Hi 
    450  _d2f                       0x000014c5   Gb    1  Code  De   0x62
    451  __fpl_dnaninf              0x00001527   Gb    1  Code  De   0x9c
    452  _fp_init                   0x000015c3   Gb    1  Code  De   0xa
    453  __fplib_config_fpu_vfp     0x000015cb   Gb    1  Code  De 
    454  __fplib_config_pureend_doubles
                                    0x000015cb   Gb    1  Code  De 
    455  __fpl_fretinf              0x000015cd   Gb    1  Code  De   0xa
    456  __I$use$fp                 0x000015d6   Gb    1   --   De 
    457  Region$$Table$$Base        0x000015d8   Gb    1   --   Hi 
    458  Region$$Table$$Limit       0x000015f8   Gb    1   --   Hi 
    459  g_sUartConfig              0x10000000   Gb    2  Data  Hi   0x14
    460  g_pfnCharPrint             0x10000014   Gb    2  Data  Hi   0x4
    461  g_ui32HALflags             0x1000001c   Gb    2  Data  Hi   0x4
    462  am_bsp_psLEDs              0x10000020   Gb    2  Data  Hi   0x28
    463  __libspace_start           0x10000148   Gb    3  Data  De   0x60
    464  __temporary_stack_top$libspace
                                    0x100001a8   Gb    3  Data  De 


** Section #12 '.strtab' (SHT_STRTAB)
    Size   : 7172 bytes

            #  Offset String
        ====================================

            1      1: $d
            2      4: $t
            3      7: $d.realdata
            4     19: ../src/deepsleep_wake.c
            5     43: i.am_clkgen_isr
            6     59: i.am_gpio_isr
            7     73: i.main
            8     80: i.uart_disable
            9     95: i.uart_init
           10    107: .data
           11    113: ../../../../../devices/am_devices_led.c
           12    153: i.am_devices_led_array_init
           13    181: i.am_devices_led_init
           14    203: i.am_devices_led_off
           15    224: i.am_devices_led_toggle
           16    248: ../../../../../utils/am_util_delay.c
           17    285: i.am_util_delay_ms
           18    304: ..\..\..\..\..\utils\am_util_faultisr.c
           19    344: .emb_text
           20    354: $v0
           21    358: ../../../../../utils/am_util_faultisr.c
           22    398: i.am_util_faultisr_collect_data
           23    430: ../../../../../utils/am_util_stdio.c
           24    467: i.am_util_stdio_printf
           25    490: i.am_util_stdio_printf_init
           26    518: i.am_util_stdio_terminal_clear
           27    549: i.am_util_stdio_vsprintf
           28    574: i.decstr_to_int
           29    590: decstr_to_int
           30    604: i.divu64_10
           31    616: divu64_10
           32    626: i.ftoa
           33    633: ftoa
           34    638: i.ndigits_in_hex
           35    655: ndigits_in_hex
           36    670: i.ndigits_in_i64
           37    687: ndigits_in_i64
           38    702: i.ndigits_in_u64
           39    719: ndigits_in_u64
           40    734: i.padbuffer
           41    746: padbuffer
           42    756: i.simple_strlen
           43    772: simple_strlen
           44    786: i.uint64_to_hexstr
           45    805: uint64_to_hexstr
           46    822: i.uint64_to_str
           47    838: uint64_to_str
           48    852: .bss
           49    857: g_prfbuf
           50    866: g_bTxtXlate
           51    878: ../keil/startup_keil.s
           52    901: STACK
           53    907: StackMem
           54    916: HEAP
           55    921: HeapMem
           56    929: RESET
           57    935: .text
           58    941: ../am_hal_global.c
           59    960: ../am_hal_clkgen.c
           60    979: i.am_hal_clkgen_osc_start
           61   1005: i.am_hal_clkgen_osc_stop
           62   1030: i.am_hal_clkgen_sysclk_get
           63   1057: i.am_hal_clkgen_sysclk_select
           64   1087: ..\am_hal_flash.c
           65   1105: ../am_hal_flash.c
           66   1123: ../am_hal_gpio.c
           67   1140: i.am_hal_gpio_int_clear
           68   1164: i.am_hal_gpio_int_enable
           69   1189: i.am_hal_gpio_out_enable_bit_get
           70   1222: ..\am_hal_interrupt.c
           71   1244: ../am_hal_interrupt.c
           72   1266: i.am_hal_interrupt_enable
           73   1292: ../am_hal_mcuctrl.c
           74   1312: i.am_hal_mcuctrl_bandgap_disable
           75   1345: i.am_hal_mcuctrl_bucks_enable
           76   1375: i.am_hal_mcuctrl_fault_status
           77   1405: i.am_hal_mcuctrl_sram_power_set
           78   1437: ../am_hal_rtc.c
           79   1453: i.am_hal_rtc_alarm_interval_set
           80   1485: i.am_hal_rtc_int_clear
           81   1508: i.am_hal_rtc_int_enable
           82   1532: i.am_hal_rtc_osc_disable
           83   1557: i.am_hal_rtc_osc_enable
           84   1581: i.am_hal_rtc_osc_select
           85   1605: ../am_hal_sysctrl.c
           86   1625: i.am_hal_sysctrl_sleep
           87   1648: ../am_hal_uart.c
           88   1665: i.am_hal_uart_clock_disable
           89   1693: i.am_hal_uart_clock_enable
           90   1720: i.am_hal_uart_config
           91   1741: i.am_hal_uart_disable
           92   1763: i.am_hal_uart_enable
           93   1784: i.am_hal_uart_fifo_config
           94   1810: i.am_hal_uart_string_transmit_polled
           95   1847: ../am_bsp.c
           96   1859: i.am_bsp_low_power_init
           97   1883: i.am_bsp_uart_string_print
           98   1910: ../am_hal_debug.c
           99   1928: ../am_hal_iom.c
          100   1944: ../am_hal_itm.c
          101   1960: ../am_hal_tpiu.c
          102   1977: ../am_hal_vcomp.c
          103   1995: i.am_hal_vcomp_disable
          104   2018: ../am_hal_i2c_bit_bang.c
          105   2043: ../am_hal_queue.c
          106   2061: dc.s
          107   2066: ../clib/longlong.s
          108   2085: ../clib/memcpset.s
          109   2104: ../clib/heapaux.c
          110   2122: ../clib/angel/startup.s
          111   2146: !!!main
          112   2154: ../fplib/d2f.s
          113   2169: x$fpl$d2f
          114   2179: ../clib/angel/kernel.s
          115   2202: .ARM.Collect$$rtentry$$00000000
          116   2234: ../fplib/dnaninf.s
          117   2253: x$fpl$dnaninf
          118   2267: ../fplib/fretinf.s
          119   2286: x$fpl$fretinf
          120   2300: ../fplib/usenofp.s
          121   2319: x$fpl$usenofp
          122   2333: .ARM.Collect$$rtentry$$00000002
          123   2365: .ARM.Collect$$rtentry$$00000009
          124   2397: .ARM.Collect$$rtentry$$0000000A
          125   2429: .ARM.Collect$$rtentry$$0000000C
          126   2461: .ARM.Collect$$rtentry$$0000000D
          127   2493: .ARM.Collect$$rtentry$$00000004
          128   2525: ../clib/angel/sys.s
          129   2545: ../clib/stdlib.c
          130   2562: ../clib/angel/boardlib.s
          131   2587: ../clib/libinit.s
          132   2605: .ARM.Collect$$libinit$$00000000
          133   2637: .ARM.Collect$$rtexit$$00000000
          134   2668: .ARM.Collect$$libinit$$00000001
          135   2700: .ARM.Collect$$libinit$$00000004
          136   2732: .ARM.Collect$$libinit$$0000000A
          137   2764: .ARM.Collect$$libinit$$0000000C
          138   2796: .ARM.Collect$$libinit$$0000000E
          139   2828: .ARM.Collect$$libinit$$00000011
          140   2860: .ARM.Collect$$libinit$$00000013
          141   2892: .ARM.Collect$$libinit$$00000015
          142   2924: .ARM.Collect$$libinit$$00000017
          143   2956: .ARM.Collect$$libinit$$00000019
          144   2988: .ARM.Collect$$libinit$$0000001B
          145   3020: .ARM.Collect$$libinit$$0000001D
          146   3052: .ARM.Collect$$libinit$$0000001F
          147   3084: .ARM.Collect$$libinit$$00000021
          148   3116: .ARM.Collect$$libinit$$00000023
          149   3148: .ARM.Collect$$libinit$$00000025
          150   3180: .ARM.Collect$$libinit$$0000002C
          151   3212: .ARM.Collect$$libinit$$0000002E
          152   3244: .ARM.Collect$$libinit$$00000030
          153   3276: .ARM.Collect$$libinit$$00000032
          154   3308: .ARM.Collect$$libinit$$00000033
          155   3340: .ARM.Collect$$rtexit$$00000002
          156   3371: .ARM.Collect$$rtexit$$00000003
          157   3402: .ARM.Collect$$rtexit$$00000004
          158   3433: ../clib/armsys.c
          159   3450: ../fplib/fpinit.s
          160   3468: x$fpl$fpinit
          161   3481: ../clib/angel/sysapp.c
          162   3504: .ARM.Collect$$libshutdown$$00000000
          163   3540: ../clib/heapalloc.c
          164   3560: ../clib/signal.c
          165   3577: .ARM.Collect$$libshutdown$$00000002
          166   3613: .ARM.Collect$$libshutdown$$00000004
          167   3649: .ARM.Collect$$libshutdown$$00000007
          168   3685: .ARM.Collect$$libshutdown$$0000000A
          169   3721: .ARM.Collect$$libshutdown$$0000000C
          170   3757: .ARM.Collect$$libshutdown$$0000000F
          171   3793: .ARM.Collect$$libshutdown$$00000010
          172   3829: ../clib/angel/rt.s
          173   3848: ../clib/signal.s
          174   3865: ../clib/angel/scatter.s
          175   3889: !!!scatter
          176   3900: ../clib/angel/handlers.s
          177   3925: !!handler_copy
          178   3940: !!handler_zi
          179   3953: BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2
          180   4139: __ARM_use_no_argv
          181   4157: __Vectors
          182   4167: Reset_Handler
          183   4181: am_nmi_isr
          184   4192: am_memmanage_isr
          185   4209: am_adc_isr
          186   4220: am_brownout_isr
          187   4236: am_ctimer_isr
          188   4250: am_debugmon_isr
          189   4266: am_iomaster0_isr
          190   4283: am_iomaster1_isr
          191   4300: am_ioslave_acc_isr
          192   4319: am_ioslave_ios_isr
          193   4338: am_pendsv_isr
          194   4352: am_svcall_isr
          195   4366: am_systick_isr
          196   4381: am_uart_isr
          197   4393: am_vcomp_isr
          198   4406: am_watchdog_isr
          199   4422: __main
          200   4429: __scatterload
          201   4443: __scatterload_rt2
          202   4461: __scatterload_rt2_thumb_only
          203   4490: __scatterload_null
          204   4509: __scatterload_copy
          205   4528: __scatterload_zeroinit
          206   4551: __rt_lib_init
          207   4565: __rt_lib_init_fp_1
          208   4584: __rt_lib_init_alloca_1
          209   4607: __rt_lib_init_argv_1
          210   4628: __rt_lib_init_atexit_1
          211   4651: __rt_lib_init_clock_1
          212   4673: __rt_lib_init_cpp_1
          213   4693: __rt_lib_init_exceptions_1
          214   4720: __rt_lib_init_fp_trap_1
          215   4744: __rt_lib_init_getenv_1
          216   4767: __rt_lib_init_heap_1
          217   4788: __rt_lib_init_lc_collate_1
          218   4815: __rt_lib_init_lc_ctype_1
          219   4840: __rt_lib_init_lc_monetary_1
          220   4868: __rt_lib_init_lc_numeric_1
          221   4895: __rt_lib_init_lc_time_1
          222   4919: __rt_lib_init_preinit_1
          223   4943: __rt_lib_init_rand_1
          224   4964: __rt_lib_init_return
          225   4985: __rt_lib_init_signal_1
          226   5008: __rt_lib_init_stdio_1
          227   5030: __rt_lib_init_user_alloc_1
          228   5057: __rt_lib_shutdown
          229   5075: __rt_lib_shutdown_cpp_1
          230   5099: __rt_lib_shutdown_fp_trap_1
          231   5127: __rt_lib_shutdown_heap_1
          232   5152: __rt_lib_shutdown_return
          233   5177: __rt_lib_shutdown_signal_1
          234   5204: __rt_lib_shutdown_stdio_1
          235   5230: __rt_lib_shutdown_user_alloc_1
          236   5261: __rt_entry
          237   5272: __rt_entry_presh_1
          238   5291: __rt_entry_sh
          239   5305: __rt_entry_li
          240   5319: __rt_entry_postsh_1
          241   5339: __rt_entry_main
          242   5355: __rt_entry_postli_1
          243   5375: __rt_exit
          244   5385: __rt_exit_ls
          245   5398: __rt_exit_prels_1
          246   5416: __rt_exit_exit
          247   5431: am_fault_isr
          248   5444: getStackedReg
          249   5458: am_hal_flash_delay
          250   5477: am_hal_interrupt_master_enable
          251   5508: am_hal_interrupt_master_disable
          252   5540: am_hal_interrupt_master_set
          253   5568: __user_initial_stackheap
          254   5593: __aeabi_memclr4
          255   5609: __aeabi_memclr8
          256   5625: __rt_memclr_w
          257   5639: _memset_w
          258   5649: __use_two_region_memory
          259   5673: __rt_heap_escrow$2region
          260   5698: __rt_heap_expand$2region
          261   5723: __user_setup_stackheap
          262   5746: exit
          263   5751: __user_libspace
          264   5767: __user_perproc_libspace
          265   5791: __user_perthread_libspace
          266   5817: _sys_exit
          267   5827: __I$use$semihosting
          268   5847: __use_no_semihosting_swi
          269   5872: __semihosting_library_function
          270   5903: am_bsp_low_power_init
          271   5925: am_bsp_uart_string_print
          272   5950: am_clkgen_isr
          273   5964: am_devices_led_array_init
          274   5990: am_devices_led_init
          275   6010: am_devices_led_off
          276   6029: am_devices_led_toggle
          277   6051: am_gpio_isr
          278   6063: am_hal_clkgen_osc_start
          279   6087: am_hal_clkgen_osc_stop
          280   6110: am_hal_clkgen_sysclk_get
          281   6135: am_hal_clkgen_sysclk_select
          282   6163: am_hal_gpio_int_clear
          283   6185: am_hal_gpio_int_enable
          284   6208: am_hal_gpio_out_enable_bit_get
          285   6239: am_hal_interrupt_enable
          286   6263: am_hal_mcuctrl_bandgap_disable
          287   6294: am_hal_mcuctrl_bucks_enable
          288   6322: am_hal_mcuctrl_fault_status
          289   6350: am_hal_mcuctrl_sram_power_set
          290   6380: am_hal_rtc_alarm_interval_set
          291   6410: am_hal_rtc_int_clear
          292   6431: am_hal_rtc_int_enable
          293   6453: am_hal_rtc_osc_disable
          294   6476: am_hal_rtc_osc_enable
          295   6498: am_hal_rtc_osc_select
          296   6520: am_hal_sysctrl_sleep
          297   6541: am_hal_uart_clock_disable
          298   6567: am_hal_uart_clock_enable
          299   6592: am_hal_uart_config
          300   6611: am_hal_uart_disable
          301   6631: am_hal_uart_enable
          302   6650: am_hal_uart_fifo_config
          303   6674: am_hal_uart_string_transmit_polled
          304   6709: am_hal_vcomp_disable
          305   6730: am_util_delay_ms
          306   6747: am_util_faultisr_collect_data
          307   6777: am_util_stdio_printf
          308   6798: am_util_stdio_printf_init
          309   6824: am_util_stdio_terminal_clear
          310   6853: am_util_stdio_vsprintf
          311   6876: main
          312   6881: uart_disable
          313   6894: uart_init
          314   6904: __aeabi_d2f
          315   6916: _d2f
          316   6921: __fpl_dnaninf
          317   6935: _fp_init
          318   6944: __fplib_config_fpu_vfp
          319   6967: __fplib_config_pureend_doubles
          320   6998: __fpl_fretinf
          321   7012: __I$use$fp
          322   7023: Region$$Table$$Base
          323   7043: Region$$Table$$Limit
          324   7064: g_sUartConfig
          325   7078: g_pfnCharPrint
          326   7093: g_ui32HALflags
          327   7108: am_bsp_psLEDs
          328   7122: __libspace_start
          329   7139: __temporary_stack_top$libspace
          330   7170: 
          331   7171: 


** Section #13 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #14 '.comment' (SHT_PROGBITS)
    Size   : 14348 bytes


** Section #15 '.shstrtab' (SHT_STRTAB)
    Size   : 148 bytes

            #  Offset String
        ====================================

            1      1: FLASH
            2      7: SRAM
            3     12: .debug_abbrev
            4     26: .debug_frame
            5     39: .debug_info
            6     51: .debug_line
            7     63: .debug_loc
            8     74: .debug_macinfo
            9     89: .debug_pubnames
           10    105: .symtab
           11    113: .strtab
           12    121: .note
           13    127: .comment
           14    136: .shstrtab
           15    146: 
           16    147: 


